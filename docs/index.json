{
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1AbsoluteColumnNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1AbsoluteColumnNode.html",
    "title": "Class A1AbsoluteColumnNode | OpenLanguage Documentation",
    "summary": "Class A1AbsoluteColumnNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class A1AbsoluteColumnNode : A1ColumnNode Inheritance object Node ExpressionNode ColumnNode<ulong> A1ColumnNode A1AbsoluteColumnNode Inherited Members ColumnNode<ulong>.ColumnSpecifier ColumnNode<ulong>.Precedence ColumnNode<ulong>.ReplaceChild(int, Node) ColumnNode<ulong>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors A1AbsoluteColumnNode(ulong, List<Node>?, List<Node>?) public A1AbsoluteColumnNode(ulong val, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val ulong leadingWhitespace List<Node> trailingWhitespace List<Node> Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1AbsoluteRowNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1AbsoluteRowNode.html",
    "title": "Class A1AbsoluteRowNode | OpenLanguage Documentation",
    "summary": "Class A1AbsoluteRowNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class A1AbsoluteRowNode : A1RowNode Inheritance object Node ExpressionNode RowNode<ulong> A1RowNode A1AbsoluteRowNode Inherited Members RowNode<ulong>.RowSpecifier RowNode<ulong>.Precedence RowNode<ulong>.ReplaceChild(int, Node) RowNode<ulong>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors A1AbsoluteRowNode(ulong, List<Node>?, List<Node>?) public A1AbsoluteRowNode(ulong val, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val ulong leadingWhitespace List<Node> trailingWhitespace List<Node> Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1CellNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1CellNode.html",
    "title": "Class A1CellNode | OpenLanguage Documentation",
    "summary": "Class A1CellNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class A1CellNode : CellNode<A1RowNode, ulong, A1ColumnNode, ulong> Inheritance object Node ExpressionNode CellNode<A1RowNode, ulong, A1ColumnNode, ulong> A1CellNode Inherited Members CellNode<A1RowNode, ulong, A1ColumnNode, ulong>.Row CellNode<A1RowNode, ulong, A1ColumnNode, ulong>.Column CellNode<A1RowNode, ulong, A1ColumnNode, ulong>.Precedence CellNode<A1RowNode, ulong, A1ColumnNode, ulong>.ToRawString() CellNode<A1RowNode, ulong, A1ColumnNode, ulong>.Children<O>() CellNode<A1RowNode, ulong, A1ColumnNode, ulong>.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.Precedence ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors A1CellNode(A1ColumnNode, A1RowNode) public A1CellNode(A1ColumnNode column, A1RowNode row) Parameters column A1ColumnNode row A1RowNode Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1ColumnNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1ColumnNode.html",
    "title": "Class A1ColumnNode | OpenLanguage Documentation",
    "summary": "Class A1ColumnNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public abstract class A1ColumnNode : ColumnNode<ulong> Inheritance object Node ExpressionNode ColumnNode<ulong> A1ColumnNode Derived A1AbsoluteColumnNode A1ColumnOnlyNode A1RelativeColumnNode Inherited Members ColumnNode<ulong>.ColumnSpecifier ColumnNode<ulong>.Precedence ColumnNode<ulong>.ReplaceChild(int, Node) ColumnNode<ulong>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors A1ColumnNode(ulong, List<Node>?, List<Node>?) public A1ColumnNode(ulong val, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val ulong leadingWhitespace List<Node> trailingWhitespace List<Node> Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1ColumnOnlyNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1ColumnOnlyNode.html",
    "title": "Class A1ColumnOnlyNode | OpenLanguage Documentation",
    "summary": "Class A1ColumnOnlyNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class A1ColumnOnlyNode : A1ColumnNode Inheritance object Node ExpressionNode ColumnNode<ulong> A1ColumnNode A1ColumnOnlyNode Inherited Members A1ColumnNode.ToRawString() ColumnNode<ulong>.ColumnSpecifier ColumnNode<ulong>.Precedence ColumnNode<ulong>.ReplaceChild(int, Node) ColumnNode<ulong>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors A1ColumnOnlyNode(ulong) public A1ColumnOnlyNode(ulong val) Parameters val ulong"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1R1C1CommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1R1C1CommandFunctionNode.html",
    "title": "Class A1R1C1CommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class A1R1C1CommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class A1R1C1CommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode A1R1C1CommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors A1R1C1CommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public A1R1C1CommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1RelativeColumnNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1RelativeColumnNode.html",
    "title": "Class A1RelativeColumnNode | OpenLanguage Documentation",
    "summary": "Class A1RelativeColumnNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class A1RelativeColumnNode : A1ColumnNode Inheritance object Node ExpressionNode ColumnNode<ulong> A1ColumnNode A1RelativeColumnNode Inherited Members A1ColumnNode.ToRawString() ColumnNode<ulong>.ColumnSpecifier ColumnNode<ulong>.Precedence ColumnNode<ulong>.ReplaceChild(int, Node) ColumnNode<ulong>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors A1RelativeColumnNode(ulong, List<Node>?, List<Node>?) public A1RelativeColumnNode(ulong val, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val ulong leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1RelativeRowNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1RelativeRowNode.html",
    "title": "Class A1RelativeRowNode | OpenLanguage Documentation",
    "summary": "Class A1RelativeRowNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class A1RelativeRowNode : A1RowNode Inheritance object Node ExpressionNode RowNode<ulong> A1RowNode A1RelativeRowNode Inherited Members RowNode<ulong>.RowSpecifier RowNode<ulong>.ToRawString() RowNode<ulong>.Precedence RowNode<ulong>.ReplaceChild(int, Node) RowNode<ulong>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors A1RelativeRowNode(ulong, List<Node>?, List<Node>?) public A1RelativeRowNode(ulong val, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val ulong leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1RowNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1RowNode.html",
    "title": "Class A1RowNode | OpenLanguage Documentation",
    "summary": "Class A1RowNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public abstract class A1RowNode : RowNode<ulong> Inheritance object Node ExpressionNode RowNode<ulong> A1RowNode Derived A1AbsoluteRowNode A1RelativeRowNode A1RowOnlyNode Inherited Members RowNode<ulong>.RowSpecifier RowNode<ulong>.ToRawString() RowNode<ulong>.Precedence RowNode<ulong>.ReplaceChild(int, Node) RowNode<ulong>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors A1RowNode(ulong, List<Node>?, List<Node>?) public A1RowNode(ulong val, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val ulong leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1RowOnlyNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.A1RowOnlyNode.html",
    "title": "Class A1RowOnlyNode | OpenLanguage Documentation",
    "summary": "Class A1RowOnlyNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class A1RowOnlyNode : A1RowNode Inheritance object Node ExpressionNode RowNode<ulong> A1RowNode A1RowOnlyNode Inherited Members RowNode<ulong>.RowSpecifier RowNode<ulong>.ToRawString() RowNode<ulong>.Precedence RowNode<ulong>.ReplaceChild(int, Node) RowNode<ulong>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors A1RowOnlyNode(ulong) public A1RowOnlyNode(ulong val) Parameters val ulong"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AbsRefMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AbsRefMacroFunctionNode.html",
    "title": "Class AbsRefMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class AbsRefMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AbsRefMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode AbsRefMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AbsRefMacroFunctionNode(string?, List<Node>?, List<Node>?) public AbsRefMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AbsStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AbsStandardFunctionNode.html",
    "title": "Class AbsStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AbsStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AbsStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AbsStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AbsStandardFunctionNode(string?, List<Node>?, List<Node>?) public AbsStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AccrIntMStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AccrIntMStandardFunctionNode.html",
    "title": "Class AccrIntMStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AccrIntMStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AccrIntMStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AccrIntMStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AccrIntMStandardFunctionNode(string?, List<Node>?, List<Node>?) public AccrIntMStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AccrIntStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AccrIntStandardFunctionNode.html",
    "title": "Class AccrIntStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AccrIntStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AccrIntStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AccrIntStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AccrIntStandardFunctionNode(string?, List<Node>?, List<Node>?) public AccrIntStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AcosStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AcosStandardFunctionNode.html",
    "title": "Class AcosStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AcosStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AcosStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AcosStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AcosStandardFunctionNode(string?, List<Node>?, List<Node>?) public AcosStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AcoshStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AcoshStandardFunctionNode.html",
    "title": "Class AcoshStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AcoshStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AcoshStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AcoshStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AcoshStandardFunctionNode(string?, List<Node>?, List<Node>?) public AcoshStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AcotFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AcotFutureFunctionNode.html",
    "title": "Class AcotFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class AcotFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AcotFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode AcotFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AcotFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public AcotFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AcothFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AcothFutureFunctionNode.html",
    "title": "Class AcothFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class AcothFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AcothFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode AcothFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AcothFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public AcothFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ActivateCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ActivateCommandFunctionNode.html",
    "title": "Class ActivateCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ActivateCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ActivateCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ActivateCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ActivateCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ActivateCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ActivateNextCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ActivateNextCommandFunctionNode.html",
    "title": "Class ActivateNextCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ActivateNextCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ActivateNextCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ActivateNextCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ActivateNextCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ActivateNextCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ActivateNotesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ActivateNotesCommandFunctionNode.html",
    "title": "Class ActivateNotesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ActivateNotesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ActivateNotesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ActivateNotesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ActivateNotesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ActivateNotesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ActivatePrevCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ActivatePrevCommandFunctionNode.html",
    "title": "Class ActivatePrevCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ActivatePrevCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ActivatePrevCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ActivatePrevCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ActivatePrevCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ActivatePrevCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ActiveCellFontCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ActiveCellFontCommandFunctionNode.html",
    "title": "Class ActiveCellFontCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ActiveCellFontCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ActiveCellFontCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ActiveCellFontCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ActiveCellFontCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ActiveCellFontCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ActiveCellMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ActiveCellMacroFunctionNode.html",
    "title": "Class ActiveCellMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ActiveCellMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ActiveCellMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ActiveCellMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ActiveCellMacroFunctionNode(string?, List<Node>?, List<Node>?) public ActiveCellMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddArrowCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddArrowCommandFunctionNode.html",
    "title": "Class AddArrowCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AddArrowCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AddArrowCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AddArrowCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AddArrowCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AddArrowCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddBarMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddBarMacroFunctionNode.html",
    "title": "Class AddBarMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class AddBarMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AddBarMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode AddBarMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AddBarMacroFunctionNode(string?, List<Node>?, List<Node>?) public AddBarMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddChartAutoFormatCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddChartAutoFormatCommandFunctionNode.html",
    "title": "Class AddChartAutoFormatCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AddChartAutoFormatCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AddChartAutoFormatCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AddChartAutoFormatCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AddChartAutoFormatCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AddChartAutoFormatCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddCommandMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddCommandMacroFunctionNode.html",
    "title": "Class AddCommandMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class AddCommandMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AddCommandMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode AddCommandMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AddCommandMacroFunctionNode(string?, List<Node>?, List<Node>?) public AddCommandMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddListItemCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddListItemCommandFunctionNode.html",
    "title": "Class AddListItemCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AddListItemCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AddListItemCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AddListItemCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AddListItemCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AddListItemCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddMenuMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddMenuMacroFunctionNode.html",
    "title": "Class AddMenuMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class AddMenuMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AddMenuMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode AddMenuMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AddMenuMacroFunctionNode(string?, List<Node>?, List<Node>?) public AddMenuMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddNode.html",
    "title": "Class AddNode | OpenLanguage Documentation",
    "summary": "Class AddNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AddNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode AddNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AddNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public AddNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddOverlayCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddOverlayCommandFunctionNode.html",
    "title": "Class AddOverlayCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AddOverlayCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AddOverlayCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AddOverlayCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AddOverlayCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AddOverlayCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddPrintAreaCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddPrintAreaCommandFunctionNode.html",
    "title": "Class AddPrintAreaCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AddPrintAreaCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AddPrintAreaCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AddPrintAreaCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AddPrintAreaCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AddPrintAreaCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddToolCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddToolCommandFunctionNode.html",
    "title": "Class AddToolCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AddToolCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AddToolCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AddToolCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AddToolCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AddToolCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddToolbarMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddToolbarMacroFunctionNode.html",
    "title": "Class AddToolbarMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class AddToolbarMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AddToolbarMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode AddToolbarMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AddToolbarMacroFunctionNode(string?, List<Node>?, List<Node>?) public AddToolbarMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddinManagerCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddinManagerCommandFunctionNode.html",
    "title": "Class AddinManagerCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AddinManagerCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AddinManagerCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AddinManagerCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AddinManagerCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AddinManagerCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddressStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AddressStandardFunctionNode.html",
    "title": "Class AddressStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AddressStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AddressStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AddressStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AddressStandardFunctionNode(string?, List<Node>?, List<Node>?) public AddressStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AggregateFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AggregateFutureFunctionNode.html",
    "title": "Class AggregateFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class AggregateFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AggregateFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode AggregateFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AggregateFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public AggregateFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AlertCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AlertCommandFunctionNode.html",
    "title": "Class AlertCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AlertCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AlertCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AlertCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AlertCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AlertCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AlignmentCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AlignmentCommandFunctionNode.html",
    "title": "Class AlignmentCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AlignmentCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AlignmentCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AlignmentCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AlignmentCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AlignmentCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AmorDegrCStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AmorDegrCStandardFunctionNode.html",
    "title": "Class AmorDegrCStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AmorDegrCStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AmorDegrCStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AmorDegrCStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AmorDegrCStandardFunctionNode(string?, List<Node>?, List<Node>?) public AmorDegrCStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AmorLinCStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AmorLinCStandardFunctionNode.html",
    "title": "Class AmorLinCStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AmorLinCStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AmorLinCStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AmorLinCStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AmorLinCStandardFunctionNode(string?, List<Node>?, List<Node>?) public AmorLinCStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AmpersandLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AmpersandLiteralNode.html",
    "title": "Class AmpersandLiteralNode | OpenLanguage Documentation",
    "summary": "Class AmpersandLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AmpersandLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode AmpersandLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AmpersandLiteralNode(string, List<Node>?, List<Node>?) public AmpersandLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AndNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AndNode.html",
    "title": "Class AndNode | OpenLanguage Documentation",
    "summary": "Class AndNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AndNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode AndNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AndNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public AndNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AndStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AndStandardFunctionNode.html",
    "title": "Class AndStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AndStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AndStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AndStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AndStandardFunctionNode(string?, List<Node>?, List<Node>?) public AndStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppActivateCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppActivateCommandFunctionNode.html",
    "title": "Class AppActivateCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AppActivateCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AppActivateCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AppActivateCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppActivateCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AppActivateCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppActivateMicrosoftCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppActivateMicrosoftCommandFunctionNode.html",
    "title": "Class AppActivateMicrosoftCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AppActivateMicrosoftCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AppActivateMicrosoftCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AppActivateMicrosoftCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppActivateMicrosoftCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AppActivateMicrosoftCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppMaximizeCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppMaximizeCommandFunctionNode.html",
    "title": "Class AppMaximizeCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AppMaximizeCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AppMaximizeCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AppMaximizeCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppMaximizeCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AppMaximizeCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppMinimizeCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppMinimizeCommandFunctionNode.html",
    "title": "Class AppMinimizeCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AppMinimizeCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AppMinimizeCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AppMinimizeCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppMinimizeCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AppMinimizeCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppMoveCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppMoveCommandFunctionNode.html",
    "title": "Class AppMoveCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AppMoveCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AppMoveCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AppMoveCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppMoveCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AppMoveCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppRestoreCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppRestoreCommandFunctionNode.html",
    "title": "Class AppRestoreCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AppRestoreCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AppRestoreCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AppRestoreCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppRestoreCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AppRestoreCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppSizeCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppSizeCommandFunctionNode.html",
    "title": "Class AppSizeCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AppSizeCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AppSizeCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AppSizeCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppSizeCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AppSizeCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppTitleMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AppTitleMacroFunctionNode.html",
    "title": "Class AppTitleMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class AppTitleMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AppTitleMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode AppTitleMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AppTitleMacroFunctionNode(string?, List<Node>?, List<Node>?) public AppTitleMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ApplyNamesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ApplyNamesCommandFunctionNode.html",
    "title": "Class ApplyNamesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ApplyNamesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ApplyNamesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ApplyNamesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ApplyNamesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ApplyNamesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ApplyStyleCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ApplyStyleCommandFunctionNode.html",
    "title": "Class ApplyStyleCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ApplyStyleCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ApplyStyleCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ApplyStyleCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ApplyStyleCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ApplyStyleCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ArabicFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ArabicFutureFunctionNode.html",
    "title": "Class ArabicFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ArabicFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ArabicFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ArabicFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ArabicFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ArabicFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AreasStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AreasStandardFunctionNode.html",
    "title": "Class AreasStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AreasStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AreasStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AreasStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AreasStandardFunctionNode(string?, List<Node>?, List<Node>?) public AreasStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ArgumentMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ArgumentMacroFunctionNode.html",
    "title": "Class ArgumentMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ArgumentMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ArgumentMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ArgumentMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ArgumentMacroFunctionNode(string?, List<Node>?, List<Node>?) public ArgumentMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ArrangeAllCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ArrangeAllCommandFunctionNode.html",
    "title": "Class ArrangeAllCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ArrangeAllCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ArrangeAllCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ArrangeAllCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ArrangeAllCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ArrangeAllCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ArrayNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ArrayNode.html",
    "title": "Class ArrayNode | OpenLanguage Documentation",
    "summary": "Class ArrayNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ArrayNode : ExpressionNode Inheritance object Node ExpressionNode ArrayNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ArrayNode(List<List<ExpressionNode>>, List<Node>?, List<Node>?) public ArrayNode(List<List<ExpressionNode>> rows, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rows List<List<ExpressionNode>> leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Rows public List<List<ExpressionNode>> Rows { get; set; } Property Value List<List<ExpressionNode>> Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ArrayToTextFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ArrayToTextFutureFunctionNode.html",
    "title": "Class ArrayToTextFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ArrayToTextFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ArrayToTextFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ArrayToTextFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ArrayToTextFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ArrayToTextFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AscStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AscStandardFunctionNode.html",
    "title": "Class AscStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AscStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AscStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AscStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AscStandardFunctionNode(string?, List<Node>?, List<Node>?) public AscStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AsinStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AsinStandardFunctionNode.html",
    "title": "Class AsinStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AsinStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AsinStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AsinStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AsinStandardFunctionNode(string?, List<Node>?, List<Node>?) public AsinStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AsinhStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AsinhStandardFunctionNode.html",
    "title": "Class AsinhStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AsinhStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AsinhStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AsinhStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AsinhStandardFunctionNode(string?, List<Node>?, List<Node>?) public AsinhStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AssignToObjectCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AssignToObjectCommandFunctionNode.html",
    "title": "Class AssignToObjectCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AssignToObjectCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AssignToObjectCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AssignToObjectCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AssignToObjectCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AssignToObjectCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AssignToToolCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AssignToToolCommandFunctionNode.html",
    "title": "Class AssignToToolCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AssignToToolCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AssignToToolCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AssignToToolCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AssignToToolCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AssignToToolCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AsteriskLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AsteriskLiteralNode.html",
    "title": "Class AsteriskLiteralNode | OpenLanguage Documentation",
    "summary": "Class AsteriskLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AsteriskLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode AsteriskLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AsteriskLiteralNode(string, List<Node>?, List<Node>?) public AsteriskLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AtSuffixNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AtSuffixNode.html",
    "title": "Class AtSuffixNode | OpenLanguage Documentation",
    "summary": "Class AtSuffixNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AtSuffixNode : UnaryOperatorNode Inheritance object Node ExpressionNode UnaryOperatorNode AtSuffixNode Inherited Members UnaryOperatorNode.Operand UnaryOperatorNode.Operator ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AtSuffixNode(ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public AtSuffixNode(ExpressionNode op, ExpressionNode operand, List<Node>? lws = null, List<Node>? tws = null) Parameters op ExpressionNode operand ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AtSymbolLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AtSymbolLiteralNode.html",
    "title": "Class AtSymbolLiteralNode | OpenLanguage Documentation",
    "summary": "Class AtSymbolLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AtSymbolLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode AtSymbolLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AtSymbolLiteralNode(string, List<Node>?, List<Node>?) public AtSymbolLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AtanStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AtanStandardFunctionNode.html",
    "title": "Class AtanStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AtanStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AtanStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AtanStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AtanStandardFunctionNode(string?, List<Node>?, List<Node>?) public AtanStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AtanToStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AtanToStandardFunctionNode.html",
    "title": "Class AtanToStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AtanToStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AtanToStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AtanToStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AtanToStandardFunctionNode(string?, List<Node>?, List<Node>?) public AtanToStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AtanhStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AtanhStandardFunctionNode.html",
    "title": "Class AtanhStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AtanhStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AtanhStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AtanhStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AtanhStandardFunctionNode(string?, List<Node>?, List<Node>?) public AtanhStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AttachTextCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AttachTextCommandFunctionNode.html",
    "title": "Class AttachTextCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AttachTextCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AttachTextCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AttachTextCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AttachTextCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AttachTextCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AttachToolbarsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AttachToolbarsCommandFunctionNode.html",
    "title": "Class AttachToolbarsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AttachToolbarsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AttachToolbarsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AttachToolbarsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AttachToolbarsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AttachToolbarsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AttributesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AttributesCommandFunctionNode.html",
    "title": "Class AttributesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AttributesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AttributesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AttributesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AttributesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AttributesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AutoOutlineCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AutoOutlineCommandFunctionNode.html",
    "title": "Class AutoOutlineCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AutoOutlineCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AutoOutlineCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AutoOutlineCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AutoOutlineCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AutoOutlineCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AutocorrectCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AutocorrectCommandFunctionNode.html",
    "title": "Class AutocorrectCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AutocorrectCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AutocorrectCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AutocorrectCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AutocorrectCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AutocorrectCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AveDevStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AveDevStandardFunctionNode.html",
    "title": "Class AveDevStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AveDevStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AveDevStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AveDevStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AveDevStandardFunctionNode(string?, List<Node>?, List<Node>?) public AveDevStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AverageAStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AverageAStandardFunctionNode.html",
    "title": "Class AverageAStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AverageAStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AverageAStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AverageAStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AverageAStandardFunctionNode(string?, List<Node>?, List<Node>?) public AverageAStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AverageIfStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AverageIfStandardFunctionNode.html",
    "title": "Class AverageIfStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AverageIfStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AverageIfStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AverageIfStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AverageIfStandardFunctionNode(string?, List<Node>?, List<Node>?) public AverageIfStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AverageIfsStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AverageIfsStandardFunctionNode.html",
    "title": "Class AverageIfsStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AverageIfsStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AverageIfsStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AverageIfsStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AverageIfsStandardFunctionNode(string?, List<Node>?, List<Node>?) public AverageIfsStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AverageStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AverageStandardFunctionNode.html",
    "title": "Class AverageStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class AverageStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AverageStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode AverageStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AverageStandardFunctionNode(string?, List<Node>?, List<Node>?) public AverageStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.AxesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.AxesCommandFunctionNode.html",
    "title": "Class AxesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class AxesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class AxesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode AxesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AxesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public AxesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BahtTextStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BahtTextStandardFunctionNode.html",
    "title": "Class BahtTextStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class BahtTextStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BahtTextStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode BahtTextStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BahtTextStandardFunctionNode(string?, List<Node>?, List<Node>?) public BahtTextStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BangNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BangNode.html",
    "title": "Class BangNode | OpenLanguage Documentation",
    "summary": "Class BangNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BangNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode BangNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BangNode(string, List<Node>?, List<Node>?) public BangNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BangReferenceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BangReferenceNode.html",
    "title": "Class BangReferenceNode | OpenLanguage Documentation",
    "summary": "Class BangReferenceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll Represents a reference prefixed with a bang, e.g., \"!MyName\" or \"!A1\". public class BangReferenceNode : ExpressionNode Inheritance object Node ExpressionNode BangReferenceNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BangReferenceNode(BangNode, ExpressionNode, List<Node>?, List<Node>?) public BangReferenceNode(BangNode bang, ExpressionNode reference, List<Node>? leadingWs = null, List<Node>? trailingWs = null) Parameters bang BangNode reference ExpressionNode leadingWs List<Node> trailingWs List<Node> Properties Bang public BangNode Bang { get; set; } Property Value BangNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Reference public ExpressionNode Reference { get; set; } Property Value ExpressionNode Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BaseFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BaseFutureFunctionNode.html",
    "title": "Class BaseFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class BaseFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BaseFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode BaseFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BaseFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public BaseFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BeepCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BeepCommandFunctionNode.html",
    "title": "Class BeepCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class BeepCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BeepCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode BeepCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BeepCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public BeepCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BesseliStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BesseliStandardFunctionNode.html",
    "title": "Class BesseliStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class BesseliStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BesseliStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode BesseliStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BesseliStandardFunctionNode(string?, List<Node>?, List<Node>?) public BesseliStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BesseljStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BesseljStandardFunctionNode.html",
    "title": "Class BesseljStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class BesseljStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BesseljStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode BesseljStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BesseljStandardFunctionNode(string?, List<Node>?, List<Node>?) public BesseljStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BesselkStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BesselkStandardFunctionNode.html",
    "title": "Class BesselkStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class BesselkStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BesselkStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode BesselkStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BesselkStandardFunctionNode(string?, List<Node>?, List<Node>?) public BesselkStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BesselyStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BesselyStandardFunctionNode.html",
    "title": "Class BesselyStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class BesselyStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BesselyStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode BesselyStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BesselyStandardFunctionNode(string?, List<Node>?, List<Node>?) public BesselyStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BetaDistFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BetaDistFutureFunctionNode.html",
    "title": "Class BetaDistFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class BetaDistFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BetaDistFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode BetaDistFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BetaDistFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public BetaDistFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BetaDistStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BetaDistStandardFunctionNode.html",
    "title": "Class BetaDistStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class BetaDistStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BetaDistStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode BetaDistStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BetaDistStandardFunctionNode(string?, List<Node>?, List<Node>?) public BetaDistStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BetaInvFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BetaInvFutureFunctionNode.html",
    "title": "Class BetaInvFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class BetaInvFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BetaInvFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode BetaInvFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BetaInvFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public BetaInvFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BetaInvStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BetaInvStandardFunctionNode.html",
    "title": "Class BetaInvStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class BetaInvStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BetaInvStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode BetaInvStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BetaInvStandardFunctionNode(string?, List<Node>?, List<Node>?) public BetaInvStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinToDecStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinToDecStandardFunctionNode.html",
    "title": "Class BinToDecStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class BinToDecStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BinToDecStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode BinToDecStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BinToDecStandardFunctionNode(string?, List<Node>?, List<Node>?) public BinToDecStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinToHexStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinToHexStandardFunctionNode.html",
    "title": "Class BinToHexStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class BinToHexStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BinToHexStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode BinToHexStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BinToHexStandardFunctionNode(string?, List<Node>?, List<Node>?) public BinToHexStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinToOctStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinToOctStandardFunctionNode.html",
    "title": "Class BinToOctStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class BinToOctStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BinToOctStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode BinToOctStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BinToOctStandardFunctionNode(string?, List<Node>?, List<Node>?) public BinToOctStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinaryOperatorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinaryOperatorNode.html",
    "title": "Class BinaryOperatorNode | OpenLanguage Documentation",
    "summary": "Class BinaryOperatorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public abstract class BinaryOperatorNode : ExpressionNode Inheritance object Node ExpressionNode BinaryOperatorNode Derived AddNode AndNode ConcatenateNode DivideNode EqualNode GreaterThanNode GreaterThanOrEqualNode IntersectionNode LessThanNode LessThanOrEqualNode ModuloNode MultiplyNode NotEqualNode PowerNode RangeNode SubtractNode UnionNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.Precedence ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BinaryOperatorNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) protected BinaryOperatorNode(ExpressionNode left, ExpressionNode op, ExpressionNode right, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters left ExpressionNode op ExpressionNode right ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Left public ExpressionNode Left { get; set; } Property Value ExpressionNode Operator public ExpressionNode Operator { get; set; } Property Value ExpressionNode Right public ExpressionNode Right { get; set; } Property Value ExpressionNode Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinomDistFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinomDistFutureFunctionNode.html",
    "title": "Class BinomDistFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class BinomDistFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BinomDistFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode BinomDistFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BinomDistFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public BinomDistFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinomDistRangeFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinomDistRangeFutureFunctionNode.html",
    "title": "Class BinomDistRangeFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class BinomDistRangeFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BinomDistRangeFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode BinomDistRangeFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BinomDistRangeFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public BinomDistRangeFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinomDistStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinomDistStandardFunctionNode.html",
    "title": "Class BinomDistStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class BinomDistStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BinomDistStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode BinomDistStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BinomDistStandardFunctionNode(string?, List<Node>?, List<Node>?) public BinomDistStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinomInvFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BinomInvFutureFunctionNode.html",
    "title": "Class BinomInvFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class BinomInvFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BinomInvFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode BinomInvFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BinomInvFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public BinomInvFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BitAndFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BitAndFutureFunctionNode.html",
    "title": "Class BitAndFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class BitAndFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BitAndFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode BitAndFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BitAndFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public BitAndFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BitLShiftFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BitLShiftFutureFunctionNode.html",
    "title": "Class BitLShiftFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class BitLShiftFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BitLShiftFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode BitLShiftFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BitLShiftFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public BitLShiftFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BitOrFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BitOrFutureFunctionNode.html",
    "title": "Class BitOrFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class BitOrFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BitOrFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode BitOrFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BitOrFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public BitOrFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BitRShiftFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BitRShiftFutureFunctionNode.html",
    "title": "Class BitRShiftFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class BitRShiftFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BitRShiftFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode BitRShiftFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BitRShiftFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public BitRShiftFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BitXorFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BitXorFutureFunctionNode.html",
    "title": "Class BitXorFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class BitXorFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BitXorFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode BitXorFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BitXorFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public BitXorFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BlockedErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BlockedErrorNode.html",
    "title": "Class BlockedErrorNode | OpenLanguage Documentation",
    "summary": "Class BlockedErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BlockedErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode BlockedErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BlockedErrorNode(string, List<Node>?, List<Node>?) public BlockedErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BorderCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BorderCommandFunctionNode.html",
    "title": "Class BorderCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class BorderCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BorderCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode BorderCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BorderCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public BorderCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BreakMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BreakMacroFunctionNode.html",
    "title": "Class BreakMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class BreakMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BreakMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode BreakMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BreakMacroFunctionNode(string?, List<Node>?, List<Node>?) public BreakMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BringToFrontCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BringToFrontCommandFunctionNode.html",
    "title": "Class BringToFrontCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class BringToFrontCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BringToFrontCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode BringToFrontCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BringToFrontCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public BringToFrontCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BuiltInFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BuiltInFunctionNode.html",
    "title": "Class BuiltInFunctionNode | OpenLanguage Documentation",
    "summary": "Class BuiltInFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BuiltInFunctionNode : NameNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode Derived CommandFunctionNode FutureFunctionNode MacroFunctionNode StandardFunctionNode WorksheetFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BuiltInFunctionNode(ExpressionNode, ExpressionNode?, List<Node>?, List<Node>?) public BuiltInFunctionNode(ExpressionNode name, ExpressionNode? prefix, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name ExpressionNode prefix ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node> BuiltInFunctionNode(ExpressionNode, List<Node>?, List<Node>?) public BuiltInFunctionNode(ExpressionNode name, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BusyErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BusyErrorNode.html",
    "title": "Class BusyErrorNode | OpenLanguage Documentation",
    "summary": "Class BusyErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BusyErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode BusyErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BusyErrorNode(string, List<Node>?, List<Node>?) public BusyErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.BycolFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.BycolFutureFunctionNode.html",
    "title": "Class BycolFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class BycolFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class BycolFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode BycolFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BycolFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public BycolFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ByrowFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ByrowFutureFunctionNode.html",
    "title": "Class ByrowFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ByrowFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ByrowFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ByrowFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ByrowFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ByrowFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CalcErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CalcErrorNode.html",
    "title": "Class CalcErrorNode | OpenLanguage Documentation",
    "summary": "Class CalcErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CalcErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode CalcErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CalcErrorNode(string, List<Node>?, List<Node>?) public CalcErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CalculateDocumentCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CalculateDocumentCommandFunctionNode.html",
    "title": "Class CalculateDocumentCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CalculateDocumentCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CalculateDocumentCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CalculateDocumentCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CalculateDocumentCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CalculateDocumentCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CalculateNowCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CalculateNowCommandFunctionNode.html",
    "title": "Class CalculateNowCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CalculateNowCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CalculateNowCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CalculateNowCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CalculateNowCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CalculateNowCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CalculationCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CalculationCommandFunctionNode.html",
    "title": "Class CalculationCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CalculationCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CalculationCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CalculationCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CalculationCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CalculationCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CallMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CallMacroFunctionNode.html",
    "title": "Class CallMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class CallMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CallMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode CallMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CallMacroFunctionNode(string?, List<Node>?, List<Node>?) public CallMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CallerMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CallerMacroFunctionNode.html",
    "title": "Class CallerMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class CallerMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CallerMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode CallerMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CallerMacroFunctionNode(string?, List<Node>?, List<Node>?) public CallerMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CancelCopyCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CancelCopyCommandFunctionNode.html",
    "title": "Class CancelCopyCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CancelCopyCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CancelCopyCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CancelCopyCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CancelCopyCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CancelCopyCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CancelKeyMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CancelKeyMacroFunctionNode.html",
    "title": "Class CancelKeyMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class CancelKeyMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CancelKeyMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode CancelKeyMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CancelKeyMacroFunctionNode(string?, List<Node>?, List<Node>?) public CancelKeyMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CaretLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CaretLiteralNode.html",
    "title": "Class CaretLiteralNode | OpenLanguage Documentation",
    "summary": "Class CaretLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CaretLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode CaretLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CaretLiteralNode(string, List<Node>?, List<Node>?) public CaretLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CeilingMathFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CeilingMathFutureFunctionNode.html",
    "title": "Class CeilingMathFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class CeilingMathFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CeilingMathFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode CeilingMathFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CeilingMathFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public CeilingMathFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CeilingPreciseFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CeilingPreciseFutureFunctionNode.html",
    "title": "Class CeilingPreciseFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class CeilingPreciseFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CeilingPreciseFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode CeilingPreciseFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CeilingPreciseFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public CeilingPreciseFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CeilingStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CeilingStandardFunctionNode.html",
    "title": "Class CeilingStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CeilingStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CeilingStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CeilingStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CeilingStandardFunctionNode(string?, List<Node>?, List<Node>?) public CeilingStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CellNode-4.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CellNode-4.html",
    "title": "Class CellNode<R, RN, C, CN> | OpenLanguage Documentation",
    "summary": "Class CellNode<R, RN, C, CN> Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public abstract class CellNode<R, RN, C, CN> : ExpressionNode where R : RowNode<RN> where RN : INumber<RN>, IBinaryInteger<RN>, INumberBase<RN>, IParsable<RN>, IFormattable, IMinMaxValue<RN> where C : ColumnNode<CN> where CN : INumber<CN>, IBinaryInteger<CN>, INumberBase<CN>, IParsable<CN>, IFormattable, IMinMaxValue<CN> Type Parameters R RN C CN Inheritance object Node ExpressionNode CellNode<R, RN, C, CN> Derived A1CellNode R1C1CellNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CellNode(R, C, List<Node>?, List<Node>?) public CellNode(R row, C column, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters row R column C leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Column public C Column { get; set; } Property Value C Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Row public R Row { get; set; } Property Value R Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CellProtectionCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CellProtectionCommandFunctionNode.html",
    "title": "Class CellProtectionCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CellProtectionCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CellProtectionCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CellProtectionCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CellProtectionCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CellProtectionCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CellRangeNode-10.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CellRangeNode-10.html",
    "title": "Class CellRangeNode<LC, RC, LCRN, LCR, LCCN, LCC, RCRN, RCR, RCCN, RCC> | OpenLanguage Documentation",
    "summary": "Class CellRangeNode<LC, RC, LCRN, LCR, LCCN, LCC, RCRN, RCR, RCCN, RCC> Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CellRangeNode<LC, RC, LCRN, LCR, LCCN, LCC, RCRN, RCR, RCCN, RCC> : ColonDelimitedNodes<LC, RC> where LC : CellNode<LCR, LCRN, LCC, LCCN> where RC : CellNode<RCR, RCRN, RCC, RCCN> where LCRN : INumber<LCRN>, IBinaryInteger<LCRN>, INumberBase<LCRN>, IParsable<LCRN>, IFormattable, IMinMaxValue<LCRN> where LCR : RowNode<LCRN> where LCCN : INumber<LCCN>, IBinaryInteger<LCCN>, INumberBase<LCCN>, IParsable<LCCN>, IFormattable, IMinMaxValue<LCCN> where LCC : ColumnNode<LCCN> where RCRN : INumber<RCRN>, IBinaryInteger<RCRN>, INumberBase<RCRN>, IParsable<RCRN>, IFormattable, IMinMaxValue<RCRN> where RCR : RowNode<RCRN> where RCCN : INumber<RCCN>, IBinaryInteger<RCCN>, INumberBase<RCCN>, IParsable<RCCN>, IFormattable, IMinMaxValue<RCCN> where RCC : ColumnNode<RCCN> Type Parameters LC RC LCRN LCR LCCN LCC RCRN RCR RCCN RCC Inheritance object Node ExpressionNode CharacterDelimitedExpressionNodes<LC, ColonNode, RC> ColonDelimitedNodes<LC, RC> CellRangeNode<LC, RC, LCRN, LCR, LCCN, LCC, RCRN, RCR, RCCN, RCC> Inherited Members CharacterDelimitedExpressionNodes<LC, ColonNode, RC>.Left CharacterDelimitedExpressionNodes<LC, ColonNode, RC>.Delimiter CharacterDelimitedExpressionNodes<LC, ColonNode, RC>.Right CharacterDelimitedExpressionNodes<LC, ColonNode, RC>.ToRawString() CharacterDelimitedExpressionNodes<LC, ColonNode, RC>.Children<O>() CharacterDelimitedExpressionNodes<LC, ColonNode, RC>.ReplaceChild(int, Node) CharacterDelimitedExpressionNodes<LC, ColonNode, RC>.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.Precedence ExpressionNode.ToRawString() ExpressionNode.ToString() Node.Children<O>() Node.ReplaceChild(int, Node) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CellRangeNode(LC, ColonNode, RC, List<Node>?, List<Node>?) public CellRangeNode(LC left, ColonNode sep, RC right, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters left LC sep ColonNode right RC leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CellStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CellStandardFunctionNode.html",
    "title": "Class CellStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CellStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CellStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CellStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CellStandardFunctionNode(string?, List<Node>?, List<Node>?) public CellStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChangeLinkCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChangeLinkCommandFunctionNode.html",
    "title": "Class ChangeLinkCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChangeLinkCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChangeLinkCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ChangeLinkCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChangeLinkCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ChangeLinkCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CharStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CharStandardFunctionNode.html",
    "title": "Class CharStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CharStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CharStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CharStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CharStandardFunctionNode(string?, List<Node>?, List<Node>?) public CharStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CharacterDelimitedExpressionNodes-3.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CharacterDelimitedExpressionNodes-3.html",
    "title": "Class CharacterDelimitedExpressionNodes<L, D, R> | OpenLanguage Documentation",
    "summary": "Class CharacterDelimitedExpressionNodes<L, D, R> Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CharacterDelimitedExpressionNodes<L, D, R> : ExpressionNode where L : ExpressionNode where D : CharacterLiteralNode where R : ExpressionNode Type Parameters L D R Inheritance object Node ExpressionNode CharacterDelimitedExpressionNodes<L, D, R> Derived ColonDelimitedNodes<L, R> CommaDelimitedNodes<L, R> SemicolonDelimitedNodes<L, R> Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CharacterDelimitedExpressionNodes(L, D, R, List<Node>?, List<Node>?) public CharacterDelimitedExpressionNodes(L left, D delimiter, R right, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters left L delimiter D right R leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Delimiter public D Delimiter { get; set; } Property Value D Left public L Left { get; set; } Property Value L Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Right public R Right { get; set; } Property Value R Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CharacterLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CharacterLiteralNode.html",
    "title": "Class CharacterLiteralNode | OpenLanguage Documentation",
    "summary": "Class CharacterLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CharacterLiteralNode : ExpressionNode Inheritance object Node ExpressionNode CharacterLiteralNode Derived AmpersandLiteralNode AsteriskLiteralNode AtSymbolLiteralNode BangNode CaretLiteralNode ColonNode CommaNode EqualLiteralNode GreaterThanLiteralNode GreaterThanOrEqualLiteralNode HashLiteralNode IntersectionLiteralNode LeftBracketNode LessThanLiteralNode LessThanOrEqualLiteralNode MinusLiteralNode NotEqualLiteralNode PercentLiteralNode PlusLiteralNode QuestionMarkNode RightBracketNode SemicolonNode SlashLiteralNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CharacterLiteralNode(string, List<Node>?, List<Node>?) public CharacterLiteralNode(string raw, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters raw string leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Raw public string Raw { get; set; } Property Value string Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChartAddDataCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChartAddDataCommandFunctionNode.html",
    "title": "Class ChartAddDataCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChartAddDataCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChartAddDataCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ChartAddDataCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChartAddDataCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ChartAddDataCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChartTrendCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChartTrendCommandFunctionNode.html",
    "title": "Class ChartTrendCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChartTrendCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChartTrendCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ChartTrendCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChartTrendCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ChartTrendCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChartWizardCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChartWizardCommandFunctionNode.html",
    "title": "Class ChartWizardCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChartWizardCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChartWizardCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ChartWizardCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChartWizardCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ChartWizardCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CheckCommandMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CheckCommandMacroFunctionNode.html",
    "title": "Class CheckCommandMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class CheckCommandMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CheckCommandMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode CheckCommandMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CheckCommandMacroFunctionNode(string?, List<Node>?, List<Node>?) public CheckCommandMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CheckboxPropertiesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CheckboxPropertiesCommandFunctionNode.html",
    "title": "Class CheckboxPropertiesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CheckboxPropertiesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CheckboxPropertiesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CheckboxPropertiesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CheckboxPropertiesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CheckboxPropertiesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChiDistStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChiDistStandardFunctionNode.html",
    "title": "Class ChiDistStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChiDistStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChiDistStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ChiDistStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChiDistStandardFunctionNode(string?, List<Node>?, List<Node>?) public ChiDistStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChiInvStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChiInvStandardFunctionNode.html",
    "title": "Class ChiInvStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChiInvStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChiInvStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ChiInvStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChiInvStandardFunctionNode(string?, List<Node>?, List<Node>?) public ChiInvStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChiTestStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChiTestStandardFunctionNode.html",
    "title": "Class ChiTestStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChiTestStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChiTestStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ChiTestStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChiTestStandardFunctionNode(string?, List<Node>?, List<Node>?) public ChiTestStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChisqDistFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChisqDistFutureFunctionNode.html",
    "title": "Class ChisqDistFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChisqDistFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChisqDistFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ChisqDistFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChisqDistFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ChisqDistFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChisqDistRtFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChisqDistRtFutureFunctionNode.html",
    "title": "Class ChisqDistRtFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChisqDistRtFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChisqDistRtFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ChisqDistRtFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChisqDistRtFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ChisqDistRtFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChisqInvFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChisqInvFutureFunctionNode.html",
    "title": "Class ChisqInvFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChisqInvFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChisqInvFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ChisqInvFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChisqInvFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ChisqInvFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChisqInvRtFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChisqInvRtFutureFunctionNode.html",
    "title": "Class ChisqInvRtFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChisqInvRtFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChisqInvRtFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ChisqInvRtFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChisqInvRtFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ChisqInvRtFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChisqTestFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChisqTestFutureFunctionNode.html",
    "title": "Class ChisqTestFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChisqTestFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChisqTestFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ChisqTestFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChisqTestFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ChisqTestFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChooseColsFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChooseColsFutureFunctionNode.html",
    "title": "Class ChooseColsFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChooseColsFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChooseColsFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ChooseColsFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChooseColsFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ChooseColsFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChooseRowsFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChooseRowsFutureFunctionNode.html",
    "title": "Class ChooseRowsFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChooseRowsFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChooseRowsFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ChooseRowsFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChooseRowsFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ChooseRowsFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChooseStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ChooseStandardFunctionNode.html",
    "title": "Class ChooseStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ChooseStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ChooseStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ChooseStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ChooseStandardFunctionNode(string?, List<Node>?, List<Node>?) public ChooseStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CircularErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CircularErrorNode.html",
    "title": "Class CircularErrorNode | OpenLanguage Documentation",
    "summary": "Class CircularErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CircularErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode CircularErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CircularErrorNode(string, List<Node>?, List<Node>?) public CircularErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CleanStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CleanStandardFunctionNode.html",
    "title": "Class CleanStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CleanStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CleanStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CleanStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CleanStandardFunctionNode(string?, List<Node>?, List<Node>?) public CleanStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ClearCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ClearCommandFunctionNode.html",
    "title": "Class ClearCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ClearCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ClearCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ClearCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ClearCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ClearCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ClearOutlineCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ClearOutlineCommandFunctionNode.html",
    "title": "Class ClearOutlineCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ClearOutlineCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ClearOutlineCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ClearOutlineCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ClearOutlineCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ClearOutlineCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ClearPrintAreaCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ClearPrintAreaCommandFunctionNode.html",
    "title": "Class ClearPrintAreaCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ClearPrintAreaCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ClearPrintAreaCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ClearPrintAreaCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ClearPrintAreaCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ClearPrintAreaCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ClearRoutingSlipCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ClearRoutingSlipCommandFunctionNode.html",
    "title": "Class ClearRoutingSlipCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ClearRoutingSlipCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ClearRoutingSlipCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ClearRoutingSlipCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ClearRoutingSlipCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ClearRoutingSlipCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CloseAllCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CloseAllCommandFunctionNode.html",
    "title": "Class CloseAllCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CloseAllCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CloseAllCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CloseAllCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CloseAllCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CloseAllCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CloseCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CloseCommandFunctionNode.html",
    "title": "Class CloseCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CloseCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CloseCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CloseCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CloseCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CloseCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CodeStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CodeStandardFunctionNode.html",
    "title": "Class CodeStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CodeStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CodeStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CodeStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CodeStandardFunctionNode(string?, List<Node>?, List<Node>?) public CodeStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColonDelimitedNodes-2.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColonDelimitedNodes-2.html",
    "title": "Class ColonDelimitedNodes<L, R> | OpenLanguage Documentation",
    "summary": "Class ColonDelimitedNodes<L, R> Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ColonDelimitedNodes<L, R> : CharacterDelimitedExpressionNodes<L, ColonNode, R> where L : ExpressionNode where R : ExpressionNode Type Parameters L R Inheritance object Node ExpressionNode CharacterDelimitedExpressionNodes<L, ColonNode, R> ColonDelimitedNodes<L, R> Derived CellRangeNode<LC, RC, LCRN, LCR, LCCN, LCC, RCRN, RCR, RCCN, RCC> Inherited Members CharacterDelimitedExpressionNodes<L, ColonNode, R>.Left CharacterDelimitedExpressionNodes<L, ColonNode, R>.Delimiter CharacterDelimitedExpressionNodes<L, ColonNode, R>.Right CharacterDelimitedExpressionNodes<L, ColonNode, R>.ToRawString() CharacterDelimitedExpressionNodes<L, ColonNode, R>.Children<O>() CharacterDelimitedExpressionNodes<L, ColonNode, R>.ReplaceChild(int, Node) CharacterDelimitedExpressionNodes<L, ColonNode, R>.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.Precedence ExpressionNode.ToRawString() ExpressionNode.ToString() Node.Children<O>() Node.ReplaceChild(int, Node) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ColonDelimitedNodes(L, ColonNode, R, List<Node>?, List<Node>?) public ColonDelimitedNodes(L left, ColonNode delimiter, R right, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters left L delimiter ColonNode right R leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColonNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColonNode.html",
    "title": "Class ColonNode | OpenLanguage Documentation",
    "summary": "Class ColonNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ColonNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode ColonNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ColonNode(string, List<Node>?, List<Node>?) public ColonNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColorPaletteCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColorPaletteCommandFunctionNode.html",
    "title": "Class ColorPaletteCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ColorPaletteCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ColorPaletteCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ColorPaletteCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ColorPaletteCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ColorPaletteCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColumnIndexedKeyword.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColumnIndexedKeyword.html",
    "title": "Class ColumnIndexedKeyword | OpenLanguage Documentation",
    "summary": "Class ColumnIndexedKeyword Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ColumnIndexedKeyword : ExpressionNode Inheritance object Node ExpressionNode ColumnIndexedKeyword Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ColumnIndexedKeyword(ExpressionNode, ExpressionNode) public ColumnIndexedKeyword(ExpressionNode keyword, ExpressionNode column) Parameters keyword ExpressionNode column ExpressionNode Properties Column public ExpressionNode Column { get; set; } Property Value ExpressionNode Keyword public ExpressionNode Keyword { get; set; } Property Value ExpressionNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColumnNode-1.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColumnNode-1.html",
    "title": "Class ColumnNode<N> | OpenLanguage Documentation",
    "summary": "Class ColumnNode<N> Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public abstract class ColumnNode<N> : ExpressionNode where N : INumber<N>, IBinaryInteger<N>, INumberBase<N>, IParsable<N>, IFormattable, IMinMaxValue<N> Type Parameters N Inheritance object Node ExpressionNode ColumnNode<N> Derived A1ColumnNode R1C1ColumnNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ColumnNode(N, List<Node>?, List<Node>?) public ColumnNode(N val, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val N leadingWhitespace List<Node> trailingWhitespace List<Node> Properties ColumnSpecifier public N ColumnSpecifier { get; set; } Property Value N Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColumnRangeIndexedKeyword.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColumnRangeIndexedKeyword.html",
    "title": "Class ColumnRangeIndexedKeyword | OpenLanguage Documentation",
    "summary": "Class ColumnRangeIndexedKeyword Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ColumnRangeIndexedKeyword : ExpressionNode Inheritance object Node ExpressionNode ColumnRangeIndexedKeyword Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ColumnRangeIndexedKeyword(ExpressionNode, StructureColumnRange) public ColumnRangeIndexedKeyword(ExpressionNode keyword, StructureColumnRange columnRange) Parameters keyword ExpressionNode columnRange StructureColumnRange Properties ColumnRange public StructureColumnRange ColumnRange { get; set; } Property Value StructureColumnRange Keyword public ExpressionNode Keyword { get; set; } Property Value ExpressionNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColumnStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColumnStandardFunctionNode.html",
    "title": "Class ColumnStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ColumnStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ColumnStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ColumnStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ColumnStandardFunctionNode(string?, List<Node>?, List<Node>?) public ColumnStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColumnWidthCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColumnWidthCommandFunctionNode.html",
    "title": "Class ColumnWidthCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ColumnWidthCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ColumnWidthCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ColumnWidthCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ColumnWidthCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ColumnWidthCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColumnsStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ColumnsStandardFunctionNode.html",
    "title": "Class ColumnsStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ColumnsStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ColumnsStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ColumnsStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ColumnsStandardFunctionNode(string?, List<Node>?, List<Node>?) public ColumnsStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CombinStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CombinStandardFunctionNode.html",
    "title": "Class CombinStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CombinStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CombinStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CombinStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CombinStandardFunctionNode(string?, List<Node>?, List<Node>?) public CombinStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CombinaFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CombinaFutureFunctionNode.html",
    "title": "Class CombinaFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class CombinaFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CombinaFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode CombinaFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CombinaFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public CombinaFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CombinationCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CombinationCommandFunctionNode.html",
    "title": "Class CombinationCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CombinationCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CombinationCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CombinationCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CombinationCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CombinationCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CommaDelimitedNodes-2.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CommaDelimitedNodes-2.html",
    "title": "Class CommaDelimitedNodes<L, R> | OpenLanguage Documentation",
    "summary": "Class CommaDelimitedNodes<L, R> Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CommaDelimitedNodes<L, R> : CharacterDelimitedExpressionNodes<L, CommaNode, R> where L : ExpressionNode where R : ExpressionNode Type Parameters L R Inheritance object Node ExpressionNode CharacterDelimitedExpressionNodes<L, CommaNode, R> CommaDelimitedNodes<L, R> Derived StructuredReferenceIndicesUnion StructuredReferenceUnion Inherited Members CharacterDelimitedExpressionNodes<L, CommaNode, R>.Left CharacterDelimitedExpressionNodes<L, CommaNode, R>.Delimiter CharacterDelimitedExpressionNodes<L, CommaNode, R>.Right CharacterDelimitedExpressionNodes<L, CommaNode, R>.ToRawString() CharacterDelimitedExpressionNodes<L, CommaNode, R>.Children<O>() CharacterDelimitedExpressionNodes<L, CommaNode, R>.ReplaceChild(int, Node) CharacterDelimitedExpressionNodes<L, CommaNode, R>.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.Precedence ExpressionNode.ToRawString() ExpressionNode.ToString() Node.Children<O>() Node.ReplaceChild(int, Node) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CommaDelimitedNodes(L, CommaNode, R, List<Node>?, List<Node>?) public CommaDelimitedNodes(L left, CommaNode delimiter, R right, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters left L delimiter CommaNode right R leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CommaNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CommaNode.html",
    "title": "Class CommaNode | OpenLanguage Documentation",
    "summary": "Class CommaNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CommaNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode CommaNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CommaNode(string, List<Node>?, List<Node>?) public CommaNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CommandFunctionNode.html",
    "title": "Class CommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CommandFunctionNode : BuiltInFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode Derived A1R1C1CommandFunctionNode ActivateCommandFunctionNode ActivateNextCommandFunctionNode ActivateNotesCommandFunctionNode ActivatePrevCommandFunctionNode ActiveCellFontCommandFunctionNode AddArrowCommandFunctionNode AddChartAutoFormatCommandFunctionNode AddListItemCommandFunctionNode AddOverlayCommandFunctionNode AddPrintAreaCommandFunctionNode AddToolCommandFunctionNode AddinManagerCommandFunctionNode AlertCommandFunctionNode AlignmentCommandFunctionNode AppActivateCommandFunctionNode AppActivateMicrosoftCommandFunctionNode AppMaximizeCommandFunctionNode AppMinimizeCommandFunctionNode AppMoveCommandFunctionNode AppRestoreCommandFunctionNode AppSizeCommandFunctionNode ApplyNamesCommandFunctionNode ApplyStyleCommandFunctionNode ArrangeAllCommandFunctionNode AssignToObjectCommandFunctionNode AssignToToolCommandFunctionNode AttachTextCommandFunctionNode AttachToolbarsCommandFunctionNode AttributesCommandFunctionNode AutoOutlineCommandFunctionNode AutocorrectCommandFunctionNode AxesCommandFunctionNode BeepCommandFunctionNode BorderCommandFunctionNode BringToFrontCommandFunctionNode CalculateDocumentCommandFunctionNode CalculateNowCommandFunctionNode CalculationCommandFunctionNode CancelCopyCommandFunctionNode CellProtectionCommandFunctionNode ChangeLinkCommandFunctionNode ChartAddDataCommandFunctionNode ChartTrendCommandFunctionNode ChartWizardCommandFunctionNode CheckboxPropertiesCommandFunctionNode ClearCommandFunctionNode ClearOutlineCommandFunctionNode ClearPrintAreaCommandFunctionNode ClearRoutingSlipCommandFunctionNode CloseAllCommandFunctionNode CloseCommandFunctionNode ColorPaletteCommandFunctionNode ColumnWidthCommandFunctionNode CombinationCommandFunctionNode ConsolidateCommandFunctionNode ConstrainNumericCommandFunctionNode CopyChartCommandFunctionNode CopyCommandFunctionNode CopyPictureCommandFunctionNode CopyToolCommandFunctionNode CreateNamesCommandFunctionNode CreatePublisherCommandFunctionNode CustomizeToolbarCommandFunctionNode CutCommandFunctionNode DataDeleteCommandFunctionNode DataFindCommandFunctionNode DataFindNextCommandFunctionNode DataFindPrevCommandFunctionNode DataFormCommandFunctionNode DataLabelCommandFunctionNode DataSeriesCommandFunctionNode DefineNameCommandFunctionNode DefineStyleCommandFunctionNode DeleteArrowCommandFunctionNode DeleteChartAutoFormatCommandFunctionNode DeleteFormatCommandFunctionNode DeleteNameCommandFunctionNode DeleteNoteCommandFunctionNode DeleteOverlayCommandFunctionNode DeleteStyleCommandFunctionNode DeleteToolCommandFunctionNode DemoteCommandFunctionNode DisableInputCommandFunctionNode DisplayCommandFunctionNode DuplicateCommandFunctionNode EditColorCommandFunctionNode EditDeleteCommandFunctionNode EditObjectCommandFunctionNode EditRepeatCommandFunctionNode EditSeriesCommandFunctionNode EditToolCommandFunctionNode EditboxPropertiesCommandFunctionNode EditionOptionsCommandFunctionNode EnableObjectCommandFunctionNode EnableTipwizardCommandFunctionNode EnterDataCommandFunctionNode ErrorbarXCommandFunctionNode ErrorbarYCommandFunctionNode ExtendPolygonCommandFunctionNode ExtractCommandFunctionNode FileCloseCommandFunctionNode FileDeleteCommandFunctionNode FillAutoCommandFunctionNode FillDownCommandFunctionNode FillGroupCommandFunctionNode FillLeftCommandFunctionNode FillRightCommandFunctionNode FillUpCommandFunctionNode FilterAdvancedCommandFunctionNode FilterShowAllCommandFunctionNode FindFileCommandFunctionNode FontCommandFunctionNode FontPropertiesCommandFunctionNode FormatAutoCommandFunctionNode FormatChartCommandFunctionNode FormatCharttypeCommandFunctionNode FormatFontCommandFunctionNode FormatLegendCommandFunctionNode FormatMainCommandFunctionNode FormatMoveCommandFunctionNode FormatNumberCommandFunctionNode FormatOverlayCommandFunctionNode FormatShapeCommandFunctionNode FormatSizeCommandFunctionNode FormatTextCommandFunctionNode FormulaArrayCommandFunctionNode FormulaCommandFunctionNode FormulaFillCommandFunctionNode FormulaFindCommandFunctionNode FormulaFindNextCommandFunctionNode FormulaFindPrevCommandFunctionNode FormulaGotoCommandFunctionNode FormulaReplaceCommandFunctionNode FreezePanesCommandFunctionNode FullCommandFunctionNode FullScreenCommandFunctionNode FunctionWizardCommandFunctionNode Gallery3DAreaCommandFunctionNode Gallery3DBarCommandFunctionNode Gallery3DColumnCommandFunctionNode Gallery3DLineCommandFunctionNode Gallery3DPieCommandFunctionNode Gallery3DSurfaceCommandFunctionNode GalleryAreaCommandFunctionNode GalleryBarCommandFunctionNode GalleryColumnCommandFunctionNode GalleryCustomCommandFunctionNode GalleryDoughnutCommandFunctionNode GalleryLineCommandFunctionNode GalleryPieCommandFunctionNode GalleryRadarCommandFunctionNode GalleryScatterCommandFunctionNode GoalSeekCommandFunctionNode GridlinesCommandFunctionNode HLineCommandFunctionNode HPageCommandFunctionNode HideCommandFunctionNode HideDialogCommandFunctionNode HideObjectCommandFunctionNode HideallInkannotsCommandFunctionNode HideallNotesCommandFunctionNode HidecurrNoteCommandFunctionNode HscrollCommandFunctionNode InsertCommandFunctionNode InsertMapObjectCommandFunctionNode InsertObjectCommandFunctionNode InsertPictureCommandFunctionNode InsertTitleCommandFunctionNode InsertdatatableCommandFunctionNode JustifyCommandFunctionNode LabelPropertiesCommandFunctionNode LayoutCommandFunctionNode LegendCommandFunctionNode LinePrintCommandFunctionNode LinkComboCommandFunctionNode LinkFormatCommandFunctionNode ListNamesCommandFunctionNode ListboxPropertiesCommandFunctionNode MacroOptionsCommandFunctionNode MailAddMailerCommandFunctionNode MailDeleteMailerCommandFunctionNode MailEditMailerCommandFunctionNode MailForwardCommandFunctionNode MailLogOffCommandFunctionNode MailLogOnCommandFunctionNode MailNextLetterCommandFunctionNode MailReplyAllCommandFunctionNode MailReplyCommandFunctionNode MailSendMailerCommandFunctionNode MainChartCommandFunctionNode MainChartTypeCommandFunctionNode MenuEditorCommandFunctionNode MergeStylesCommandFunctionNode MessageCommandFunctionNode MoveBrkCommandFunctionNode MoveToolCommandFunctionNode NewCommandFunctionNode NewWindowCommandFunctionNode NewwebqueryCommandFunctionNode NormalCommandFunctionNode ObjectPropertiesCommandFunctionNode ObjectProtectionCommandFunctionNode OnDataCommandFunctionNode OnDoubleclickCommandFunctionNode OnEntryCommandFunctionNode OnKeyCommandFunctionNode OnRecalcCommandFunctionNode OnSheetCommandFunctionNode OnTimeCommandFunctionNode OnWindowCommandFunctionNode OpenCommandFunctionNode OpenLinksCommandFunctionNode OpenMailCommandFunctionNode OpenTextCommandFunctionNode OptionsCalculationCommandFunctionNode OptionsChartCommandFunctionNode OptionsEditCommandFunctionNode OptionsGeneralCommandFunctionNode OptionsListsAddCommandFunctionNode OptionsListsDeleteCommandFunctionNode OptionsMeCommandFunctionNode OptionsMenonoCommandFunctionNode OptionsSaveCommandFunctionNode OptionsSpellCommandFunctionNode OptionsTransitionCommandFunctionNode OptionsViewCommandFunctionNode OutlineCommandFunctionNode OverlayChartTypeCommandFunctionNode OverlayCommandFunctionNode PageSetupCommandFunctionNode ParseCommandFunctionNode PasteCommandFunctionNode PasteLinkCommandFunctionNode PastePictureCommandFunctionNode PastePictureLinkCommandFunctionNode PasteSpecialCommandFunctionNode PasteToolCommandFunctionNode PatternsCommandFunctionNode PicklistCommandFunctionNode PivotAddFieldsCommandFunctionNode PivotFieldCommandFunctionNode PivotFieldGroupCommandFunctionNode PivotFieldPropertiesCommandFunctionNode PivotFieldUngroupCommandFunctionNode PivotItemCommandFunctionNode PivotItemPropertiesCommandFunctionNode PivotRefreshCommandFunctionNode PivotShowPagesCommandFunctionNode PivotTableChartCommandFunctionNode PivotTableWizardCommandFunctionNode PostDocumentCommandFunctionNode PrecisionCommandFunctionNode PreferredCommandFunctionNode PrintCommandFunctionNode PrintPreviewCommandFunctionNode PrinterSetupCommandFunctionNode PromoteCommandFunctionNode ProtectDocumentCommandFunctionNode ProtectRevisionsCommandFunctionNode PushbuttonPropertiesCommandFunctionNode QuitCommandFunctionNode RemoveListItemCommandFunctionNode RemovePageBreakCommandFunctionNode RenameObjectCommandFunctionNode ReplaceFontCommandFunctionNode ResetToolCommandFunctionNode RmPrintAreaCommandFunctionNode RouteDocumentCommandFunctionNode RoutingSlipCommandFunctionNode RowHeightCommandFunctionNode RunCommandFunctionNode SaveAsCommandFunctionNode SaveCommandFunctionNode SaveCopyAsCommandFunctionNode SaveNewObjectCommandFunctionNode SaveWorkbookCommandFunctionNode SaveWorkspaceCommandFunctionNode ScaleCommandFunctionNode ScenarioAddCommandFunctionNode ScenarioCellsCommandFunctionNode ScenarioDeleteCommandFunctionNode ScenarioEditCommandFunctionNode ScenarioMergeCommandFunctionNode ScenarioShowCommandFunctionNode ScenarioShowNextCommandFunctionNode ScenarioSummaryCommandFunctionNode ScrollbarPropertiesCommandFunctionNode SelectAllCommandFunctionNode SelectChartCommandFunctionNode SelectCommandFunctionNode SelectEndCommandFunctionNode SelectLastCellCommandFunctionNode SelectListItemCommandFunctionNode SelectPlotAreaCommandFunctionNode SelectSpecialCommandFunctionNode SendKeysCommandFunctionNode SendMailCommandFunctionNode SendToBackCommandFunctionNode SeriesAxesCommandFunctionNode SeriesOrderCommandFunctionNode SeriesXCommandFunctionNode SeriesYCommandFunctionNode SetControlValueCommandFunctionNode SetCriteriaCommandFunctionNode SetDatabaseCommandFunctionNode SetDialogDefaultCommandFunctionNode SetDialogFocusCommandFunctionNode SetExtractCommandFunctionNode SetListItemCommandFunctionNode SetPageBreakCommandFunctionNode SetPreferredCommandFunctionNode SetPrintAreaCommandFunctionNode SetPrintTitlesCommandFunctionNode SetUpdateStatusCommandFunctionNode ShareCommandFunctionNode ShareNameCommandFunctionNode SheetBackgroundCommandFunctionNode ShortMenusCommandFunctionNode ShowActiveCellCommandFunctionNode ShowClipboardCommandFunctionNode ShowDetailCommandFunctionNode ShowDialogCommandFunctionNode ShowInfoCommandFunctionNode ShowLevelsCommandFunctionNode ShowToolbarCommandFunctionNode SortSpecialCommandFunctionNode SoundNoteCommandFunctionNode SoundPlayCommandFunctionNode SpellingCommandFunctionNode SplitCommandFunctionNode StandardFontCommandFunctionNode StandardWidthCommandFunctionNode StyleCommandFunctionNode SubscribeToCommandFunctionNode SubtotalCreateCommandFunctionNode SubtotalRemoveCommandFunctionNode SummaryInfoCommandFunctionNode TabOrderCommandFunctionNode TableCommandFunctionNode TextToColumnsCommandFunctionNode TracerClearCommandFunctionNode TracerDisplayCommandFunctionNode TracerErrorCommandFunctionNode TracerNavigateCommandFunctionNode TraverseNotesCommandFunctionNode UndoCommandFunctionNode UngroupCommandFunctionNode UngroupSheetsCommandFunctionNode UnhideCommandFunctionNode UnlockedNextCommandFunctionNode UnlockedPrevCommandFunctionNode UnprotectRevisionsCommandFunctionNode UpdateLinkCommandFunctionNode VLineCommandFunctionNode VPageCommandFunctionNode VbaActivateCommandFunctionNode VbaInsertFileCommandFunctionNode VbaMakeAddinCommandFunctionNode VbaProcedureDefinitionCommandFunctionNode View3DCommandFunctionNode ViewDefineCommandFunctionNode ViewDeleteCommandFunctionNode ViewShowCommandFunctionNode VscrollCommandFunctionNode WaitCommandFunctionNode WebPublishCommandFunctionNode WindowMaximizeCommandFunctionNode WindowMinimizeCommandFunctionNode WindowMoveCommandFunctionNode WindowRestoreCommandFunctionNode WindowSizeCommandFunctionNode WorkbookActivateCommandFunctionNode WorkbookAddCommandFunctionNode WorkbookCopyCommandFunctionNode WorkbookDeleteCommandFunctionNode WorkbookHideCommandFunctionNode WorkbookInsertCommandFunctionNode WorkbookMoveCommandFunctionNode WorkbookNameCommandFunctionNode WorkbookNewCommandFunctionNode WorkbookNextCommandFunctionNode WorkbookOptionsCommandFunctionNode WorkbookPrevCommandFunctionNode WorkbookProtectCommandFunctionNode WorkbookScrollCommandFunctionNode WorkbookSelectCommandFunctionNode WorkbookTabSplitCommandFunctionNode WorkbookUnhideCommandFunctionNode WorkgroupCommandFunctionNode WorkgroupOptionsCommandFunctionNode WorkspaceCommandFunctionNode ZoomCommandFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CommandFunctionNode(ExpressionNode, QuestionMarkNode?, List<Node>?, List<Node>?) public CommandFunctionNode(ExpressionNode name, QuestionMarkNode? qMarkNode = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name ExpressionNode qMarkNode QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node> Properties QuestionMark public QuestionMarkNode? QuestionMark { get; set; } Property Value QuestionMarkNode Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ComplexStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ComplexStandardFunctionNode.html",
    "title": "Class ComplexStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ComplexStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ComplexStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ComplexStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ComplexStandardFunctionNode(string?, List<Node>?, List<Node>?) public ComplexStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConcatStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConcatStandardFunctionNode.html",
    "title": "Class ConcatStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ConcatStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ConcatStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ConcatStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ConcatStandardFunctionNode(string?, List<Node>?, List<Node>?) public ConcatStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConcatenateNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConcatenateNode.html",
    "title": "Class ConcatenateNode | OpenLanguage Documentation",
    "summary": "Class ConcatenateNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ConcatenateNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode ConcatenateNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ConcatenateNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public ConcatenateNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConcatenateStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConcatenateStandardFunctionNode.html",
    "title": "Class ConcatenateStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ConcatenateStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ConcatenateStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ConcatenateStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ConcatenateStandardFunctionNode(string?, List<Node>?, List<Node>?) public ConcatenateStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConcatenatedNodePair-2.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConcatenatedNodePair-2.html",
    "title": "Class ConcatenatedNodePair<L, R> | OpenLanguage Documentation",
    "summary": "Class ConcatenatedNodePair<L, R> Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ConcatenatedNodePair<L, R> : ExpressionNode where L : ExpressionNode where R : ExpressionNode Type Parameters L R Inheritance object Node ExpressionNode ConcatenatedNodePair<L, R> Derived StructuredReferenceIntersection Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ConcatenatedNodePair(L, R, List<Node>?, List<Node>?) public ConcatenatedNodePair(L left, R right, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters left L right R leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Left public L Left { get; set; } Property Value L Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Right public R Right { get; set; } Property Value R Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConcatenatedNodes.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConcatenatedNodes.html",
    "title": "Class ConcatenatedNodes | OpenLanguage Documentation",
    "summary": "Class ConcatenatedNodes Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ConcatenatedNodes : ExpressionNode Inheritance object Node ExpressionNode ConcatenatedNodes Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ConcatenatedNodes(List<ExpressionNode>, List<Node>?, List<Node>?) public ConcatenatedNodes(List<ExpressionNode> nodes, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters nodes List<ExpressionNode> leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Nodes public List<ExpressionNode> Nodes { get; set; } Property Value List<ExpressionNode> Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConfidenceNormFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConfidenceNormFutureFunctionNode.html",
    "title": "Class ConfidenceNormFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ConfidenceNormFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ConfidenceNormFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ConfidenceNormFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ConfidenceNormFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ConfidenceNormFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConfidenceStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConfidenceStandardFunctionNode.html",
    "title": "Class ConfidenceStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ConfidenceStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ConfidenceStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ConfidenceStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ConfidenceStandardFunctionNode(string?, List<Node>?, List<Node>?) public ConfidenceStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConfidenceTFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConfidenceTFutureFunctionNode.html",
    "title": "Class ConfidenceTFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ConfidenceTFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ConfidenceTFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ConfidenceTFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ConfidenceTFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ConfidenceTFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConnectErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConnectErrorNode.html",
    "title": "Class ConnectErrorNode | OpenLanguage Documentation",
    "summary": "Class ConnectErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ConnectErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode ConnectErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ConnectErrorNode(string, List<Node>?, List<Node>?) public ConnectErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConsolidateCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConsolidateCommandFunctionNode.html",
    "title": "Class ConsolidateCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ConsolidateCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ConsolidateCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ConsolidateCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ConsolidateCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ConsolidateCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConstrainNumericCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConstrainNumericCommandFunctionNode.html",
    "title": "Class ConstrainNumericCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ConstrainNumericCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ConstrainNumericCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ConstrainNumericCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ConstrainNumericCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ConstrainNumericCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConvertStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ConvertStandardFunctionNode.html",
    "title": "Class ConvertStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ConvertStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ConvertStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ConvertStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ConvertStandardFunctionNode(string?, List<Node>?, List<Node>?) public ConvertStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CopyChartCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CopyChartCommandFunctionNode.html",
    "title": "Class CopyChartCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CopyChartCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CopyChartCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CopyChartCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CopyChartCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CopyChartCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CopyCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CopyCommandFunctionNode.html",
    "title": "Class CopyCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CopyCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CopyCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CopyCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CopyCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CopyCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CopyPictureCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CopyPictureCommandFunctionNode.html",
    "title": "Class CopyPictureCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CopyPictureCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CopyPictureCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CopyPictureCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CopyPictureCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CopyPictureCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CopyToolCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CopyToolCommandFunctionNode.html",
    "title": "Class CopyToolCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CopyToolCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CopyToolCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CopyToolCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CopyToolCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CopyToolCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CorrelStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CorrelStandardFunctionNode.html",
    "title": "Class CorrelStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CorrelStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CorrelStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CorrelStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CorrelStandardFunctionNode(string?, List<Node>?, List<Node>?) public CorrelStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CosStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CosStandardFunctionNode.html",
    "title": "Class CosStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CosStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CosStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CosStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CosStandardFunctionNode(string?, List<Node>?, List<Node>?) public CosStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CoshStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CoshStandardFunctionNode.html",
    "title": "Class CoshStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CoshStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CoshStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CoshStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CoshStandardFunctionNode(string?, List<Node>?, List<Node>?) public CoshStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CotFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CotFutureFunctionNode.html",
    "title": "Class CotFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class CotFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CotFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode CotFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CotFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public CotFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CothFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CothFutureFunctionNode.html",
    "title": "Class CothFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class CothFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CothFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode CothFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CothFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public CothFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CountAStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CountAStandardFunctionNode.html",
    "title": "Class CountAStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CountAStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CountAStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CountAStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CountAStandardFunctionNode(string?, List<Node>?, List<Node>?) public CountAStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CountBlankStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CountBlankStandardFunctionNode.html",
    "title": "Class CountBlankStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CountBlankStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CountBlankStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CountBlankStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CountBlankStandardFunctionNode(string?, List<Node>?, List<Node>?) public CountBlankStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CountIfStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CountIfStandardFunctionNode.html",
    "title": "Class CountIfStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CountIfStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CountIfStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CountIfStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CountIfStandardFunctionNode(string?, List<Node>?, List<Node>?) public CountIfStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CountIfsStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CountIfsStandardFunctionNode.html",
    "title": "Class CountIfsStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CountIfsStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CountIfsStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CountIfsStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CountIfsStandardFunctionNode(string?, List<Node>?, List<Node>?) public CountIfsStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CountStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CountStandardFunctionNode.html",
    "title": "Class CountStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CountStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CountStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CountStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CountStandardFunctionNode(string?, List<Node>?, List<Node>?) public CountStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CoupDayBsStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CoupDayBsStandardFunctionNode.html",
    "title": "Class CoupDayBsStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CoupDayBsStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CoupDayBsStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CoupDayBsStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CoupDayBsStandardFunctionNode(string?, List<Node>?, List<Node>?) public CoupDayBsStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CoupDaysNcStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CoupDaysNcStandardFunctionNode.html",
    "title": "Class CoupDaysNcStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CoupDaysNcStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CoupDaysNcStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CoupDaysNcStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CoupDaysNcStandardFunctionNode(string?, List<Node>?, List<Node>?) public CoupDaysNcStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CoupDaysStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CoupDaysStandardFunctionNode.html",
    "title": "Class CoupDaysStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CoupDaysStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CoupDaysStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CoupDaysStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CoupDaysStandardFunctionNode(string?, List<Node>?, List<Node>?) public CoupDaysStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CoupNcdStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CoupNcdStandardFunctionNode.html",
    "title": "Class CoupNcdStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CoupNcdStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CoupNcdStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CoupNcdStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CoupNcdStandardFunctionNode(string?, List<Node>?, List<Node>?) public CoupNcdStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CoupNumStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CoupNumStandardFunctionNode.html",
    "title": "Class CoupNumStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CoupNumStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CoupNumStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CoupNumStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CoupNumStandardFunctionNode(string?, List<Node>?, List<Node>?) public CoupNumStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CoupPcdStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CoupPcdStandardFunctionNode.html",
    "title": "Class CoupPcdStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CoupPcdStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CoupPcdStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CoupPcdStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CoupPcdStandardFunctionNode(string?, List<Node>?, List<Node>?) public CoupPcdStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CovarStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CovarStandardFunctionNode.html",
    "title": "Class CovarStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CovarStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CovarStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CovarStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CovarStandardFunctionNode(string?, List<Node>?, List<Node>?) public CovarStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CovariancePFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CovariancePFutureFunctionNode.html",
    "title": "Class CovariancePFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class CovariancePFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CovariancePFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode CovariancePFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CovariancePFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public CovariancePFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CovarianceSFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CovarianceSFutureFunctionNode.html",
    "title": "Class CovarianceSFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class CovarianceSFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CovarianceSFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode CovarianceSFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CovarianceSFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public CovarianceSFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CreateNamesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CreateNamesCommandFunctionNode.html",
    "title": "Class CreateNamesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CreateNamesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CreateNamesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CreateNamesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CreateNamesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CreateNamesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CreateObjectMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CreateObjectMacroFunctionNode.html",
    "title": "Class CreateObjectMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class CreateObjectMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CreateObjectMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode CreateObjectMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CreateObjectMacroFunctionNode(string?, List<Node>?, List<Node>?) public CreateObjectMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CreatePublisherCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CreatePublisherCommandFunctionNode.html",
    "title": "Class CreatePublisherCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CreatePublisherCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CreatePublisherCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CreatePublisherCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CreatePublisherCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CreatePublisherCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CritBinomStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CritBinomStandardFunctionNode.html",
    "title": "Class CritBinomStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CritBinomStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CritBinomStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CritBinomStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CritBinomStandardFunctionNode(string?, List<Node>?, List<Node>?) public CritBinomStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CscFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CscFutureFunctionNode.html",
    "title": "Class CscFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class CscFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CscFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode CscFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CscFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public CscFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CschFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CschFutureFunctionNode.html",
    "title": "Class CschFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class CschFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CschFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode CschFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CschFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public CschFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CubeKpimemberStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CubeKpimemberStandardFunctionNode.html",
    "title": "Class CubeKpimemberStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CubeKpimemberStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CubeKpimemberStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CubeKpimemberStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CubeKpimemberStandardFunctionNode(string?, List<Node>?, List<Node>?) public CubeKpimemberStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CubeMemberStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CubeMemberStandardFunctionNode.html",
    "title": "Class CubeMemberStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CubeMemberStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CubeMemberStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CubeMemberStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CubeMemberStandardFunctionNode(string?, List<Node>?, List<Node>?) public CubeMemberStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CubeMemberpropertyStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CubeMemberpropertyStandardFunctionNode.html",
    "title": "Class CubeMemberpropertyStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CubeMemberpropertyStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CubeMemberpropertyStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CubeMemberpropertyStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CubeMemberpropertyStandardFunctionNode(string?, List<Node>?, List<Node>?) public CubeMemberpropertyStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CubeRankedmemberStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CubeRankedmemberStandardFunctionNode.html",
    "title": "Class CubeRankedmemberStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CubeRankedmemberStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CubeRankedmemberStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CubeRankedmemberStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CubeRankedmemberStandardFunctionNode(string?, List<Node>?, List<Node>?) public CubeRankedmemberStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CubeSetStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CubeSetStandardFunctionNode.html",
    "title": "Class CubeSetStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CubeSetStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CubeSetStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CubeSetStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CubeSetStandardFunctionNode(string?, List<Node>?, List<Node>?) public CubeSetStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CubeSetcountStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CubeSetcountStandardFunctionNode.html",
    "title": "Class CubeSetcountStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CubeSetcountStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CubeSetcountStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CubeSetcountStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CubeSetcountStandardFunctionNode(string?, List<Node>?, List<Node>?) public CubeSetcountStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CubeValueStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CubeValueStandardFunctionNode.html",
    "title": "Class CubeValueStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CubeValueStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CubeValueStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CubeValueStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CubeValueStandardFunctionNode(string?, List<Node>?, List<Node>?) public CubeValueStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CumIpmtStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CumIpmtStandardFunctionNode.html",
    "title": "Class CumIpmtStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CumIpmtStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CumIpmtStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CumIpmtStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CumIpmtStandardFunctionNode(string?, List<Node>?, List<Node>?) public CumIpmtStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CumPrIncStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CumPrIncStandardFunctionNode.html",
    "title": "Class CumPrIncStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class CumPrIncStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CumPrIncStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode CumPrIncStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CumPrIncStandardFunctionNode(string?, List<Node>?, List<Node>?) public CumPrIncStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CustomRepeatMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CustomRepeatMacroFunctionNode.html",
    "title": "Class CustomRepeatMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class CustomRepeatMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CustomRepeatMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode CustomRepeatMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CustomRepeatMacroFunctionNode(string?, List<Node>?, List<Node>?) public CustomRepeatMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CustomUndoMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CustomUndoMacroFunctionNode.html",
    "title": "Class CustomUndoMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class CustomUndoMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CustomUndoMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode CustomUndoMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CustomUndoMacroFunctionNode(string?, List<Node>?, List<Node>?) public CustomUndoMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CustomizeToolbarCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CustomizeToolbarCommandFunctionNode.html",
    "title": "Class CustomizeToolbarCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CustomizeToolbarCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CustomizeToolbarCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CustomizeToolbarCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CustomizeToolbarCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CustomizeToolbarCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.CutCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.CutCommandFunctionNode.html",
    "title": "Class CutCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class CutCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class CutCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode CutCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CutCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public CutCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DAverageStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DAverageStandardFunctionNode.html",
    "title": "Class DAverageStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DAverageStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DAverageStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DAverageStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DAverageStandardFunctionNode(string?, List<Node>?, List<Node>?) public DAverageStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DBCSStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DBCSStandardFunctionNode.html",
    "title": "Class DBCSStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DBCSStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DBCSStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DBCSStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DBCSStandardFunctionNode(string?, List<Node>?, List<Node>?) public DBCSStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DBStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DBStandardFunctionNode.html",
    "title": "Class DBStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DBStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DBStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DBStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DBStandardFunctionNode(string?, List<Node>?, List<Node>?) public DBStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DCountAStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DCountAStandardFunctionNode.html",
    "title": "Class DCountAStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DCountAStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DCountAStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DCountAStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DCountAStandardFunctionNode(string?, List<Node>?, List<Node>?) public DCountAStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DCountStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DCountStandardFunctionNode.html",
    "title": "Class DCountStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DCountStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DCountStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DCountStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DCountStandardFunctionNode(string?, List<Node>?, List<Node>?) public DCountStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DDBStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DDBStandardFunctionNode.html",
    "title": "Class DDBStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DDBStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DDBStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DDBStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DDBStandardFunctionNode(string?, List<Node>?, List<Node>?) public DDBStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DGetStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DGetStandardFunctionNode.html",
    "title": "Class DGetStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DGetStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DGetStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DGetStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DGetStandardFunctionNode(string?, List<Node>?, List<Node>?) public DGetStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DMaxStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DMaxStandardFunctionNode.html",
    "title": "Class DMaxStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DMaxStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DMaxStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DMaxStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DMaxStandardFunctionNode(string?, List<Node>?, List<Node>?) public DMaxStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DMinStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DMinStandardFunctionNode.html",
    "title": "Class DMinStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DMinStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DMinStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DMinStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DMinStandardFunctionNode(string?, List<Node>?, List<Node>?) public DMinStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DProductStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DProductStandardFunctionNode.html",
    "title": "Class DProductStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DProductStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DProductStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DProductStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DProductStandardFunctionNode(string?, List<Node>?, List<Node>?) public DProductStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DStdDevPStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DStdDevPStandardFunctionNode.html",
    "title": "Class DStdDevPStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DStdDevPStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DStdDevPStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DStdDevPStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DStdDevPStandardFunctionNode(string?, List<Node>?, List<Node>?) public DStdDevPStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DStdDevStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DStdDevStandardFunctionNode.html",
    "title": "Class DStdDevStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DStdDevStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DStdDevStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DStdDevStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DStdDevStandardFunctionNode(string?, List<Node>?, List<Node>?) public DStdDevStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DSumStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DSumStandardFunctionNode.html",
    "title": "Class DSumStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DSumStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DSumStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DSumStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DSumStandardFunctionNode(string?, List<Node>?, List<Node>?) public DSumStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DVarPStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DVarPStandardFunctionNode.html",
    "title": "Class DVarPStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DVarPStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DVarPStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DVarPStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DVarPStandardFunctionNode(string?, List<Node>?, List<Node>?) public DVarPStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DVarStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DVarStandardFunctionNode.html",
    "title": "Class DVarStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DVarStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DVarStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DVarStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DVarStandardFunctionNode(string?, List<Node>?, List<Node>?) public DVarStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DataDeleteCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DataDeleteCommandFunctionNode.html",
    "title": "Class DataDeleteCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DataDeleteCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DataDeleteCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DataDeleteCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DataDeleteCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DataDeleteCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DataFindCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DataFindCommandFunctionNode.html",
    "title": "Class DataFindCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DataFindCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DataFindCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DataFindCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DataFindCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DataFindCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DataFindNextCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DataFindNextCommandFunctionNode.html",
    "title": "Class DataFindNextCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DataFindNextCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DataFindNextCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DataFindNextCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DataFindNextCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DataFindNextCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DataFindPrevCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DataFindPrevCommandFunctionNode.html",
    "title": "Class DataFindPrevCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DataFindPrevCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DataFindPrevCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DataFindPrevCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DataFindPrevCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DataFindPrevCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DataFormCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DataFormCommandFunctionNode.html",
    "title": "Class DataFormCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DataFormCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DataFormCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DataFormCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DataFormCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DataFormCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DataLabelCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DataLabelCommandFunctionNode.html",
    "title": "Class DataLabelCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DataLabelCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DataLabelCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DataLabelCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DataLabelCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DataLabelCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DataSeriesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DataSeriesCommandFunctionNode.html",
    "title": "Class DataSeriesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DataSeriesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DataSeriesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DataSeriesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DataSeriesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DataSeriesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DateStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DateStandardFunctionNode.html",
    "title": "Class DateStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DateStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DateStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DateStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DateStandardFunctionNode(string?, List<Node>?, List<Node>?) public DateStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DateStringStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DateStringStandardFunctionNode.html",
    "title": "Class DateStringStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DateStringStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DateStringStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DateStringStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DateStringStandardFunctionNode(string?, List<Node>?, List<Node>?) public DateStringStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DateValueStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DateValueStandardFunctionNode.html",
    "title": "Class DateValueStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DateValueStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DateValueStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DateValueStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DateValueStandardFunctionNode(string?, List<Node>?, List<Node>?) public DateValueStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DatedIfStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DatedIfStandardFunctionNode.html",
    "title": "Class DatedIfStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DatedIfStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DatedIfStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DatedIfStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DatedIfStandardFunctionNode(string?, List<Node>?, List<Node>?) public DatedIfStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DayStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DayStandardFunctionNode.html",
    "title": "Class DayStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DayStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DayStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DayStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DayStandardFunctionNode(string?, List<Node>?, List<Node>?) public DayStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.Days360StandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.Days360StandardFunctionNode.html",
    "title": "Class Days360StandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class Days360StandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class Days360StandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode Days360StandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Days360StandardFunctionNode(string?, List<Node>?, List<Node>?) public Days360StandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DaysFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DaysFutureFunctionNode.html",
    "title": "Class DaysFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class DaysFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DaysFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode DaysFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DaysFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public DaysFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeRefMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeRefMacroFunctionNode.html",
    "title": "Class DeRefMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class DeRefMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DeRefMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode DeRefMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DeRefMacroFunctionNode(string?, List<Node>?, List<Node>?) public DeRefMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DecToBinStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DecToBinStandardFunctionNode.html",
    "title": "Class DecToBinStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DecToBinStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DecToBinStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DecToBinStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DecToBinStandardFunctionNode(string?, List<Node>?, List<Node>?) public DecToBinStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DecToHexStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DecToHexStandardFunctionNode.html",
    "title": "Class DecToHexStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DecToHexStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DecToHexStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DecToHexStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DecToHexStandardFunctionNode(string?, List<Node>?, List<Node>?) public DecToHexStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DecToOctStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DecToOctStandardFunctionNode.html",
    "title": "Class DecToOctStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DecToOctStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DecToOctStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DecToOctStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DecToOctStandardFunctionNode(string?, List<Node>?, List<Node>?) public DecToOctStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DecimalFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DecimalFutureFunctionNode.html",
    "title": "Class DecimalFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class DecimalFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DecimalFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode DecimalFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DecimalFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public DecimalFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DefineNameCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DefineNameCommandFunctionNode.html",
    "title": "Class DefineNameCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DefineNameCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DefineNameCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DefineNameCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DefineNameCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DefineNameCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DefineStyleCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DefineStyleCommandFunctionNode.html",
    "title": "Class DefineStyleCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DefineStyleCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DefineStyleCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DefineStyleCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DefineStyleCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DefineStyleCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DegreesStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DegreesStandardFunctionNode.html",
    "title": "Class DegreesStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DegreesStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DegreesStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DegreesStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DegreesStandardFunctionNode(string?, List<Node>?, List<Node>?) public DegreesStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteArrowCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteArrowCommandFunctionNode.html",
    "title": "Class DeleteArrowCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DeleteArrowCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DeleteArrowCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DeleteArrowCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DeleteArrowCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DeleteArrowCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteBarMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteBarMacroFunctionNode.html",
    "title": "Class DeleteBarMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class DeleteBarMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DeleteBarMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode DeleteBarMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DeleteBarMacroFunctionNode(string?, List<Node>?, List<Node>?) public DeleteBarMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteChartAutoFormatCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteChartAutoFormatCommandFunctionNode.html",
    "title": "Class DeleteChartAutoFormatCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DeleteChartAutoFormatCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DeleteChartAutoFormatCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DeleteChartAutoFormatCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DeleteChartAutoFormatCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DeleteChartAutoFormatCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteCommandMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteCommandMacroFunctionNode.html",
    "title": "Class DeleteCommandMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class DeleteCommandMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DeleteCommandMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode DeleteCommandMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DeleteCommandMacroFunctionNode(string?, List<Node>?, List<Node>?) public DeleteCommandMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteFormatCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteFormatCommandFunctionNode.html",
    "title": "Class DeleteFormatCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DeleteFormatCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DeleteFormatCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DeleteFormatCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DeleteFormatCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DeleteFormatCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteMenuMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteMenuMacroFunctionNode.html",
    "title": "Class DeleteMenuMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class DeleteMenuMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DeleteMenuMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode DeleteMenuMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DeleteMenuMacroFunctionNode(string?, List<Node>?, List<Node>?) public DeleteMenuMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteNameCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteNameCommandFunctionNode.html",
    "title": "Class DeleteNameCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DeleteNameCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DeleteNameCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DeleteNameCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DeleteNameCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DeleteNameCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteNoteCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteNoteCommandFunctionNode.html",
    "title": "Class DeleteNoteCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DeleteNoteCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DeleteNoteCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DeleteNoteCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DeleteNoteCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DeleteNoteCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteOverlayCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteOverlayCommandFunctionNode.html",
    "title": "Class DeleteOverlayCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DeleteOverlayCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DeleteOverlayCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DeleteOverlayCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DeleteOverlayCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DeleteOverlayCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteStyleCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteStyleCommandFunctionNode.html",
    "title": "Class DeleteStyleCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DeleteStyleCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DeleteStyleCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DeleteStyleCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DeleteStyleCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DeleteStyleCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteToolCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteToolCommandFunctionNode.html",
    "title": "Class DeleteToolCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DeleteToolCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DeleteToolCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DeleteToolCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DeleteToolCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DeleteToolCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteToolbarMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeleteToolbarMacroFunctionNode.html",
    "title": "Class DeleteToolbarMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class DeleteToolbarMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DeleteToolbarMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode DeleteToolbarMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DeleteToolbarMacroFunctionNode(string?, List<Node>?, List<Node>?) public DeleteToolbarMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeltaStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DeltaStandardFunctionNode.html",
    "title": "Class DeltaStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DeltaStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DeltaStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DeltaStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DeltaStandardFunctionNode(string?, List<Node>?, List<Node>?) public DeltaStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DemoteCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DemoteCommandFunctionNode.html",
    "title": "Class DemoteCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DemoteCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DemoteCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DemoteCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DemoteCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DemoteCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DetectLanguageFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DetectLanguageFutureFunctionNode.html",
    "title": "Class DetectLanguageFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class DetectLanguageFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DetectLanguageFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode DetectLanguageFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DetectLanguageFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public DetectLanguageFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DevSqStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DevSqStandardFunctionNode.html",
    "title": "Class DevSqStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DevSqStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DevSqStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DevSqStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DevSqStandardFunctionNode(string?, List<Node>?, List<Node>?) public DevSqStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DialogBoxMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DialogBoxMacroFunctionNode.html",
    "title": "Class DialogBoxMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class DialogBoxMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DialogBoxMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode DialogBoxMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DialogBoxMacroFunctionNode(string?, List<Node>?, List<Node>?) public DialogBoxMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DirectoryMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DirectoryMacroFunctionNode.html",
    "title": "Class DirectoryMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class DirectoryMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DirectoryMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode DirectoryMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DirectoryMacroFunctionNode(string?, List<Node>?, List<Node>?) public DirectoryMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DisableInputCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DisableInputCommandFunctionNode.html",
    "title": "Class DisableInputCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DisableInputCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DisableInputCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DisableInputCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DisableInputCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DisableInputCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DiscStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DiscStandardFunctionNode.html",
    "title": "Class DiscStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DiscStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DiscStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DiscStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DiscStandardFunctionNode(string?, List<Node>?, List<Node>?) public DiscStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DisplayCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DisplayCommandFunctionNode.html",
    "title": "Class DisplayCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DisplayCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DisplayCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DisplayCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DisplayCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DisplayCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DivZeroErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DivZeroErrorNode.html",
    "title": "Class DivZeroErrorNode | OpenLanguage Documentation",
    "summary": "Class DivZeroErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DivZeroErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode DivZeroErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DivZeroErrorNode(string, List<Node>?, List<Node>?) public DivZeroErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DivideNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DivideNode.html",
    "title": "Class DivideNode | OpenLanguage Documentation",
    "summary": "Class DivideNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DivideNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode DivideNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DivideNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public DivideNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DocumentsMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DocumentsMacroFunctionNode.html",
    "title": "Class DocumentsMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class DocumentsMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DocumentsMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode DocumentsMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DocumentsMacroFunctionNode(string?, List<Node>?, List<Node>?) public DocumentsMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DollarDeStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DollarDeStandardFunctionNode.html",
    "title": "Class DollarDeStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DollarDeStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DollarDeStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DollarDeStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DollarDeStandardFunctionNode(string?, List<Node>?, List<Node>?) public DollarDeStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DollarFrStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DollarFrStandardFunctionNode.html",
    "title": "Class DollarFrStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DollarFrStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DollarFrStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DollarFrStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DollarFrStandardFunctionNode(string?, List<Node>?, List<Node>?) public DollarFrStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DollarStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DollarStandardFunctionNode.html",
    "title": "Class DollarStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DollarStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DollarStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DollarStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DollarStandardFunctionNode(string?, List<Node>?, List<Node>?) public DollarStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DropFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DropFutureFunctionNode.html",
    "title": "Class DropFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class DropFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DropFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode DropFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DropFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public DropFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DuplicateCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DuplicateCommandFunctionNode.html",
    "title": "Class DuplicateCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class DuplicateCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DuplicateCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode DuplicateCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DuplicateCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public DuplicateCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DurationStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DurationStandardFunctionNode.html",
    "title": "Class DurationStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class DurationStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DurationStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode DurationStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DurationStandardFunctionNode(string?, List<Node>?, List<Node>?) public DurationStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.DynamicNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.DynamicNode.html",
    "title": "Class DynamicNode | OpenLanguage Documentation",
    "summary": "Class DynamicNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class DynamicNode : UnaryOperatorNode Inheritance object Node ExpressionNode UnaryOperatorNode DynamicNode Inherited Members UnaryOperatorNode.Operand UnaryOperatorNode.Operator ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DynamicNode(ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public DynamicNode(ExpressionNode op, ExpressionNode operand, List<Node>? lws = null, List<Node>? tws = null) Parameters op ExpressionNode operand ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EDateStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EDateStandardFunctionNode.html",
    "title": "Class EDateStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class EDateStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EDateStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode EDateStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EDateStandardFunctionNode(string?, List<Node>?, List<Node>?) public EDateStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EOMonthStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EOMonthStandardFunctionNode.html",
    "title": "Class EOMonthStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class EOMonthStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EOMonthStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode EOMonthStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EOMonthStandardFunctionNode(string?, List<Node>?, List<Node>?) public EOMonthStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EchoMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EchoMacroFunctionNode.html",
    "title": "Class EchoMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class EchoMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EchoMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode EchoMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EchoMacroFunctionNode(string?, List<Node>?, List<Node>?) public EchoMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EcmaCeilingFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EcmaCeilingFutureFunctionNode.html",
    "title": "Class EcmaCeilingFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class EcmaCeilingFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EcmaCeilingFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode EcmaCeilingFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EcmaCeilingFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public EcmaCeilingFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditColorCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditColorCommandFunctionNode.html",
    "title": "Class EditColorCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class EditColorCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EditColorCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode EditColorCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EditColorCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public EditColorCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditDeleteCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditDeleteCommandFunctionNode.html",
    "title": "Class EditDeleteCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class EditDeleteCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EditDeleteCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode EditDeleteCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EditDeleteCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public EditDeleteCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditObjectCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditObjectCommandFunctionNode.html",
    "title": "Class EditObjectCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class EditObjectCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EditObjectCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode EditObjectCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EditObjectCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public EditObjectCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditRepeatCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditRepeatCommandFunctionNode.html",
    "title": "Class EditRepeatCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class EditRepeatCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EditRepeatCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode EditRepeatCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EditRepeatCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public EditRepeatCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditSeriesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditSeriesCommandFunctionNode.html",
    "title": "Class EditSeriesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class EditSeriesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EditSeriesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode EditSeriesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EditSeriesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public EditSeriesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditToolCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditToolCommandFunctionNode.html",
    "title": "Class EditToolCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class EditToolCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EditToolCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode EditToolCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EditToolCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public EditToolCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditboxPropertiesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditboxPropertiesCommandFunctionNode.html",
    "title": "Class EditboxPropertiesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class EditboxPropertiesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EditboxPropertiesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode EditboxPropertiesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EditboxPropertiesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public EditboxPropertiesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditionOptionsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EditionOptionsCommandFunctionNode.html",
    "title": "Class EditionOptionsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class EditionOptionsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EditionOptionsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode EditionOptionsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EditionOptionsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public EditionOptionsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EffectStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EffectStandardFunctionNode.html",
    "title": "Class EffectStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class EffectStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EffectStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode EffectStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EffectStandardFunctionNode(string?, List<Node>?, List<Node>?) public EffectStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ElseIfMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ElseIfMacroFunctionNode.html",
    "title": "Class ElseIfMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ElseIfMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ElseIfMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ElseIfMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ElseIfMacroFunctionNode(string?, List<Node>?, List<Node>?) public ElseIfMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ElseMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ElseMacroFunctionNode.html",
    "title": "Class ElseMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ElseMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ElseMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ElseMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ElseMacroFunctionNode(string?, List<Node>?, List<Node>?) public ElseMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EmptyArgumentNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EmptyArgumentNode.html",
    "title": "Class EmptyArgumentNode | OpenLanguage Documentation",
    "summary": "Class EmptyArgumentNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EmptyArgumentNode : ExpressionNode Inheritance object Node ExpressionNode EmptyArgumentNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EmptyArgumentNode(List<Node>?, List<Node>?) public EmptyArgumentNode(List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EnableCommandMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EnableCommandMacroFunctionNode.html",
    "title": "Class EnableCommandMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class EnableCommandMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EnableCommandMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode EnableCommandMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EnableCommandMacroFunctionNode(string?, List<Node>?, List<Node>?) public EnableCommandMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EnableObjectCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EnableObjectCommandFunctionNode.html",
    "title": "Class EnableObjectCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class EnableObjectCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EnableObjectCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode EnableObjectCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EnableObjectCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public EnableObjectCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EnableTipwizardCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EnableTipwizardCommandFunctionNode.html",
    "title": "Class EnableTipwizardCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class EnableTipwizardCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EnableTipwizardCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode EnableTipwizardCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EnableTipwizardCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public EnableTipwizardCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EnableToolMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EnableToolMacroFunctionNode.html",
    "title": "Class EnableToolMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class EnableToolMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EnableToolMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode EnableToolMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EnableToolMacroFunctionNode(string?, List<Node>?, List<Node>?) public EnableToolMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EncodeUrlFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EncodeUrlFutureFunctionNode.html",
    "title": "Class EncodeUrlFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class EncodeUrlFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EncodeUrlFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode EncodeUrlFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EncodeUrlFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public EncodeUrlFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EndIfMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EndIfMacroFunctionNode.html",
    "title": "Class EndIfMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class EndIfMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EndIfMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode EndIfMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EndIfMacroFunctionNode(string?, List<Node>?, List<Node>?) public EndIfMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EnterDataCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EnterDataCommandFunctionNode.html",
    "title": "Class EnterDataCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class EnterDataCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EnterDataCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode EnterDataCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EnterDataCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public EnterDataCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EqualLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EqualLiteralNode.html",
    "title": "Class EqualLiteralNode | OpenLanguage Documentation",
    "summary": "Class EqualLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EqualLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode EqualLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EqualLiteralNode(string, List<Node>?, List<Node>?) public EqualLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EqualNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EqualNode.html",
    "title": "Class EqualNode | OpenLanguage Documentation",
    "summary": "Class EqualNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EqualNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode EqualNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EqualNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public EqualNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EqualPrefixedNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EqualPrefixedNode.html",
    "title": "Class EqualPrefixedNode | OpenLanguage Documentation",
    "summary": "Class EqualPrefixedNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EqualPrefixedNode : ExpressionNode Inheritance object Node ExpressionNode EqualPrefixedNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EqualPrefixedNode(EqualLiteralNode, ExpressionNode, List<Node>?, List<Node>?) public EqualPrefixedNode(EqualLiteralNode equalPrefix, ExpressionNode expression, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters equalPrefix EqualLiteralNode expression ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node> Properties EqualPrefix public EqualLiteralNode EqualPrefix { get; set; } Property Value EqualLiteralNode Expression public ExpressionNode Expression { get; set; } Property Value ExpressionNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErfCPreciseFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErfCPreciseFutureFunctionNode.html",
    "title": "Class ErfCPreciseFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ErfCPreciseFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ErfCPreciseFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ErfCPreciseFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ErfCPreciseFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ErfCPreciseFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErfCStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErfCStandardFunctionNode.html",
    "title": "Class ErfCStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ErfCStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ErfCStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ErfCStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ErfCStandardFunctionNode(string?, List<Node>?, List<Node>?) public ErfCStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErfPreciseFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErfPreciseFutureFunctionNode.html",
    "title": "Class ErfPreciseFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ErfPreciseFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ErfPreciseFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ErfPreciseFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ErfPreciseFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ErfPreciseFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErfStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErfStandardFunctionNode.html",
    "title": "Class ErfStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ErfStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ErfStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ErfStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ErfStandardFunctionNode(string?, List<Node>?, List<Node>?) public ErfStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErrorMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErrorMacroFunctionNode.html",
    "title": "Class ErrorMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ErrorMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ErrorMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ErrorMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ErrorMacroFunctionNode(string?, List<Node>?, List<Node>?) public ErrorMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErrorNode.html",
    "title": "Class ErrorNode | OpenLanguage Documentation",
    "summary": "Class ErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ErrorNode : ExpressionNode Inheritance object Node ExpressionNode ErrorNode Derived BlockedErrorNode BusyErrorNode CalcErrorNode CircularErrorNode ConnectErrorNode DivZeroErrorNode ExternalErrorNode FieldErrorNode GettingDataErrorNode NAErrorNode NameErrorNode NullErrorNode NumErrorNode PythonErrorNode SpillErrorNode UnknownErrorNode ValueErrorNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ErrorNode(string, List<Node>?, List<Node>?) public ErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node> Properties ErrorType public string ErrorType { get; set; } Property Value string Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErrorTypeStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErrorTypeStandardFunctionNode.html",
    "title": "Class ErrorTypeStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ErrorTypeStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ErrorTypeStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ErrorTypeStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ErrorTypeStandardFunctionNode(string?, List<Node>?, List<Node>?) public ErrorTypeStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErrorbarXCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErrorbarXCommandFunctionNode.html",
    "title": "Class ErrorbarXCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ErrorbarXCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ErrorbarXCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ErrorbarXCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ErrorbarXCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ErrorbarXCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErrorbarYCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ErrorbarYCommandFunctionNode.html",
    "title": "Class ErrorbarYCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ErrorbarYCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ErrorbarYCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ErrorbarYCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ErrorbarYCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ErrorbarYCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EuroConvertFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EuroConvertFutureFunctionNode.html",
    "title": "Class EuroConvertFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class EuroConvertFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EuroConvertFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode EuroConvertFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EuroConvertFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public EuroConvertFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EvaluateMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EvaluateMacroFunctionNode.html",
    "title": "Class EvaluateMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class EvaluateMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EvaluateMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode EvaluateMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EvaluateMacroFunctionNode(string?, List<Node>?, List<Node>?) public EvaluateMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.EvenStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.EvenStandardFunctionNode.html",
    "title": "Class EvenStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class EvenStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class EvenStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode EvenStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EvenStandardFunctionNode(string?, List<Node>?, List<Node>?) public EvenStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExactStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExactStandardFunctionNode.html",
    "title": "Class ExactStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ExactStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ExactStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ExactStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ExactStandardFunctionNode(string?, List<Node>?, List<Node>?) public ExactStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExecMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExecMacroFunctionNode.html",
    "title": "Class ExecMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ExecMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ExecMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ExecMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ExecMacroFunctionNode(string?, List<Node>?, List<Node>?) public ExecMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExecuteMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExecuteMacroFunctionNode.html",
    "title": "Class ExecuteMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ExecuteMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ExecuteMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ExecuteMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ExecuteMacroFunctionNode(string?, List<Node>?, List<Node>?) public ExecuteMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExpStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExpStandardFunctionNode.html",
    "title": "Class ExpStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ExpStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ExpStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ExpStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ExpStandardFunctionNode(string?, List<Node>?, List<Node>?) public ExpStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExpandFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExpandFutureFunctionNode.html",
    "title": "Class ExpandFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ExpandFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ExpandFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ExpandFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ExpandFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ExpandFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExponDistFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExponDistFutureFunctionNode.html",
    "title": "Class ExponDistFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ExponDistFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ExponDistFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ExponDistFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ExponDistFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ExponDistFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExponDistStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExponDistStandardFunctionNode.html",
    "title": "Class ExponDistStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ExponDistStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ExponDistStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ExponDistStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ExponDistStandardFunctionNode(string?, List<Node>?, List<Node>?) public ExponDistStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExpressionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExpressionNode.html",
    "title": "Class ExpressionNode | OpenLanguage Documentation",
    "summary": "Class ExpressionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll Represents a node that can be evaluated to a value. This base class now includes properties to retain all surrounding whitespace for lossless parsing. public abstract class ExpressionNode : Node Inheritance object Node ExpressionNode Derived ArrayNode BangReferenceNode BinaryOperatorNode CellNode<R, RN, C, CN> CharacterDelimitedExpressionNodes<L, D, R> CharacterLiteralNode ColumnIndexedKeyword ColumnNode<N> ColumnRangeIndexedKeyword ConcatenatedNodePair<L, R> ConcatenatedNodes EmptyArgumentNode EqualPrefixedNode ErrorNode FunctionCallNode IndexedPivotField LogicalNode NameNode NumericLiteralNode<N> ParenthesizedExpressionNode PivotField PivotFieldOffset PrefixNode QuotedSheetNode RowNode<N> SheetNode SheetRangeNode SheetReferenceNode StringNode StructureAbsoluteColumn StructureAllRowsReferenceNode StructureColumn StructureColumnRange StructureDataTotalsReferenceNode StructureHeadersDataReferenceNode StructureThisRowColumnReferenceNode StructuredReferenceKeywordNode StructuredReferenceNode UnaryOperatorNode WorkbookReferenceNode Inherited Members Node.Children<O>() Node.ReplaceChild(int, Node) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ExpressionNode(List<Node>?, List<Node>?) protected ExpressionNode(List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters leadingWhitespace List<Node> trailingWhitespace List<Node> Properties LeadingWhitespace Whitespace characters that appeared before this expression in the original formula. public List<Node> LeadingWhitespace { get; set; } Property Value List<Node> Precedence Gets the operator precedence for this expression node. public abstract int Precedence { get; } Property Value int TrailingWhitespace Whitespace characters that appeared after this expression in the original formula. public List<Node> TrailingWhitespace { get; set; } Property Value List<Node> Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public abstract string ToRawString() Returns string The raw string representation of this node's specific content. ToString() Converts the AST node back into its string representation, including all captured whitespace. public override sealed string ToString() Returns string"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExtendPolygonCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExtendPolygonCommandFunctionNode.html",
    "title": "Class ExtendPolygonCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ExtendPolygonCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ExtendPolygonCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ExtendPolygonCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ExtendPolygonCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ExtendPolygonCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExternalErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExternalErrorNode.html",
    "title": "Class ExternalErrorNode | OpenLanguage Documentation",
    "summary": "Class ExternalErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ExternalErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode ExternalErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ExternalErrorNode(string, List<Node>?, List<Node>?) public ExternalErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExtractCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ExtractCommandFunctionNode.html",
    "title": "Class ExtractCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ExtractCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ExtractCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ExtractCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ExtractCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ExtractCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FDistFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FDistFutureFunctionNode.html",
    "title": "Class FDistFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class FDistFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FDistFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode FDistFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FDistFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public FDistFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FDistRtFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FDistRtFutureFunctionNode.html",
    "title": "Class FDistRtFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class FDistRtFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FDistRtFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode FDistRtFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FDistRtFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public FDistRtFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FDistStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FDistStandardFunctionNode.html",
    "title": "Class FDistStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FDistStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FDistStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FDistStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FDistStandardFunctionNode(string?, List<Node>?, List<Node>?) public FDistStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FInvFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FInvFutureFunctionNode.html",
    "title": "Class FInvFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class FInvFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FInvFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode FInvFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FInvFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public FInvFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FInvRtFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FInvRtFutureFunctionNode.html",
    "title": "Class FInvRtFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class FInvRtFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FInvRtFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode FInvRtFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FInvRtFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public FInvRtFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FInvStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FInvStandardFunctionNode.html",
    "title": "Class FInvStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FInvStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FInvStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FInvStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FInvStandardFunctionNode(string?, List<Node>?, List<Node>?) public FInvStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FTestFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FTestFutureFunctionNode.html",
    "title": "Class FTestFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class FTestFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FTestFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode FTestFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FTestFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public FTestFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FTestStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FTestStandardFunctionNode.html",
    "title": "Class FTestStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FTestStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FTestStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FTestStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FTestStandardFunctionNode(string?, List<Node>?, List<Node>?) public FTestStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FactDoubleStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FactDoubleStandardFunctionNode.html",
    "title": "Class FactDoubleStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FactDoubleStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FactDoubleStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FactDoubleStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FactDoubleStandardFunctionNode(string?, List<Node>?, List<Node>?) public FactDoubleStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FactStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FactStandardFunctionNode.html",
    "title": "Class FactStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FactStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FactStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FactStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FactStandardFunctionNode(string?, List<Node>?, List<Node>?) public FactStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FalseStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FalseStandardFunctionNode.html",
    "title": "Class FalseStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FalseStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FalseStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FalseStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FalseStandardFunctionNode(string?, List<Node>?, List<Node>?) public FalseStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FcloseMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FcloseMacroFunctionNode.html",
    "title": "Class FcloseMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class FcloseMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FcloseMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode FcloseMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FcloseMacroFunctionNode(string?, List<Node>?, List<Node>?) public FcloseMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FieldErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FieldErrorNode.html",
    "title": "Class FieldErrorNode | OpenLanguage Documentation",
    "summary": "Class FieldErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FieldErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode FieldErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FieldErrorNode(string, List<Node>?, List<Node>?) public FieldErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FieldValueFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FieldValueFutureFunctionNode.html",
    "title": "Class FieldValueFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class FieldValueFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FieldValueFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode FieldValueFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FieldValueFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public FieldValueFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FileCloseCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FileCloseCommandFunctionNode.html",
    "title": "Class FileCloseCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FileCloseCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FileCloseCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FileCloseCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FileCloseCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FileCloseCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FileDeleteCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FileDeleteCommandFunctionNode.html",
    "title": "Class FileDeleteCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FileDeleteCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FileDeleteCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FileDeleteCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FileDeleteCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FileDeleteCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FilesMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FilesMacroFunctionNode.html",
    "title": "Class FilesMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class FilesMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FilesMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode FilesMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FilesMacroFunctionNode(string?, List<Node>?, List<Node>?) public FilesMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FillAutoCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FillAutoCommandFunctionNode.html",
    "title": "Class FillAutoCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FillAutoCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FillAutoCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FillAutoCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FillAutoCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FillAutoCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FillDownCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FillDownCommandFunctionNode.html",
    "title": "Class FillDownCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FillDownCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FillDownCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FillDownCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FillDownCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FillDownCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FillGroupCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FillGroupCommandFunctionNode.html",
    "title": "Class FillGroupCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FillGroupCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FillGroupCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FillGroupCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FillGroupCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FillGroupCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FillLeftCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FillLeftCommandFunctionNode.html",
    "title": "Class FillLeftCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FillLeftCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FillLeftCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FillLeftCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FillLeftCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FillLeftCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FillRightCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FillRightCommandFunctionNode.html",
    "title": "Class FillRightCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FillRightCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FillRightCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FillRightCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FillRightCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FillRightCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FillUpCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FillUpCommandFunctionNode.html",
    "title": "Class FillUpCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FillUpCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FillUpCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FillUpCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FillUpCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FillUpCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FilterAdvancedCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FilterAdvancedCommandFunctionNode.html",
    "title": "Class FilterAdvancedCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FilterAdvancedCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FilterAdvancedCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FilterAdvancedCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FilterAdvancedCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FilterAdvancedCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FilterShowAllCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FilterShowAllCommandFunctionNode.html",
    "title": "Class FilterShowAllCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FilterShowAllCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FilterShowAllCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FilterShowAllCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FilterShowAllCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FilterShowAllCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FilterWorksheetFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FilterWorksheetFunctionNode.html",
    "title": "Class FilterWorksheetFunctionNode | OpenLanguage Documentation",
    "summary": "Class FilterWorksheetFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FilterWorksheetFunctionNode : WorksheetFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode WorksheetFunctionNode FilterWorksheetFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FilterWorksheetFunctionNode(string?, XlfnFunctionPrefixNode?, XlwsFunctionPrefixNode?, List<Node>?, List<Node>?) public FilterWorksheetFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? xlfnPrefix = null, XlwsFunctionPrefixNode? xlwsPrefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string xlfnPrefix XlfnFunctionPrefixNode xlwsPrefix XlwsFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FilterXmlFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FilterXmlFutureFunctionNode.html",
    "title": "Class FilterXmlFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class FilterXmlFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FilterXmlFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode FilterXmlFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FilterXmlFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public FilterXmlFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FindBStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FindBStandardFunctionNode.html",
    "title": "Class FindBStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FindBStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FindBStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FindBStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FindBStandardFunctionNode(string?, List<Node>?, List<Node>?) public FindBStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FindFileCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FindFileCommandFunctionNode.html",
    "title": "Class FindFileCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FindFileCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FindFileCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FindFileCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FindFileCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FindFileCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FindStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FindStandardFunctionNode.html",
    "title": "Class FindStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FindStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FindStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FindStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FindStandardFunctionNode(string?, List<Node>?, List<Node>?) public FindStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FisherInvStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FisherInvStandardFunctionNode.html",
    "title": "Class FisherInvStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FisherInvStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FisherInvStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FisherInvStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FisherInvStandardFunctionNode(string?, List<Node>?, List<Node>?) public FisherInvStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FisherStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FisherStandardFunctionNode.html",
    "title": "Class FisherStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FisherStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FisherStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FisherStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FisherStandardFunctionNode(string?, List<Node>?, List<Node>?) public FisherStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FixedStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FixedStandardFunctionNode.html",
    "title": "Class FixedStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FixedStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FixedStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FixedStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FixedStandardFunctionNode(string?, List<Node>?, List<Node>?) public FixedStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FloorMathFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FloorMathFutureFunctionNode.html",
    "title": "Class FloorMathFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class FloorMathFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FloorMathFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode FloorMathFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FloorMathFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public FloorMathFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FloorPreciseFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FloorPreciseFutureFunctionNode.html",
    "title": "Class FloorPreciseFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class FloorPreciseFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FloorPreciseFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode FloorPreciseFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FloorPreciseFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public FloorPreciseFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FloorStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FloorStandardFunctionNode.html",
    "title": "Class FloorStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FloorStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FloorStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FloorStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FloorStandardFunctionNode(string?, List<Node>?, List<Node>?) public FloorStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FontCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FontCommandFunctionNode.html",
    "title": "Class FontCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FontCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FontCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FontCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FontCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FontCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FontPropertiesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FontPropertiesCommandFunctionNode.html",
    "title": "Class FontPropertiesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FontPropertiesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FontPropertiesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FontPropertiesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FontPropertiesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FontPropertiesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FopenMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FopenMacroFunctionNode.html",
    "title": "Class FopenMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class FopenMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FopenMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode FopenMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FopenMacroFunctionNode(string?, List<Node>?, List<Node>?) public FopenMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForCellMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForCellMacroFunctionNode.html",
    "title": "Class ForCellMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ForCellMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ForCellMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ForCellMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ForCellMacroFunctionNode(string?, List<Node>?, List<Node>?) public ForCellMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForMacroFunctionNode.html",
    "title": "Class ForMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ForMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ForMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ForMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ForMacroFunctionNode(string?, List<Node>?, List<Node>?) public ForMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForecastEtsConfIntFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForecastEtsConfIntFutureFunctionNode.html",
    "title": "Class ForecastEtsConfIntFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ForecastEtsConfIntFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ForecastEtsConfIntFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ForecastEtsConfIntFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ForecastEtsConfIntFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ForecastEtsConfIntFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForecastEtsFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForecastEtsFutureFunctionNode.html",
    "title": "Class ForecastEtsFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ForecastEtsFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ForecastEtsFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ForecastEtsFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ForecastEtsFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ForecastEtsFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForecastEtsSeasonalityFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForecastEtsSeasonalityFutureFunctionNode.html",
    "title": "Class ForecastEtsSeasonalityFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ForecastEtsSeasonalityFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ForecastEtsSeasonalityFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ForecastEtsSeasonalityFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ForecastEtsSeasonalityFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ForecastEtsSeasonalityFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForecastEtsStatFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForecastEtsStatFutureFunctionNode.html",
    "title": "Class ForecastEtsStatFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ForecastEtsStatFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ForecastEtsStatFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ForecastEtsStatFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ForecastEtsStatFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ForecastEtsStatFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForecastLinearFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForecastLinearFutureFunctionNode.html",
    "title": "Class ForecastLinearFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ForecastLinearFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ForecastLinearFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ForecastLinearFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ForecastLinearFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ForecastLinearFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForecastStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ForecastStandardFunctionNode.html",
    "title": "Class ForecastStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ForecastStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ForecastStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ForecastStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ForecastStandardFunctionNode(string?, List<Node>?, List<Node>?) public ForecastStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatAutoCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatAutoCommandFunctionNode.html",
    "title": "Class FormatAutoCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormatAutoCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormatAutoCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormatAutoCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormatAutoCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormatAutoCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatChartCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatChartCommandFunctionNode.html",
    "title": "Class FormatChartCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormatChartCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormatChartCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormatChartCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormatChartCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormatChartCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatCharttypeCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatCharttypeCommandFunctionNode.html",
    "title": "Class FormatCharttypeCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormatCharttypeCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormatCharttypeCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormatCharttypeCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormatCharttypeCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormatCharttypeCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatFontCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatFontCommandFunctionNode.html",
    "title": "Class FormatFontCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormatFontCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormatFontCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormatFontCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormatFontCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormatFontCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatLegendCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatLegendCommandFunctionNode.html",
    "title": "Class FormatLegendCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormatLegendCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormatLegendCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormatLegendCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormatLegendCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormatLegendCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatMainCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatMainCommandFunctionNode.html",
    "title": "Class FormatMainCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormatMainCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormatMainCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormatMainCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormatMainCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormatMainCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatMoveCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatMoveCommandFunctionNode.html",
    "title": "Class FormatMoveCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormatMoveCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormatMoveCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormatMoveCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormatMoveCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormatMoveCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatNumberCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatNumberCommandFunctionNode.html",
    "title": "Class FormatNumberCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormatNumberCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormatNumberCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormatNumberCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormatNumberCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormatNumberCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatOverlayCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatOverlayCommandFunctionNode.html",
    "title": "Class FormatOverlayCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormatOverlayCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormatOverlayCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormatOverlayCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormatOverlayCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormatOverlayCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatShapeCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatShapeCommandFunctionNode.html",
    "title": "Class FormatShapeCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormatShapeCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormatShapeCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormatShapeCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormatShapeCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormatShapeCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatSizeCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatSizeCommandFunctionNode.html",
    "title": "Class FormatSizeCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormatSizeCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormatSizeCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormatSizeCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormatSizeCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormatSizeCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatTextCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormatTextCommandFunctionNode.html",
    "title": "Class FormatTextCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormatTextCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormatTextCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormatTextCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormatTextCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormatTextCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaArrayCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaArrayCommandFunctionNode.html",
    "title": "Class FormulaArrayCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormulaArrayCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormulaArrayCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormulaArrayCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormulaArrayCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormulaArrayCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaCommandFunctionNode.html",
    "title": "Class FormulaCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormulaCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormulaCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormulaCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormulaCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormulaCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaConvertMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaConvertMacroFunctionNode.html",
    "title": "Class FormulaConvertMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormulaConvertMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormulaConvertMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode FormulaConvertMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormulaConvertMacroFunctionNode(string?, List<Node>?, List<Node>?) public FormulaConvertMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaFillCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaFillCommandFunctionNode.html",
    "title": "Class FormulaFillCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormulaFillCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormulaFillCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormulaFillCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormulaFillCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormulaFillCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaFindCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaFindCommandFunctionNode.html",
    "title": "Class FormulaFindCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormulaFindCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormulaFindCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormulaFindCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormulaFindCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormulaFindCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaFindNextCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaFindNextCommandFunctionNode.html",
    "title": "Class FormulaFindNextCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormulaFindNextCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormulaFindNextCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormulaFindNextCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormulaFindNextCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormulaFindNextCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaFindPrevCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaFindPrevCommandFunctionNode.html",
    "title": "Class FormulaFindPrevCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormulaFindPrevCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormulaFindPrevCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormulaFindPrevCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormulaFindPrevCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormulaFindPrevCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaGotoCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaGotoCommandFunctionNode.html",
    "title": "Class FormulaGotoCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormulaGotoCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormulaGotoCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormulaGotoCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormulaGotoCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormulaGotoCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaReplaceCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaReplaceCommandFunctionNode.html",
    "title": "Class FormulaReplaceCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormulaReplaceCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormulaReplaceCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FormulaReplaceCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormulaReplaceCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FormulaReplaceCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaTextFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FormulaTextFutureFunctionNode.html",
    "title": "Class FormulaTextFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class FormulaTextFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FormulaTextFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode FormulaTextFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormulaTextFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public FormulaTextFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FposMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FposMacroFunctionNode.html",
    "title": "Class FposMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class FposMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FposMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode FposMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FposMacroFunctionNode(string?, List<Node>?, List<Node>?) public FposMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FreadMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FreadMacroFunctionNode.html",
    "title": "Class FreadMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class FreadMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FreadMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode FreadMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FreadMacroFunctionNode(string?, List<Node>?, List<Node>?) public FreadMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FreadlnMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FreadlnMacroFunctionNode.html",
    "title": "Class FreadlnMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class FreadlnMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FreadlnMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode FreadlnMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FreadlnMacroFunctionNode(string?, List<Node>?, List<Node>?) public FreadlnMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FreezePanesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FreezePanesCommandFunctionNode.html",
    "title": "Class FreezePanesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FreezePanesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FreezePanesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FreezePanesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FreezePanesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FreezePanesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FrequencyStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FrequencyStandardFunctionNode.html",
    "title": "Class FrequencyStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FrequencyStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FrequencyStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FrequencyStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FrequencyStandardFunctionNode(string?, List<Node>?, List<Node>?) public FrequencyStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FsizeMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FsizeMacroFunctionNode.html",
    "title": "Class FsizeMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class FsizeMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FsizeMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode FsizeMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FsizeMacroFunctionNode(string?, List<Node>?, List<Node>?) public FsizeMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FullCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FullCommandFunctionNode.html",
    "title": "Class FullCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FullCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FullCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FullCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FullCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FullCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FullScreenCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FullScreenCommandFunctionNode.html",
    "title": "Class FullScreenCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FullScreenCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FullScreenCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FullScreenCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FullScreenCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FullScreenCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FunctionCallNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FunctionCallNode.html",
    "title": "Class FunctionCallNode | OpenLanguage Documentation",
    "summary": "Class FunctionCallNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FunctionCallNode : ExpressionNode Inheritance object Node ExpressionNode FunctionCallNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FunctionCallNode(ExpressionNode, List<ExpressionNode>, List<Node>?, List<Node>?) public FunctionCallNode(ExpressionNode functionIdentifier, List<ExpressionNode> arguments, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters functionIdentifier ExpressionNode arguments List<ExpressionNode> leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Arguments public List<ExpressionNode> Arguments { get; } Property Value List<ExpressionNode> FunctionReference public ExpressionNode FunctionReference { get; set; } Property Value ExpressionNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FunctionPrefixNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FunctionPrefixNode.html",
    "title": "Class FunctionPrefixNode | OpenLanguage Documentation",
    "summary": "Class FunctionPrefixNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public abstract class FunctionPrefixNode : PrefixNode Inheritance object Node ExpressionNode PrefixNode FunctionPrefixNode Derived XlbgnmFunctionPrefixNode XlfnFunctionPrefixNode XllFunctionPrefixNode XlnmFunctionPrefixNode XlpmFunctionPrefixNode XlwsFunctionPrefixNode Inherited Members PrefixNode.RawPrefix PrefixNode.Prefix PrefixNode.Precedence PrefixNode.ToRawString() PrefixNode.Children<O>() PrefixNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FunctionPrefixNode(ExpressionNode?, List<Node>?, List<Node>?) protected FunctionPrefixNode(ExpressionNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters prefix ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node> FunctionPrefixNode(string?, List<Node>?, List<Node>?) protected FunctionPrefixNode(string? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters prefix string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FunctionWizardCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FunctionWizardCommandFunctionNode.html",
    "title": "Class FunctionWizardCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class FunctionWizardCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FunctionWizardCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode FunctionWizardCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FunctionWizardCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public FunctionWizardCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FutureFunctionNode.html",
    "title": "Class FutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class FutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FutureFunctionNode : BuiltInFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode Derived AcotFutureFunctionNode AcothFutureFunctionNode AggregateFutureFunctionNode ArabicFutureFunctionNode ArrayToTextFutureFunctionNode BaseFutureFunctionNode BetaDistFutureFunctionNode BetaInvFutureFunctionNode BinomDistFutureFunctionNode BinomDistRangeFutureFunctionNode BinomInvFutureFunctionNode BitAndFutureFunctionNode BitLShiftFutureFunctionNode BitOrFutureFunctionNode BitRShiftFutureFunctionNode BitXorFutureFunctionNode BycolFutureFunctionNode ByrowFutureFunctionNode CeilingMathFutureFunctionNode CeilingPreciseFutureFunctionNode ChisqDistFutureFunctionNode ChisqDistRtFutureFunctionNode ChisqInvFutureFunctionNode ChisqInvRtFutureFunctionNode ChisqTestFutureFunctionNode ChooseColsFutureFunctionNode ChooseRowsFutureFunctionNode CombinaFutureFunctionNode ConfidenceNormFutureFunctionNode ConfidenceTFutureFunctionNode CotFutureFunctionNode CothFutureFunctionNode CovariancePFutureFunctionNode CovarianceSFutureFunctionNode CscFutureFunctionNode CschFutureFunctionNode DaysFutureFunctionNode DecimalFutureFunctionNode DetectLanguageFutureFunctionNode DropFutureFunctionNode EcmaCeilingFutureFunctionNode EncodeUrlFutureFunctionNode ErfCPreciseFutureFunctionNode ErfPreciseFutureFunctionNode EuroConvertFutureFunctionNode ExpandFutureFunctionNode ExponDistFutureFunctionNode FDistFutureFunctionNode FDistRtFutureFunctionNode FInvFutureFunctionNode FInvRtFutureFunctionNode FTestFutureFunctionNode FieldValueFutureFunctionNode FilterXmlFutureFunctionNode FloorMathFutureFunctionNode FloorPreciseFutureFunctionNode ForecastEtsConfIntFutureFunctionNode ForecastEtsFutureFunctionNode ForecastEtsSeasonalityFutureFunctionNode ForecastEtsStatFutureFunctionNode ForecastLinearFutureFunctionNode FormulaTextFutureFunctionNode GammaDistFutureFunctionNode GammaFutureFunctionNode GammaInvFutureFunctionNode GammaLnPreciseFutureFunctionNode GaussFutureFunctionNode GroupByFutureFunctionNode HStackFutureFunctionNode HypGeomDistFutureFunctionNode IfNaFutureFunctionNode ImCoshFutureFunctionNode ImCotFutureFunctionNode ImCscFutureFunctionNode ImCschFutureFunctionNode ImSecFutureFunctionNode ImSechFutureFunctionNode ImSinhFutureFunctionNode ImTanFutureFunctionNode ImageFutureFunctionNode IsFormulaFutureFunctionNode IsOCeilingFutureFunctionNode IsOWeekNumFutureFunctionNode IsOmittedFutureFunctionNode JisFutureFunctionNode LambdaFutureFunctionNode LetFutureFunctionNode LogNormDistFutureFunctionNode LogNormInvFutureFunctionNode MUnitFutureFunctionNode MakeArrayFutureFunctionNode MapFutureFunctionNode ModeMultFutureFunctionNode ModeSnglFutureFunctionNode NegBinomDistFutureFunctionNode NetworkDaysIntlFutureFunctionNode NormDistFutureFunctionNode NormInvFutureFunctionNode NormSDistFutureFunctionNode NormSInvFutureFunctionNode NumberValueFutureFunctionNode PDurationFutureFunctionNode PercentOfFutureFunctionNode PercentRankExcFutureFunctionNode PercentRankIncFutureFunctionNode PercentileExcFutureFunctionNode PercentileIncFutureFunctionNode PermutationaFutureFunctionNode PhiFutureFunctionNode PivotByFutureFunctionNode PoissonDistFutureFunctionNode PqsourceFutureFunctionNode PythonStrFutureFunctionNode PythonTypeFutureFunctionNode PythonTypenameFutureFunctionNode QuartileExcFutureFunctionNode QuartileIncFutureFunctionNode QueryStringFutureFunctionNode RandArrayFutureFunctionNode RankAvgFutureFunctionNode RankEqFutureFunctionNode ReduceFutureFunctionNode RegexExtractFutureFunctionNode RegexReplaceFutureFunctionNode RegexTestFutureFunctionNode RriFutureFunctionNode ScanFutureFunctionNode SecFutureFunctionNode SechFutureFunctionNode SequenceFutureFunctionNode SheetFutureFunctionNode SheetsFutureFunctionNode SkewPFutureFunctionNode SortByFutureFunctionNode StDevPFutureFunctionNode StDevSFutureFunctionNode StockHistoryFutureFunctionNode TDistFutureFunctionNode TDistRtFutureFunctionNode TDistTwoTFutureFunctionNode TInvFutureFunctionNode TInvToTFutureFunctionNode TTestFutureFunctionNode TakeFutureFunctionNode TextAfterFutureFunctionNode TextBeforeFutureFunctionNode TextSplitFutureFunctionNode ToColFutureFunctionNode ToRowFutureFunctionNode TranslateFutureFunctionNode TrimRangeFutureFunctionNode UnicharFutureFunctionNode UnicodeFutureFunctionNode UniqueFutureFunctionNode VStackFutureFunctionNode ValueToTextFutureFunctionNode VarPFutureFunctionNode VarSFutureFunctionNode WebServiceFutureFunctionNode WeibullDistFutureFunctionNode WorkdayIntlFutureFunctionNode WrapColsFutureFunctionNode WrapRowsFutureFunctionNode XLookupFutureFunctionNode XMatchFutureFunctionNode XorFutureFunctionNode ZTestFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FutureFunctionNode(ExpressionNode, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public FutureFunctionNode(ExpressionNode name, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name ExpressionNode prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FvScheduleStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FvScheduleStandardFunctionNode.html",
    "title": "Class FvScheduleStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FvScheduleStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FvScheduleStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FvScheduleStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FvScheduleStandardFunctionNode(string?, List<Node>?, List<Node>?) public FvScheduleStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FvStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FvStandardFunctionNode.html",
    "title": "Class FvStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class FvStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FvStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode FvStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FvStandardFunctionNode(string?, List<Node>?, List<Node>?) public FvStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FwriteMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FwriteMacroFunctionNode.html",
    "title": "Class FwriteMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class FwriteMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FwriteMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode FwriteMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FwriteMacroFunctionNode(string?, List<Node>?, List<Node>?) public FwriteMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.FwritelnMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.FwritelnMacroFunctionNode.html",
    "title": "Class FwritelnMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class FwritelnMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class FwritelnMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode FwritelnMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FwritelnMacroFunctionNode(string?, List<Node>?, List<Node>?) public FwritelnMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.Gallery3DAreaCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.Gallery3DAreaCommandFunctionNode.html",
    "title": "Class Gallery3DAreaCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class Gallery3DAreaCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class Gallery3DAreaCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode Gallery3DAreaCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Gallery3DAreaCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public Gallery3DAreaCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.Gallery3DBarCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.Gallery3DBarCommandFunctionNode.html",
    "title": "Class Gallery3DBarCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class Gallery3DBarCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class Gallery3DBarCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode Gallery3DBarCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Gallery3DBarCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public Gallery3DBarCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.Gallery3DColumnCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.Gallery3DColumnCommandFunctionNode.html",
    "title": "Class Gallery3DColumnCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class Gallery3DColumnCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class Gallery3DColumnCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode Gallery3DColumnCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Gallery3DColumnCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public Gallery3DColumnCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.Gallery3DLineCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.Gallery3DLineCommandFunctionNode.html",
    "title": "Class Gallery3DLineCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class Gallery3DLineCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class Gallery3DLineCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode Gallery3DLineCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Gallery3DLineCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public Gallery3DLineCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.Gallery3DPieCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.Gallery3DPieCommandFunctionNode.html",
    "title": "Class Gallery3DPieCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class Gallery3DPieCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class Gallery3DPieCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode Gallery3DPieCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Gallery3DPieCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public Gallery3DPieCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.Gallery3DSurfaceCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.Gallery3DSurfaceCommandFunctionNode.html",
    "title": "Class Gallery3DSurfaceCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class Gallery3DSurfaceCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class Gallery3DSurfaceCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode Gallery3DSurfaceCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Gallery3DSurfaceCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public Gallery3DSurfaceCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryAreaCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryAreaCommandFunctionNode.html",
    "title": "Class GalleryAreaCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class GalleryAreaCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GalleryAreaCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode GalleryAreaCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GalleryAreaCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public GalleryAreaCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryBarCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryBarCommandFunctionNode.html",
    "title": "Class GalleryBarCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class GalleryBarCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GalleryBarCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode GalleryBarCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GalleryBarCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public GalleryBarCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryColumnCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryColumnCommandFunctionNode.html",
    "title": "Class GalleryColumnCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class GalleryColumnCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GalleryColumnCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode GalleryColumnCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GalleryColumnCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public GalleryColumnCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryCustomCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryCustomCommandFunctionNode.html",
    "title": "Class GalleryCustomCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class GalleryCustomCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GalleryCustomCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode GalleryCustomCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GalleryCustomCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public GalleryCustomCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryDoughnutCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryDoughnutCommandFunctionNode.html",
    "title": "Class GalleryDoughnutCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class GalleryDoughnutCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GalleryDoughnutCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode GalleryDoughnutCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GalleryDoughnutCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public GalleryDoughnutCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryLineCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryLineCommandFunctionNode.html",
    "title": "Class GalleryLineCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class GalleryLineCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GalleryLineCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode GalleryLineCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GalleryLineCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public GalleryLineCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryPieCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryPieCommandFunctionNode.html",
    "title": "Class GalleryPieCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class GalleryPieCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GalleryPieCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode GalleryPieCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GalleryPieCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public GalleryPieCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryRadarCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryRadarCommandFunctionNode.html",
    "title": "Class GalleryRadarCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class GalleryRadarCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GalleryRadarCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode GalleryRadarCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GalleryRadarCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public GalleryRadarCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryScatterCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GalleryScatterCommandFunctionNode.html",
    "title": "Class GalleryScatterCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class GalleryScatterCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GalleryScatterCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode GalleryScatterCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GalleryScatterCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public GalleryScatterCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GammaDistFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GammaDistFutureFunctionNode.html",
    "title": "Class GammaDistFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class GammaDistFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GammaDistFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode GammaDistFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GammaDistFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public GammaDistFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GammaDistStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GammaDistStandardFunctionNode.html",
    "title": "Class GammaDistStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class GammaDistStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GammaDistStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode GammaDistStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GammaDistStandardFunctionNode(string?, List<Node>?, List<Node>?) public GammaDistStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GammaFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GammaFutureFunctionNode.html",
    "title": "Class GammaFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class GammaFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GammaFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode GammaFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GammaFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public GammaFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GammaInvFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GammaInvFutureFunctionNode.html",
    "title": "Class GammaInvFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class GammaInvFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GammaInvFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode GammaInvFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GammaInvFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public GammaInvFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GammaInvStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GammaInvStandardFunctionNode.html",
    "title": "Class GammaInvStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class GammaInvStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GammaInvStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode GammaInvStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GammaInvStandardFunctionNode(string?, List<Node>?, List<Node>?) public GammaInvStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GammaLnPreciseFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GammaLnPreciseFutureFunctionNode.html",
    "title": "Class GammaLnPreciseFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class GammaLnPreciseFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GammaLnPreciseFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode GammaLnPreciseFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GammaLnPreciseFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public GammaLnPreciseFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GammaLnStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GammaLnStandardFunctionNode.html",
    "title": "Class GammaLnStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class GammaLnStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GammaLnStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode GammaLnStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GammaLnStandardFunctionNode(string?, List<Node>?, List<Node>?) public GammaLnStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GaussFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GaussFutureFunctionNode.html",
    "title": "Class GaussFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class GaussFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GaussFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode GaussFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GaussFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public GaussFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GcdStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GcdStandardFunctionNode.html",
    "title": "Class GcdStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class GcdStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GcdStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode GcdStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GcdStandardFunctionNode(string?, List<Node>?, List<Node>?) public GcdStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GeStepStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GeStepStandardFunctionNode.html",
    "title": "Class GeStepStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class GeStepStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GeStepStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode GeStepStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GeStepStandardFunctionNode(string?, List<Node>?, List<Node>?) public GeStepStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GeoMeanStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GeoMeanStandardFunctionNode.html",
    "title": "Class GeoMeanStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class GeoMeanStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GeoMeanStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode GeoMeanStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GeoMeanStandardFunctionNode(string?, List<Node>?, List<Node>?) public GeoMeanStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetBarMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetBarMacroFunctionNode.html",
    "title": "Class GetBarMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetBarMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetBarMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetBarMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetBarMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetBarMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetCellMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetCellMacroFunctionNode.html",
    "title": "Class GetCellMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetCellMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetCellMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetCellMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetCellMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetCellMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetChartItemMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetChartItemMacroFunctionNode.html",
    "title": "Class GetChartItemMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetChartItemMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetChartItemMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetChartItemMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetChartItemMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetChartItemMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetDefMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetDefMacroFunctionNode.html",
    "title": "Class GetDefMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetDefMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetDefMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetDefMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetDefMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetDefMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetDocumentMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetDocumentMacroFunctionNode.html",
    "title": "Class GetDocumentMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetDocumentMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetDocumentMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetDocumentMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetDocumentMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetDocumentMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetFormulaMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetFormulaMacroFunctionNode.html",
    "title": "Class GetFormulaMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetFormulaMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetFormulaMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetFormulaMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetFormulaMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetFormulaMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetLinkInfoMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetLinkInfoMacroFunctionNode.html",
    "title": "Class GetLinkInfoMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetLinkInfoMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetLinkInfoMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetLinkInfoMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetLinkInfoMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetLinkInfoMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetMovieMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetMovieMacroFunctionNode.html",
    "title": "Class GetMovieMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetMovieMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetMovieMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetMovieMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetMovieMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetMovieMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetNameMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetNameMacroFunctionNode.html",
    "title": "Class GetNameMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetNameMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetNameMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetNameMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetNameMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetNameMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetNoteMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetNoteMacroFunctionNode.html",
    "title": "Class GetNoteMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetNoteMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetNoteMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetNoteMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetNoteMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetNoteMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetObjectMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetObjectMacroFunctionNode.html",
    "title": "Class GetObjectMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetObjectMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetObjectMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetObjectMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetObjectMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetObjectMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetPivotDataStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetPivotDataStandardFunctionNode.html",
    "title": "Class GetPivotDataStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetPivotDataStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetPivotDataStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode GetPivotDataStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetPivotDataStandardFunctionNode(string?, List<Node>?, List<Node>?) public GetPivotDataStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetToolMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetToolMacroFunctionNode.html",
    "title": "Class GetToolMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetToolMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetToolMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetToolMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetToolMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetToolMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetToolbarMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetToolbarMacroFunctionNode.html",
    "title": "Class GetToolbarMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetToolbarMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetToolbarMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetToolbarMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetToolbarMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetToolbarMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetWindowMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetWindowMacroFunctionNode.html",
    "title": "Class GetWindowMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetWindowMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetWindowMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetWindowMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetWindowMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetWindowMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetWorkbookMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetWorkbookMacroFunctionNode.html",
    "title": "Class GetWorkbookMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetWorkbookMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetWorkbookMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetWorkbookMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetWorkbookMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetWorkbookMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetWorkspaceMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GetWorkspaceMacroFunctionNode.html",
    "title": "Class GetWorkspaceMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GetWorkspaceMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GetWorkspaceMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GetWorkspaceMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GetWorkspaceMacroFunctionNode(string?, List<Node>?, List<Node>?) public GetWorkspaceMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GettingDataErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GettingDataErrorNode.html",
    "title": "Class GettingDataErrorNode | OpenLanguage Documentation",
    "summary": "Class GettingDataErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GettingDataErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode GettingDataErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GettingDataErrorNode(string, List<Node>?, List<Node>?) public GettingDataErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GoalSeekCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GoalSeekCommandFunctionNode.html",
    "title": "Class GoalSeekCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class GoalSeekCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GoalSeekCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode GoalSeekCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GoalSeekCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public GoalSeekCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GotoMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GotoMacroFunctionNode.html",
    "title": "Class GotoMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GotoMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GotoMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GotoMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GotoMacroFunctionNode(string?, List<Node>?, List<Node>?) public GotoMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GreaterThanLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GreaterThanLiteralNode.html",
    "title": "Class GreaterThanLiteralNode | OpenLanguage Documentation",
    "summary": "Class GreaterThanLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GreaterThanLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode GreaterThanLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GreaterThanLiteralNode(string, List<Node>?, List<Node>?) public GreaterThanLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GreaterThanNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GreaterThanNode.html",
    "title": "Class GreaterThanNode | OpenLanguage Documentation",
    "summary": "Class GreaterThanNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GreaterThanNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode GreaterThanNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GreaterThanNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public GreaterThanNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GreaterThanOrEqualLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GreaterThanOrEqualLiteralNode.html",
    "title": "Class GreaterThanOrEqualLiteralNode | OpenLanguage Documentation",
    "summary": "Class GreaterThanOrEqualLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GreaterThanOrEqualLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode GreaterThanOrEqualLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GreaterThanOrEqualLiteralNode(string, List<Node>?, List<Node>?) public GreaterThanOrEqualLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GreaterThanOrEqualNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GreaterThanOrEqualNode.html",
    "title": "Class GreaterThanOrEqualNode | OpenLanguage Documentation",
    "summary": "Class GreaterThanOrEqualNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GreaterThanOrEqualNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode GreaterThanOrEqualNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GreaterThanOrEqualNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public GreaterThanOrEqualNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GridlinesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GridlinesCommandFunctionNode.html",
    "title": "Class GridlinesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class GridlinesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GridlinesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode GridlinesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GridlinesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public GridlinesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GroupByFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GroupByFutureFunctionNode.html",
    "title": "Class GroupByFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class GroupByFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GroupByFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode GroupByFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GroupByFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public GroupByFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GroupMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GroupMacroFunctionNode.html",
    "title": "Class GroupMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class GroupMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GroupMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode GroupMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GroupMacroFunctionNode(string?, List<Node>?, List<Node>?) public GroupMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.GrowthStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.GrowthStandardFunctionNode.html",
    "title": "Class GrowthStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class GrowthStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class GrowthStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode GrowthStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GrowthStandardFunctionNode(string?, List<Node>?, List<Node>?) public GrowthStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HLineCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HLineCommandFunctionNode.html",
    "title": "Class HLineCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class HLineCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HLineCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode HLineCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HLineCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public HLineCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HLookupStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HLookupStandardFunctionNode.html",
    "title": "Class HLookupStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class HLookupStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HLookupStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode HLookupStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HLookupStandardFunctionNode(string?, List<Node>?, List<Node>?) public HLookupStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HPageCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HPageCommandFunctionNode.html",
    "title": "Class HPageCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class HPageCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HPageCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode HPageCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HPageCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public HPageCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HStackFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HStackFutureFunctionNode.html",
    "title": "Class HStackFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class HStackFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HStackFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode HStackFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HStackFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public HStackFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HaltMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HaltMacroFunctionNode.html",
    "title": "Class HaltMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class HaltMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HaltMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode HaltMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HaltMacroFunctionNode(string?, List<Node>?, List<Node>?) public HaltMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HarMeanStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HarMeanStandardFunctionNode.html",
    "title": "Class HarMeanStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class HarMeanStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HarMeanStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode HarMeanStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HarMeanStandardFunctionNode(string?, List<Node>?, List<Node>?) public HarMeanStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HashLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HashLiteralNode.html",
    "title": "Class HashLiteralNode | OpenLanguage Documentation",
    "summary": "Class HashLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HashLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode HashLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HashLiteralNode(string, List<Node>?, List<Node>?) public HashLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HelpMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HelpMacroFunctionNode.html",
    "title": "Class HelpMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class HelpMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HelpMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode HelpMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HelpMacroFunctionNode(string?, List<Node>?, List<Node>?) public HelpMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HexToBinStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HexToBinStandardFunctionNode.html",
    "title": "Class HexToBinStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class HexToBinStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HexToBinStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode HexToBinStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HexToBinStandardFunctionNode(string?, List<Node>?, List<Node>?) public HexToBinStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HexToDecStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HexToDecStandardFunctionNode.html",
    "title": "Class HexToDecStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class HexToDecStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HexToDecStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode HexToDecStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HexToDecStandardFunctionNode(string?, List<Node>?, List<Node>?) public HexToDecStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HexToOctStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HexToOctStandardFunctionNode.html",
    "title": "Class HexToOctStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class HexToOctStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HexToOctStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode HexToOctStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HexToOctStandardFunctionNode(string?, List<Node>?, List<Node>?) public HexToOctStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HideCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HideCommandFunctionNode.html",
    "title": "Class HideCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class HideCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HideCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode HideCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HideCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public HideCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HideDialogCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HideDialogCommandFunctionNode.html",
    "title": "Class HideDialogCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class HideDialogCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HideDialogCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode HideDialogCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HideDialogCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public HideDialogCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HideObjectCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HideObjectCommandFunctionNode.html",
    "title": "Class HideObjectCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class HideObjectCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HideObjectCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode HideObjectCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HideObjectCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public HideObjectCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HideallInkannotsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HideallInkannotsCommandFunctionNode.html",
    "title": "Class HideallInkannotsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class HideallInkannotsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HideallInkannotsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode HideallInkannotsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HideallInkannotsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public HideallInkannotsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HideallNotesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HideallNotesCommandFunctionNode.html",
    "title": "Class HideallNotesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class HideallNotesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HideallNotesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode HideallNotesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HideallNotesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public HideallNotesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HidecurrNoteCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HidecurrNoteCommandFunctionNode.html",
    "title": "Class HidecurrNoteCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class HidecurrNoteCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HidecurrNoteCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode HidecurrNoteCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HidecurrNoteCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public HidecurrNoteCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HourStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HourStandardFunctionNode.html",
    "title": "Class HourStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class HourStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HourStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode HourStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HourStandardFunctionNode(string?, List<Node>?, List<Node>?) public HourStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HscrollCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HscrollCommandFunctionNode.html",
    "title": "Class HscrollCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class HscrollCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HscrollCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode HscrollCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HscrollCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public HscrollCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HypGeomDistFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HypGeomDistFutureFunctionNode.html",
    "title": "Class HypGeomDistFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class HypGeomDistFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HypGeomDistFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode HypGeomDistFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HypGeomDistFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public HypGeomDistFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HypGeomDistStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HypGeomDistStandardFunctionNode.html",
    "title": "Class HypGeomDistStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class HypGeomDistStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HypGeomDistStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode HypGeomDistStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HypGeomDistStandardFunctionNode(string?, List<Node>?, List<Node>?) public HypGeomDistStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.HyperlinkStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.HyperlinkStandardFunctionNode.html",
    "title": "Class HyperlinkStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class HyperlinkStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class HyperlinkStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode HyperlinkStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HyperlinkStandardFunctionNode(string?, List<Node>?, List<Node>?) public HyperlinkStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IfErrorStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IfErrorStandardFunctionNode.html",
    "title": "Class IfErrorStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IfErrorStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IfErrorStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IfErrorStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IfErrorStandardFunctionNode(string?, List<Node>?, List<Node>?) public IfErrorStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IfNaFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IfNaFutureFunctionNode.html",
    "title": "Class IfNaFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class IfNaFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IfNaFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode IfNaFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IfNaFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public IfNaFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IfStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IfStandardFunctionNode.html",
    "title": "Class IfStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IfStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IfStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IfStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IfStandardFunctionNode(string?, List<Node>?, List<Node>?) public IfStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IfsStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IfsStandardFunctionNode.html",
    "title": "Class IfsStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IfsStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IfsStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IfsStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IfsStandardFunctionNode(string?, List<Node>?, List<Node>?) public IfsStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImAbsStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImAbsStandardFunctionNode.html",
    "title": "Class ImAbsStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImAbsStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImAbsStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImAbsStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImAbsStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImAbsStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImAginaryStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImAginaryStandardFunctionNode.html",
    "title": "Class ImAginaryStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImAginaryStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImAginaryStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImAginaryStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImAginaryStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImAginaryStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImArgumentStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImArgumentStandardFunctionNode.html",
    "title": "Class ImArgumentStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImArgumentStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImArgumentStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImArgumentStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImArgumentStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImArgumentStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImConjugateStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImConjugateStandardFunctionNode.html",
    "title": "Class ImConjugateStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImConjugateStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImConjugateStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImConjugateStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImConjugateStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImConjugateStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImCosStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImCosStandardFunctionNode.html",
    "title": "Class ImCosStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImCosStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImCosStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImCosStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImCosStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImCosStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImCoshFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImCoshFutureFunctionNode.html",
    "title": "Class ImCoshFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImCoshFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImCoshFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ImCoshFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImCoshFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ImCoshFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImCotFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImCotFutureFunctionNode.html",
    "title": "Class ImCotFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImCotFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImCotFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ImCotFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImCotFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ImCotFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImCscFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImCscFutureFunctionNode.html",
    "title": "Class ImCscFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImCscFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImCscFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ImCscFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImCscFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ImCscFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImCschFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImCschFutureFunctionNode.html",
    "title": "Class ImCschFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImCschFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImCschFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ImCschFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImCschFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ImCschFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImDivStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImDivStandardFunctionNode.html",
    "title": "Class ImDivStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImDivStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImDivStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImDivStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImDivStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImDivStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImExpStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImExpStandardFunctionNode.html",
    "title": "Class ImExpStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImExpStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImExpStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImExpStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImExpStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImExpStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImLnStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImLnStandardFunctionNode.html",
    "title": "Class ImLnStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImLnStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImLnStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImLnStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImLnStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImLnStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImLog10StandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImLog10StandardFunctionNode.html",
    "title": "Class ImLog10StandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImLog10StandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImLog10StandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImLog10StandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImLog10StandardFunctionNode(string?, List<Node>?, List<Node>?) public ImLog10StandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImLogToStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImLogToStandardFunctionNode.html",
    "title": "Class ImLogToStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImLogToStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImLogToStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImLogToStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImLogToStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImLogToStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImPowerStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImPowerStandardFunctionNode.html",
    "title": "Class ImPowerStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImPowerStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImPowerStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImPowerStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImPowerStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImPowerStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImProductStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImProductStandardFunctionNode.html",
    "title": "Class ImProductStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImProductStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImProductStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImProductStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImProductStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImProductStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImRealStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImRealStandardFunctionNode.html",
    "title": "Class ImRealStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImRealStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImRealStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImRealStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImRealStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImRealStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImSecFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImSecFutureFunctionNode.html",
    "title": "Class ImSecFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImSecFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImSecFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ImSecFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImSecFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ImSecFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImSechFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImSechFutureFunctionNode.html",
    "title": "Class ImSechFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImSechFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImSechFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ImSechFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImSechFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ImSechFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImSinStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImSinStandardFunctionNode.html",
    "title": "Class ImSinStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImSinStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImSinStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImSinStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImSinStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImSinStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImSinhFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImSinhFutureFunctionNode.html",
    "title": "Class ImSinhFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImSinhFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImSinhFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ImSinhFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImSinhFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ImSinhFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImSqrtStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImSqrtStandardFunctionNode.html",
    "title": "Class ImSqrtStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImSqrtStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImSqrtStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImSqrtStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImSqrtStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImSqrtStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImSubStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImSubStandardFunctionNode.html",
    "title": "Class ImSubStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImSubStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImSubStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImSubStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImSubStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImSubStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImSumStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImSumStandardFunctionNode.html",
    "title": "Class ImSumStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImSumStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImSumStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ImSumStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImSumStandardFunctionNode(string?, List<Node>?, List<Node>?) public ImSumStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImTanFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImTanFutureFunctionNode.html",
    "title": "Class ImTanFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImTanFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImTanFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ImTanFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImTanFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ImTanFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImageFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImageFutureFunctionNode.html",
    "title": "Class ImageFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ImageFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImageFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ImageFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImageFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ImageFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImplicitIntersectionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ImplicitIntersectionNode.html",
    "title": "Class ImplicitIntersectionNode | OpenLanguage Documentation",
    "summary": "Class ImplicitIntersectionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ImplicitIntersectionNode : UnaryOperatorNode Inheritance object Node ExpressionNode UnaryOperatorNode ImplicitIntersectionNode Inherited Members UnaryOperatorNode.Operand UnaryOperatorNode.Operator UnaryOperatorNode.Children<O>() UnaryOperatorNode.ReplaceChild(int, Node) UnaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ImplicitIntersectionNode(ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public ImplicitIntersectionNode(ExpressionNode op, ExpressionNode operand, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters op ExpressionNode operand ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IndexStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IndexStandardFunctionNode.html",
    "title": "Class IndexStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IndexStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IndexStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IndexStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IndexStandardFunctionNode(string?, List<Node>?, List<Node>?) public IndexStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IndexedPivotField.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IndexedPivotField.html",
    "title": "Class IndexedPivotField | OpenLanguage Documentation",
    "summary": "Class IndexedPivotField Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IndexedPivotField : ExpressionNode Inheritance object Node ExpressionNode IndexedPivotField Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IndexedPivotField(ExpressionNode, ExpressionNode) public IndexedPivotField(ExpressionNode name, ExpressionNode item) Parameters name ExpressionNode item ExpressionNode Properties Item public ExpressionNode Item { get; set; } Property Value ExpressionNode Name public ExpressionNode Name { get; set; } Property Value ExpressionNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IndirectStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IndirectStandardFunctionNode.html",
    "title": "Class IndirectStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IndirectStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IndirectStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IndirectStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IndirectStandardFunctionNode(string?, List<Node>?, List<Node>?) public IndirectStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.InfoStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.InfoStandardFunctionNode.html",
    "title": "Class InfoStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class InfoStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class InfoStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode InfoStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InfoStandardFunctionNode(string?, List<Node>?, List<Node>?) public InfoStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.InitiateMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.InitiateMacroFunctionNode.html",
    "title": "Class InitiateMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class InitiateMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class InitiateMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode InitiateMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InitiateMacroFunctionNode(string?, List<Node>?, List<Node>?) public InitiateMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.InputMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.InputMacroFunctionNode.html",
    "title": "Class InputMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class InputMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class InputMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode InputMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InputMacroFunctionNode(string?, List<Node>?, List<Node>?) public InputMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.InsertCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.InsertCommandFunctionNode.html",
    "title": "Class InsertCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class InsertCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class InsertCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode InsertCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InsertCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public InsertCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.InsertMapObjectCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.InsertMapObjectCommandFunctionNode.html",
    "title": "Class InsertMapObjectCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class InsertMapObjectCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class InsertMapObjectCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode InsertMapObjectCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InsertMapObjectCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public InsertMapObjectCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.InsertObjectCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.InsertObjectCommandFunctionNode.html",
    "title": "Class InsertObjectCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class InsertObjectCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class InsertObjectCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode InsertObjectCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InsertObjectCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public InsertObjectCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.InsertPictureCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.InsertPictureCommandFunctionNode.html",
    "title": "Class InsertPictureCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class InsertPictureCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class InsertPictureCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode InsertPictureCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InsertPictureCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public InsertPictureCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.InsertTitleCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.InsertTitleCommandFunctionNode.html",
    "title": "Class InsertTitleCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class InsertTitleCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class InsertTitleCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode InsertTitleCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InsertTitleCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public InsertTitleCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.InsertdatatableCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.InsertdatatableCommandFunctionNode.html",
    "title": "Class InsertdatatableCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class InsertdatatableCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class InsertdatatableCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode InsertdatatableCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InsertdatatableCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public InsertdatatableCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IntStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IntStandardFunctionNode.html",
    "title": "Class IntStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IntStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IntStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IntStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IntStandardFunctionNode(string?, List<Node>?, List<Node>?) public IntStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.InterceptStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.InterceptStandardFunctionNode.html",
    "title": "Class InterceptStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class InterceptStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class InterceptStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode InterceptStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InterceptStandardFunctionNode(string?, List<Node>?, List<Node>?) public InterceptStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IntersectionLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IntersectionLiteralNode.html",
    "title": "Class IntersectionLiteralNode | OpenLanguage Documentation",
    "summary": "Class IntersectionLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IntersectionLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode IntersectionLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IntersectionLiteralNode(string, List<Node>?, List<Node>?) public IntersectionLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IntersectionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IntersectionNode.html",
    "title": "Class IntersectionNode | OpenLanguage Documentation",
    "summary": "Class IntersectionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IntersectionNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode IntersectionNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IntersectionNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public IntersectionNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IntrateStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IntrateStandardFunctionNode.html",
    "title": "Class IntrateStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IntrateStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IntrateStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IntrateStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IntrateStandardFunctionNode(string?, List<Node>?, List<Node>?) public IntrateStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IpmtStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IpmtStandardFunctionNode.html",
    "title": "Class IpmtStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IpmtStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IpmtStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IpmtStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IpmtStandardFunctionNode(string?, List<Node>?, List<Node>?) public IpmtStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IrrStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IrrStandardFunctionNode.html",
    "title": "Class IrrStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IrrStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IrrStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IrrStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IrrStandardFunctionNode(string?, List<Node>?, List<Node>?) public IrrStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsBlankStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsBlankStandardFunctionNode.html",
    "title": "Class IsBlankStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsBlankStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsBlankStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IsBlankStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsBlankStandardFunctionNode(string?, List<Node>?, List<Node>?) public IsBlankStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsErrStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsErrStandardFunctionNode.html",
    "title": "Class IsErrStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsErrStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsErrStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IsErrStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsErrStandardFunctionNode(string?, List<Node>?, List<Node>?) public IsErrStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsErrorStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsErrorStandardFunctionNode.html",
    "title": "Class IsErrorStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsErrorStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsErrorStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IsErrorStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsErrorStandardFunctionNode(string?, List<Node>?, List<Node>?) public IsErrorStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsEvenStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsEvenStandardFunctionNode.html",
    "title": "Class IsEvenStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsEvenStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsEvenStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IsEvenStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsEvenStandardFunctionNode(string?, List<Node>?, List<Node>?) public IsEvenStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsFormulaFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsFormulaFutureFunctionNode.html",
    "title": "Class IsFormulaFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsFormulaFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsFormulaFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode IsFormulaFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsFormulaFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public IsFormulaFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsLogicalStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsLogicalStandardFunctionNode.html",
    "title": "Class IsLogicalStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsLogicalStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsLogicalStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IsLogicalStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsLogicalStandardFunctionNode(string?, List<Node>?, List<Node>?) public IsLogicalStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsNaStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsNaStandardFunctionNode.html",
    "title": "Class IsNaStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsNaStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsNaStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IsNaStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsNaStandardFunctionNode(string?, List<Node>?, List<Node>?) public IsNaStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsNontextStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsNontextStandardFunctionNode.html",
    "title": "Class IsNontextStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsNontextStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsNontextStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IsNontextStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsNontextStandardFunctionNode(string?, List<Node>?, List<Node>?) public IsNontextStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsNumberStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsNumberStandardFunctionNode.html",
    "title": "Class IsNumberStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsNumberStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsNumberStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IsNumberStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsNumberStandardFunctionNode(string?, List<Node>?, List<Node>?) public IsNumberStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsOCeilingFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsOCeilingFutureFunctionNode.html",
    "title": "Class IsOCeilingFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsOCeilingFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsOCeilingFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode IsOCeilingFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsOCeilingFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public IsOCeilingFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsOWeekNumFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsOWeekNumFutureFunctionNode.html",
    "title": "Class IsOWeekNumFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsOWeekNumFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsOWeekNumFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode IsOWeekNumFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsOWeekNumFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public IsOWeekNumFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsOddStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsOddStandardFunctionNode.html",
    "title": "Class IsOddStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsOddStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsOddStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IsOddStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsOddStandardFunctionNode(string?, List<Node>?, List<Node>?) public IsOddStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsOmittedFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsOmittedFutureFunctionNode.html",
    "title": "Class IsOmittedFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsOmittedFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsOmittedFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode IsOmittedFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsOmittedFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public IsOmittedFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsPmtStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsPmtStandardFunctionNode.html",
    "title": "Class IsPmtStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsPmtStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsPmtStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IsPmtStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsPmtStandardFunctionNode(string?, List<Node>?, List<Node>?) public IsPmtStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsRefStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsRefStandardFunctionNode.html",
    "title": "Class IsRefStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsRefStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsRefStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IsRefStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsRefStandardFunctionNode(string?, List<Node>?, List<Node>?) public IsRefStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsTextStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsTextStandardFunctionNode.html",
    "title": "Class IsTextStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsTextStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsTextStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IsTextStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsTextStandardFunctionNode(string?, List<Node>?, List<Node>?) public IsTextStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsThaiDigitStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.IsThaiDigitStandardFunctionNode.html",
    "title": "Class IsThaiDigitStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class IsThaiDigitStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class IsThaiDigitStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode IsThaiDigitStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IsThaiDigitStandardFunctionNode(string?, List<Node>?, List<Node>?) public IsThaiDigitStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.JisFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.JisFutureFunctionNode.html",
    "title": "Class JisFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class JisFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class JisFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode JisFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors JisFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public JisFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.JustifyCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.JustifyCommandFunctionNode.html",
    "title": "Class JustifyCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class JustifyCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class JustifyCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode JustifyCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors JustifyCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public JustifyCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.KurtStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.KurtStandardFunctionNode.html",
    "title": "Class KurtStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class KurtStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class KurtStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode KurtStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors KurtStandardFunctionNode(string?, List<Node>?, List<Node>?) public KurtStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LabelPropertiesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LabelPropertiesCommandFunctionNode.html",
    "title": "Class LabelPropertiesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class LabelPropertiesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LabelPropertiesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode LabelPropertiesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LabelPropertiesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public LabelPropertiesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LambdaFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LambdaFutureFunctionNode.html",
    "title": "Class LambdaFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class LambdaFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LambdaFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode LambdaFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LambdaFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public LambdaFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LargeStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LargeStandardFunctionNode.html",
    "title": "Class LargeStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class LargeStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LargeStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode LargeStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LargeStandardFunctionNode(string?, List<Node>?, List<Node>?) public LargeStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LastErrorMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LastErrorMacroFunctionNode.html",
    "title": "Class LastErrorMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class LastErrorMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LastErrorMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode LastErrorMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LastErrorMacroFunctionNode(string?, List<Node>?, List<Node>?) public LastErrorMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LayoutCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LayoutCommandFunctionNode.html",
    "title": "Class LayoutCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class LayoutCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LayoutCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode LayoutCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LayoutCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public LayoutCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LcmStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LcmStandardFunctionNode.html",
    "title": "Class LcmStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class LcmStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LcmStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode LcmStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LcmStandardFunctionNode(string?, List<Node>?, List<Node>?) public LcmStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LeftBracketNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LeftBracketNode.html",
    "title": "Class LeftBracketNode | OpenLanguage Documentation",
    "summary": "Class LeftBracketNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LeftBracketNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode LeftBracketNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LeftBracketNode(string, List<Node>?, List<Node>?) public LeftBracketNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LeftStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LeftStandardFunctionNode.html",
    "title": "Class LeftStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class LeftStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LeftStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode LeftStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LeftStandardFunctionNode(string?, List<Node>?, List<Node>?) public LeftStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LeftbStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LeftbStandardFunctionNode.html",
    "title": "Class LeftbStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class LeftbStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LeftbStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode LeftbStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LeftbStandardFunctionNode(string?, List<Node>?, List<Node>?) public LeftbStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LegendCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LegendCommandFunctionNode.html",
    "title": "Class LegendCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class LegendCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LegendCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode LegendCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LegendCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public LegendCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LenStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LenStandardFunctionNode.html",
    "title": "Class LenStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class LenStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LenStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode LenStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LenStandardFunctionNode(string?, List<Node>?, List<Node>?) public LenStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LenbStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LenbStandardFunctionNode.html",
    "title": "Class LenbStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class LenbStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LenbStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode LenbStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LenbStandardFunctionNode(string?, List<Node>?, List<Node>?) public LenbStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LessThanLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LessThanLiteralNode.html",
    "title": "Class LessThanLiteralNode | OpenLanguage Documentation",
    "summary": "Class LessThanLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LessThanLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode LessThanLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LessThanLiteralNode(string, List<Node>?, List<Node>?) public LessThanLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LessThanNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LessThanNode.html",
    "title": "Class LessThanNode | OpenLanguage Documentation",
    "summary": "Class LessThanNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LessThanNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode LessThanNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LessThanNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public LessThanNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LessThanOrEqualLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LessThanOrEqualLiteralNode.html",
    "title": "Class LessThanOrEqualLiteralNode | OpenLanguage Documentation",
    "summary": "Class LessThanOrEqualLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LessThanOrEqualLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode LessThanOrEqualLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LessThanOrEqualLiteralNode(string, List<Node>?, List<Node>?) public LessThanOrEqualLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LessThanOrEqualNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LessThanOrEqualNode.html",
    "title": "Class LessThanOrEqualNode | OpenLanguage Documentation",
    "summary": "Class LessThanOrEqualNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LessThanOrEqualNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode LessThanOrEqualNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LessThanOrEqualNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public LessThanOrEqualNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LetFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LetFutureFunctionNode.html",
    "title": "Class LetFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class LetFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LetFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode LetFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LetFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public LetFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LinePrintCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LinePrintCommandFunctionNode.html",
    "title": "Class LinePrintCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class LinePrintCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LinePrintCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode LinePrintCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LinePrintCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public LinePrintCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LinestStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LinestStandardFunctionNode.html",
    "title": "Class LinestStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class LinestStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LinestStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode LinestStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LinestStandardFunctionNode(string?, List<Node>?, List<Node>?) public LinestStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LinkComboCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LinkComboCommandFunctionNode.html",
    "title": "Class LinkComboCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class LinkComboCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LinkComboCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode LinkComboCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LinkComboCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public LinkComboCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LinkFormatCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LinkFormatCommandFunctionNode.html",
    "title": "Class LinkFormatCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class LinkFormatCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LinkFormatCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode LinkFormatCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LinkFormatCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public LinkFormatCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LinksMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LinksMacroFunctionNode.html",
    "title": "Class LinksMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class LinksMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LinksMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode LinksMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LinksMacroFunctionNode(string?, List<Node>?, List<Node>?) public LinksMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ListNamesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ListNamesCommandFunctionNode.html",
    "title": "Class ListNamesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ListNamesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ListNamesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ListNamesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ListNamesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ListNamesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ListboxPropertiesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ListboxPropertiesCommandFunctionNode.html",
    "title": "Class ListboxPropertiesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ListboxPropertiesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ListboxPropertiesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ListboxPropertiesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ListboxPropertiesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ListboxPropertiesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LnStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LnStandardFunctionNode.html",
    "title": "Class LnStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class LnStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LnStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode LnStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LnStandardFunctionNode(string?, List<Node>?, List<Node>?) public LnStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.Log10StandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.Log10StandardFunctionNode.html",
    "title": "Class Log10StandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class Log10StandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class Log10StandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode Log10StandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Log10StandardFunctionNode(string?, List<Node>?, List<Node>?) public Log10StandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LogInvStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LogInvStandardFunctionNode.html",
    "title": "Class LogInvStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class LogInvStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LogInvStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode LogInvStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LogInvStandardFunctionNode(string?, List<Node>?, List<Node>?) public LogInvStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LogNormDistFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LogNormDistFutureFunctionNode.html",
    "title": "Class LogNormDistFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class LogNormDistFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LogNormDistFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode LogNormDistFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LogNormDistFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public LogNormDistFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LogNormDistStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LogNormDistStandardFunctionNode.html",
    "title": "Class LogNormDistStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class LogNormDistStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LogNormDistStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode LogNormDistStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LogNormDistStandardFunctionNode(string?, List<Node>?, List<Node>?) public LogNormDistStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LogNormInvFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LogNormInvFutureFunctionNode.html",
    "title": "Class LogNormInvFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class LogNormInvFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LogNormInvFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode LogNormInvFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LogNormInvFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public LogNormInvFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LogStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LogStandardFunctionNode.html",
    "title": "Class LogStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class LogStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LogStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode LogStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LogStandardFunctionNode(string?, List<Node>?, List<Node>?) public LogStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LogestStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LogestStandardFunctionNode.html",
    "title": "Class LogestStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class LogestStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LogestStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode LogestStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LogestStandardFunctionNode(string?, List<Node>?, List<Node>?) public LogestStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LogicalNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LogicalNode.html",
    "title": "Class LogicalNode | OpenLanguage Documentation",
    "summary": "Class LogicalNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LogicalNode : ExpressionNode Inheritance object Node ExpressionNode LogicalNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LogicalNode(bool, string, List<Node>?, List<Node>?) public LogicalNode(bool value, string rawText, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters value bool rawText string leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int RawText public string RawText { get; set; } Property Value string Value public bool Value { get; set; } Property Value bool Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LookupStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LookupStandardFunctionNode.html",
    "title": "Class LookupStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class LookupStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LookupStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode LookupStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LookupStandardFunctionNode(string?, List<Node>?, List<Node>?) public LookupStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.LowerStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.LowerStandardFunctionNode.html",
    "title": "Class LowerStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class LowerStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class LowerStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode LowerStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LowerStandardFunctionNode(string?, List<Node>?, List<Node>?) public LowerStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MUnitFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MUnitFutureFunctionNode.html",
    "title": "Class MUnitFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class MUnitFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MUnitFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode MUnitFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MUnitFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public MUnitFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MacroFunctionNode.html",
    "title": "Class MacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class MacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MacroFunctionNode : BuiltInFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode Derived AbsRefMacroFunctionNode ActiveCellMacroFunctionNode AddBarMacroFunctionNode AddCommandMacroFunctionNode AddMenuMacroFunctionNode AddToolbarMacroFunctionNode AppTitleMacroFunctionNode ArgumentMacroFunctionNode BreakMacroFunctionNode CallMacroFunctionNode CallerMacroFunctionNode CancelKeyMacroFunctionNode CheckCommandMacroFunctionNode CreateObjectMacroFunctionNode CustomRepeatMacroFunctionNode CustomUndoMacroFunctionNode DeRefMacroFunctionNode DeleteBarMacroFunctionNode DeleteCommandMacroFunctionNode DeleteMenuMacroFunctionNode DeleteToolbarMacroFunctionNode DialogBoxMacroFunctionNode DirectoryMacroFunctionNode DocumentsMacroFunctionNode EchoMacroFunctionNode ElseIfMacroFunctionNode ElseMacroFunctionNode EnableCommandMacroFunctionNode EnableToolMacroFunctionNode EndIfMacroFunctionNode ErrorMacroFunctionNode EvaluateMacroFunctionNode ExecMacroFunctionNode ExecuteMacroFunctionNode FcloseMacroFunctionNode FilesMacroFunctionNode FopenMacroFunctionNode ForCellMacroFunctionNode ForMacroFunctionNode FormulaConvertMacroFunctionNode FposMacroFunctionNode FreadMacroFunctionNode FreadlnMacroFunctionNode FsizeMacroFunctionNode FwriteMacroFunctionNode FwritelnMacroFunctionNode GetBarMacroFunctionNode GetCellMacroFunctionNode GetChartItemMacroFunctionNode GetDefMacroFunctionNode GetDocumentMacroFunctionNode GetFormulaMacroFunctionNode GetLinkInfoMacroFunctionNode GetMovieMacroFunctionNode GetNameMacroFunctionNode GetNoteMacroFunctionNode GetObjectMacroFunctionNode GetToolMacroFunctionNode GetToolbarMacroFunctionNode GetWindowMacroFunctionNode GetWorkbookMacroFunctionNode GetWorkspaceMacroFunctionNode GotoMacroFunctionNode GroupMacroFunctionNode HaltMacroFunctionNode HelpMacroFunctionNode InitiateMacroFunctionNode InputMacroFunctionNode LastErrorMacroFunctionNode LinksMacroFunctionNode MovieCommandMacroFunctionNode NamesMacroFunctionNode NextMacroFunctionNode NoteMacroFunctionNode OpenDialogMacroFunctionNode OptionsListsGetMacroFunctionNode PauseMacroFunctionNode PokeMacroFunctionNode PressToolMacroFunctionNode RefTextMacroFunctionNode RegisterIdMacroFunctionNode RegisterMacroFunctionNode RelRefMacroFunctionNode RenameCommandMacroFunctionNode RequestMacroFunctionNode ResetToolbarMacroFunctionNode RestartMacroFunctionNode ResultMacroFunctionNode ResumeMacroFunctionNode ReturnMacroFunctionNode SaveDialogMacroFunctionNode SaveToolbarMacroFunctionNode ScenarioGetMacroFunctionNode SelectionMacroFunctionNode SetNameMacroFunctionNode SetValueMacroFunctionNode ShowBarMacroFunctionNode SpellingCheckMacroFunctionNode StepMacroFunctionNode TerminateMacroFunctionNode TextBoxMacroFunctionNode TextRefMacroFunctionNode UnregisterMacroFunctionNode ViewGetMacroFunctionNode VolatileMacroFunctionNode WhileMacroFunctionNode WindowTitleMacroFunctionNode WindowsMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MacroFunctionNode(ExpressionNode, List<Node>?, List<Node>?) public MacroFunctionNode(ExpressionNode name, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MacroOptionsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MacroOptionsCommandFunctionNode.html",
    "title": "Class MacroOptionsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MacroOptionsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MacroOptionsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MacroOptionsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MacroOptionsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MacroOptionsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailAddMailerCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailAddMailerCommandFunctionNode.html",
    "title": "Class MailAddMailerCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MailAddMailerCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MailAddMailerCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MailAddMailerCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MailAddMailerCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MailAddMailerCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailDeleteMailerCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailDeleteMailerCommandFunctionNode.html",
    "title": "Class MailDeleteMailerCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MailDeleteMailerCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MailDeleteMailerCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MailDeleteMailerCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MailDeleteMailerCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MailDeleteMailerCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailEditMailerCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailEditMailerCommandFunctionNode.html",
    "title": "Class MailEditMailerCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MailEditMailerCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MailEditMailerCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MailEditMailerCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MailEditMailerCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MailEditMailerCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailForwardCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailForwardCommandFunctionNode.html",
    "title": "Class MailForwardCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MailForwardCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MailForwardCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MailForwardCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MailForwardCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MailForwardCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailLogOffCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailLogOffCommandFunctionNode.html",
    "title": "Class MailLogOffCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MailLogOffCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MailLogOffCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MailLogOffCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MailLogOffCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MailLogOffCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailLogOnCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailLogOnCommandFunctionNode.html",
    "title": "Class MailLogOnCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MailLogOnCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MailLogOnCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MailLogOnCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MailLogOnCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MailLogOnCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailNextLetterCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailNextLetterCommandFunctionNode.html",
    "title": "Class MailNextLetterCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MailNextLetterCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MailNextLetterCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MailNextLetterCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MailNextLetterCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MailNextLetterCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailReplyAllCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailReplyAllCommandFunctionNode.html",
    "title": "Class MailReplyAllCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MailReplyAllCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MailReplyAllCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MailReplyAllCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MailReplyAllCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MailReplyAllCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailReplyCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailReplyCommandFunctionNode.html",
    "title": "Class MailReplyCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MailReplyCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MailReplyCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MailReplyCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MailReplyCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MailReplyCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailSendMailerCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MailSendMailerCommandFunctionNode.html",
    "title": "Class MailSendMailerCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MailSendMailerCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MailSendMailerCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MailSendMailerCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MailSendMailerCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MailSendMailerCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MainChartCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MainChartCommandFunctionNode.html",
    "title": "Class MainChartCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MainChartCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MainChartCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MainChartCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MainChartCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MainChartCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MainChartTypeCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MainChartTypeCommandFunctionNode.html",
    "title": "Class MainChartTypeCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MainChartTypeCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MainChartTypeCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MainChartTypeCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MainChartTypeCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MainChartTypeCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MakeArrayFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MakeArrayFutureFunctionNode.html",
    "title": "Class MakeArrayFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class MakeArrayFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MakeArrayFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode MakeArrayFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MakeArrayFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public MakeArrayFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MapFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MapFutureFunctionNode.html",
    "title": "Class MapFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class MapFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MapFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode MapFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MapFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public MapFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MatchStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MatchStandardFunctionNode.html",
    "title": "Class MatchStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MatchStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MatchStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MatchStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MatchStandardFunctionNode(string?, List<Node>?, List<Node>?) public MatchStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MaxStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MaxStandardFunctionNode.html",
    "title": "Class MaxStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MaxStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MaxStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MaxStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MaxStandardFunctionNode(string?, List<Node>?, List<Node>?) public MaxStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MaxaStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MaxaStandardFunctionNode.html",
    "title": "Class MaxaStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MaxaStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MaxaStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MaxaStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MaxaStandardFunctionNode(string?, List<Node>?, List<Node>?) public MaxaStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MaxifsStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MaxifsStandardFunctionNode.html",
    "title": "Class MaxifsStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MaxifsStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MaxifsStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MaxifsStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MaxifsStandardFunctionNode(string?, List<Node>?, List<Node>?) public MaxifsStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MdetermStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MdetermStandardFunctionNode.html",
    "title": "Class MdetermStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MdetermStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MdetermStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MdetermStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MdetermStandardFunctionNode(string?, List<Node>?, List<Node>?) public MdetermStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MdurationStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MdurationStandardFunctionNode.html",
    "title": "Class MdurationStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MdurationStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MdurationStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MdurationStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MdurationStandardFunctionNode(string?, List<Node>?, List<Node>?) public MdurationStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MedianStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MedianStandardFunctionNode.html",
    "title": "Class MedianStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MedianStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MedianStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MedianStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MedianStandardFunctionNode(string?, List<Node>?, List<Node>?) public MedianStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MenuEditorCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MenuEditorCommandFunctionNode.html",
    "title": "Class MenuEditorCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MenuEditorCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MenuEditorCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MenuEditorCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MenuEditorCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MenuEditorCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MergeStylesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MergeStylesCommandFunctionNode.html",
    "title": "Class MergeStylesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MergeStylesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MergeStylesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MergeStylesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MergeStylesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MergeStylesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MessageCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MessageCommandFunctionNode.html",
    "title": "Class MessageCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MessageCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MessageCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MessageCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MessageCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MessageCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MidStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MidStandardFunctionNode.html",
    "title": "Class MidStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MidStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MidStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MidStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MidStandardFunctionNode(string?, List<Node>?, List<Node>?) public MidStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MidbStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MidbStandardFunctionNode.html",
    "title": "Class MidbStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MidbStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MidbStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MidbStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MidbStandardFunctionNode(string?, List<Node>?, List<Node>?) public MidbStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MinStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MinStandardFunctionNode.html",
    "title": "Class MinStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MinStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MinStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MinStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MinStandardFunctionNode(string?, List<Node>?, List<Node>?) public MinStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MinaStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MinaStandardFunctionNode.html",
    "title": "Class MinaStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MinaStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MinaStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MinaStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MinaStandardFunctionNode(string?, List<Node>?, List<Node>?) public MinaStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MinifsStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MinifsStandardFunctionNode.html",
    "title": "Class MinifsStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MinifsStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MinifsStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MinifsStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MinifsStandardFunctionNode(string?, List<Node>?, List<Node>?) public MinifsStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MinusLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MinusLiteralNode.html",
    "title": "Class MinusLiteralNode | OpenLanguage Documentation",
    "summary": "Class MinusLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MinusLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode MinusLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MinusLiteralNode(string, List<Node>?, List<Node>?) public MinusLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MinuteStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MinuteStandardFunctionNode.html",
    "title": "Class MinuteStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MinuteStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MinuteStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MinuteStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MinuteStandardFunctionNode(string?, List<Node>?, List<Node>?) public MinuteStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MinverseStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MinverseStandardFunctionNode.html",
    "title": "Class MinverseStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MinverseStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MinverseStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MinverseStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MinverseStandardFunctionNode(string?, List<Node>?, List<Node>?) public MinverseStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MirrStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MirrStandardFunctionNode.html",
    "title": "Class MirrStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MirrStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MirrStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MirrStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MirrStandardFunctionNode(string?, List<Node>?, List<Node>?) public MirrStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MmultStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MmultStandardFunctionNode.html",
    "title": "Class MmultStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MmultStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MmultStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MmultStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MmultStandardFunctionNode(string?, List<Node>?, List<Node>?) public MmultStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ModStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ModStandardFunctionNode.html",
    "title": "Class ModStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ModStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ModStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ModStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ModStandardFunctionNode(string?, List<Node>?, List<Node>?) public ModStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ModeMultFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ModeMultFutureFunctionNode.html",
    "title": "Class ModeMultFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ModeMultFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ModeMultFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ModeMultFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ModeMultFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ModeMultFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ModeSnglFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ModeSnglFutureFunctionNode.html",
    "title": "Class ModeSnglFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ModeSnglFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ModeSnglFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ModeSnglFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ModeSnglFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ModeSnglFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ModeStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ModeStandardFunctionNode.html",
    "title": "Class ModeStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ModeStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ModeStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ModeStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ModeStandardFunctionNode(string?, List<Node>?, List<Node>?) public ModeStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ModuloNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ModuloNode.html",
    "title": "Class ModuloNode | OpenLanguage Documentation",
    "summary": "Class ModuloNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ModuloNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode ModuloNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ModuloNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public ModuloNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MonthStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MonthStandardFunctionNode.html",
    "title": "Class MonthStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MonthStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MonthStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MonthStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MonthStandardFunctionNode(string?, List<Node>?, List<Node>?) public MonthStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MoveBrkCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MoveBrkCommandFunctionNode.html",
    "title": "Class MoveBrkCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MoveBrkCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MoveBrkCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MoveBrkCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MoveBrkCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MoveBrkCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MoveToolCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MoveToolCommandFunctionNode.html",
    "title": "Class MoveToolCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class MoveToolCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MoveToolCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode MoveToolCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MoveToolCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public MoveToolCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MovieCommandMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MovieCommandMacroFunctionNode.html",
    "title": "Class MovieCommandMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class MovieCommandMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MovieCommandMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode MovieCommandMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MovieCommandMacroFunctionNode(string?, List<Node>?, List<Node>?) public MovieCommandMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MroundStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MroundStandardFunctionNode.html",
    "title": "Class MroundStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MroundStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MroundStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MroundStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MroundStandardFunctionNode(string?, List<Node>?, List<Node>?) public MroundStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MultinomialStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MultinomialStandardFunctionNode.html",
    "title": "Class MultinomialStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class MultinomialStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MultinomialStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode MultinomialStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MultinomialStandardFunctionNode(string?, List<Node>?, List<Node>?) public MultinomialStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.MultiplyNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.MultiplyNode.html",
    "title": "Class MultiplyNode | OpenLanguage Documentation",
    "summary": "Class MultiplyNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class MultiplyNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode MultiplyNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MultiplyNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public MultiplyNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NAErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NAErrorNode.html",
    "title": "Class NAErrorNode | OpenLanguage Documentation",
    "summary": "Class NAErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NAErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode NAErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NAErrorNode(string, List<Node>?, List<Node>?) public NAErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NStandardFunctionNode.html",
    "title": "Class NStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class NStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode NStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NStandardFunctionNode(string?, List<Node>?, List<Node>?) public NStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NaStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NaStandardFunctionNode.html",
    "title": "Class NaStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class NaStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NaStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode NaStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NaStandardFunctionNode(string?, List<Node>?, List<Node>?) public NaStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NameErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NameErrorNode.html",
    "title": "Class NameErrorNode | OpenLanguage Documentation",
    "summary": "Class NameErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NameErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode NameErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NameErrorNode(string, List<Node>?, List<Node>?) public NameErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NameNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NameNode.html",
    "title": "Class NameNode | OpenLanguage Documentation",
    "summary": "Class NameNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NameNode : ExpressionNode Inheritance object Node ExpressionNode NameNode Derived BuiltInFunctionNode NamedRangeNode UserDefinedFunctionNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NameNode(ExpressionNode, List<Node>?, List<Node>?) public NameNode(ExpressionNode name, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node> NameNode(string, List<Node>?, List<Node>?) public NameNode(string name, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name string leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Name public ExpressionNode? Name { get; set; } Property Value ExpressionNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int RawName public string? RawName { get; set; } Property Value string Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NamedRangeNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NamedRangeNode.html",
    "title": "Class NamedRangeNode | OpenLanguage Documentation",
    "summary": "Class NamedRangeNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NamedRangeNode : NameNode Inheritance object Node ExpressionNode NameNode NamedRangeNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NamedRangeNode(ExpressionNode, List<Node>?, List<Node>?) public NamedRangeNode(ExpressionNode name, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node> NamedRangeNode(string, List<Node>?, List<Node>?) public NamedRangeNode(string name, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NamesMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NamesMacroFunctionNode.html",
    "title": "Class NamesMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class NamesMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NamesMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode NamesMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NamesMacroFunctionNode(string?, List<Node>?, List<Node>?) public NamesMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NegBinomDistFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NegBinomDistFutureFunctionNode.html",
    "title": "Class NegBinomDistFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class NegBinomDistFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NegBinomDistFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode NegBinomDistFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NegBinomDistFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public NegBinomDistFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NegBinomDistStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NegBinomDistStandardFunctionNode.html",
    "title": "Class NegBinomDistStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class NegBinomDistStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NegBinomDistStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode NegBinomDistStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NegBinomDistStandardFunctionNode(string?, List<Node>?, List<Node>?) public NegBinomDistStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NetworkDaysIntlFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NetworkDaysIntlFutureFunctionNode.html",
    "title": "Class NetworkDaysIntlFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class NetworkDaysIntlFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NetworkDaysIntlFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode NetworkDaysIntlFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NetworkDaysIntlFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public NetworkDaysIntlFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NetworkDaysStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NetworkDaysStandardFunctionNode.html",
    "title": "Class NetworkDaysStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class NetworkDaysStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NetworkDaysStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode NetworkDaysStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NetworkDaysStandardFunctionNode(string?, List<Node>?, List<Node>?) public NetworkDaysStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NewCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NewCommandFunctionNode.html",
    "title": "Class NewCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class NewCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NewCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode NewCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NewCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public NewCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NewWindowCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NewWindowCommandFunctionNode.html",
    "title": "Class NewWindowCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class NewWindowCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NewWindowCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode NewWindowCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NewWindowCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public NewWindowCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NewwebqueryCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NewwebqueryCommandFunctionNode.html",
    "title": "Class NewwebqueryCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class NewwebqueryCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NewwebqueryCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode NewwebqueryCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NewwebqueryCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public NewwebqueryCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NextMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NextMacroFunctionNode.html",
    "title": "Class NextMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class NextMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NextMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode NextMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NextMacroFunctionNode(string?, List<Node>?, List<Node>?) public NextMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.Node.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.Node.html",
    "title": "Class Node | OpenLanguage Documentation",
    "summary": "Class Node Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll The base class for all nodes in the Abstract Syntax Tree (AST). public abstract class Node Inheritance object Node Derived ExpressionNode WhitespaceNode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Children<O>() public abstract IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public abstract Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToString() Converts the AST node back into its exact string representation in a formula. public override abstract string ToString() Returns string The formula string for this node."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NominalStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NominalStandardFunctionNode.html",
    "title": "Class NominalStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class NominalStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NominalStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode NominalStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NominalStandardFunctionNode(string?, List<Node>?, List<Node>?) public NominalStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormDistFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormDistFutureFunctionNode.html",
    "title": "Class NormDistFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class NormDistFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NormDistFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode NormDistFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NormDistFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public NormDistFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormDistStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormDistStandardFunctionNode.html",
    "title": "Class NormDistStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class NormDistStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NormDistStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode NormDistStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NormDistStandardFunctionNode(string?, List<Node>?, List<Node>?) public NormDistStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormInvFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormInvFutureFunctionNode.html",
    "title": "Class NormInvFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class NormInvFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NormInvFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode NormInvFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NormInvFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public NormInvFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormInvStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormInvStandardFunctionNode.html",
    "title": "Class NormInvStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class NormInvStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NormInvStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode NormInvStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NormInvStandardFunctionNode(string?, List<Node>?, List<Node>?) public NormInvStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormSDistFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormSDistFutureFunctionNode.html",
    "title": "Class NormSDistFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class NormSDistFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NormSDistFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode NormSDistFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NormSDistFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public NormSDistFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormSInvFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormSInvFutureFunctionNode.html",
    "title": "Class NormSInvFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class NormSInvFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NormSInvFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode NormSInvFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NormSInvFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public NormSInvFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormalCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormalCommandFunctionNode.html",
    "title": "Class NormalCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class NormalCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NormalCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode NormalCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NormalCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public NormalCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormsDistStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormsDistStandardFunctionNode.html",
    "title": "Class NormsDistStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class NormsDistStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NormsDistStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode NormsDistStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NormsDistStandardFunctionNode(string?, List<Node>?, List<Node>?) public NormsDistStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormsInvStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NormsInvStandardFunctionNode.html",
    "title": "Class NormsInvStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class NormsInvStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NormsInvStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode NormsInvStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NormsInvStandardFunctionNode(string?, List<Node>?, List<Node>?) public NormsInvStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NotEqualLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NotEqualLiteralNode.html",
    "title": "Class NotEqualLiteralNode | OpenLanguage Documentation",
    "summary": "Class NotEqualLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NotEqualLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode NotEqualLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NotEqualLiteralNode(string, List<Node>?, List<Node>?) public NotEqualLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NotEqualNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NotEqualNode.html",
    "title": "Class NotEqualNode | OpenLanguage Documentation",
    "summary": "Class NotEqualNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NotEqualNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode NotEqualNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NotEqualNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public NotEqualNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NotStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NotStandardFunctionNode.html",
    "title": "Class NotStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class NotStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NotStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode NotStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NotStandardFunctionNode(string?, List<Node>?, List<Node>?) public NotStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NoteMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NoteMacroFunctionNode.html",
    "title": "Class NoteMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class NoteMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NoteMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode NoteMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NoteMacroFunctionNode(string?, List<Node>?, List<Node>?) public NoteMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NowStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NowStandardFunctionNode.html",
    "title": "Class NowStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class NowStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NowStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode NowStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NowStandardFunctionNode(string?, List<Node>?, List<Node>?) public NowStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NperStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NperStandardFunctionNode.html",
    "title": "Class NperStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class NperStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NperStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode NperStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NperStandardFunctionNode(string?, List<Node>?, List<Node>?) public NperStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NpvStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NpvStandardFunctionNode.html",
    "title": "Class NpvStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class NpvStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NpvStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode NpvStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NpvStandardFunctionNode(string?, List<Node>?, List<Node>?) public NpvStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NullErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NullErrorNode.html",
    "title": "Class NullErrorNode | OpenLanguage Documentation",
    "summary": "Class NullErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NullErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode NullErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NullErrorNode(string, List<Node>?, List<Node>?) public NullErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NumErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NumErrorNode.html",
    "title": "Class NumErrorNode | OpenLanguage Documentation",
    "summary": "Class NumErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NumErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode NumErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NumErrorNode(string, List<Node>?, List<Node>?) public NumErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NumberStringStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NumberStringStandardFunctionNode.html",
    "title": "Class NumberStringStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class NumberStringStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NumberStringStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode NumberStringStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NumberStringStandardFunctionNode(string?, List<Node>?, List<Node>?) public NumberStringStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NumberValueFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NumberValueFutureFunctionNode.html",
    "title": "Class NumberValueFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class NumberValueFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NumberValueFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode NumberValueFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NumberValueFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public NumberValueFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NumericLiteralFormatSpecifier-1.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NumericLiteralFormatSpecifier-1.html",
    "title": "Class NumericLiteralFormatSpecifier<N> | OpenLanguage Documentation",
    "summary": "Class NumericLiteralFormatSpecifier<N> Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NumericLiteralFormatSpecifier<N> where N : INumber<N>, IBinaryNumber<N>, INumberBase<N>, IParsable<N>, IFormattable, IMinMaxValue<N>, IConvertible Type Parameters N Inheritance object NumericLiteralFormatSpecifier<N> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors NumericLiteralFormatSpecifier(string?) public NumericLiteralFormatSpecifier(string? specifier = null) Parameters specifier string Properties Specifier public string Specifier { get; set; } Property Value string"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.NumericLiteralNode-1.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.NumericLiteralNode-1.html",
    "title": "Class NumericLiteralNode<N> | OpenLanguage Documentation",
    "summary": "Class NumericLiteralNode<N> Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class NumericLiteralNode<N> : ExpressionNode where N : struct, INumber<N>, IBinaryNumber<N>, INumberBase<N>, IParsable<N>, IFormattable, IMinMaxValue<N>, IConvertible Type Parameters N Inheritance object Node ExpressionNode NumericLiteralNode<N> Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NumericLiteralNode(string, List<Node>?, List<Node>?) public NumericLiteralNode(string rawText, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawText string leadingWhitespace List<Node> trailingWhitespace List<Node> NumericLiteralNode(string, string, List<Node>?, List<Node>?) public NumericLiteralNode(string rawText, string formatSpecifier, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawText string formatSpecifier string leadingWhitespace List<Node> trailingWhitespace List<Node> NumericLiteralNode(N, List<Node>?, List<Node>?) public NumericLiteralNode(N value, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters value N leadingWhitespace List<Node> trailingWhitespace List<Node> NumericLiteralNode(N, string, List<Node>?, List<Node>?) public NumericLiteralNode(N value, string formatSpecifier, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters value N formatSpecifier string leadingWhitespace List<Node> trailingWhitespace List<Node> Properties FormatSpecifier public NumericLiteralFormatSpecifier<N> FormatSpecifier { get; set; } Property Value NumericLiteralFormatSpecifier<N> Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Value public N? Value { get; set; } Property Value N? Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ObjectPropertiesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ObjectPropertiesCommandFunctionNode.html",
    "title": "Class ObjectPropertiesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ObjectPropertiesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ObjectPropertiesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ObjectPropertiesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ObjectPropertiesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ObjectPropertiesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ObjectProtectionCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ObjectProtectionCommandFunctionNode.html",
    "title": "Class ObjectProtectionCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ObjectProtectionCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ObjectProtectionCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ObjectProtectionCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ObjectProtectionCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ObjectProtectionCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OctToBinStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OctToBinStandardFunctionNode.html",
    "title": "Class OctToBinStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class OctToBinStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OctToBinStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode OctToBinStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OctToBinStandardFunctionNode(string?, List<Node>?, List<Node>?) public OctToBinStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OctToDecStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OctToDecStandardFunctionNode.html",
    "title": "Class OctToDecStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class OctToDecStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OctToDecStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode OctToDecStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OctToDecStandardFunctionNode(string?, List<Node>?, List<Node>?) public OctToDecStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OctToHexStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OctToHexStandardFunctionNode.html",
    "title": "Class OctToHexStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class OctToHexStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OctToHexStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode OctToHexStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OctToHexStandardFunctionNode(string?, List<Node>?, List<Node>?) public OctToHexStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OddFPriceStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OddFPriceStandardFunctionNode.html",
    "title": "Class OddFPriceStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class OddFPriceStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OddFPriceStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode OddFPriceStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OddFPriceStandardFunctionNode(string?, List<Node>?, List<Node>?) public OddFPriceStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OddFYieldStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OddFYieldStandardFunctionNode.html",
    "title": "Class OddFYieldStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class OddFYieldStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OddFYieldStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode OddFYieldStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OddFYieldStandardFunctionNode(string?, List<Node>?, List<Node>?) public OddFYieldStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OddLPriceStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OddLPriceStandardFunctionNode.html",
    "title": "Class OddLPriceStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class OddLPriceStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OddLPriceStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode OddLPriceStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OddLPriceStandardFunctionNode(string?, List<Node>?, List<Node>?) public OddLPriceStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OddLYieldStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OddLYieldStandardFunctionNode.html",
    "title": "Class OddLYieldStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class OddLYieldStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OddLYieldStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode OddLYieldStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OddLYieldStandardFunctionNode(string?, List<Node>?, List<Node>?) public OddLYieldStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OddStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OddStandardFunctionNode.html",
    "title": "Class OddStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class OddStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OddStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode OddStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OddStandardFunctionNode(string?, List<Node>?, List<Node>?) public OddStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OffsetStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OffsetStandardFunctionNode.html",
    "title": "Class OffsetStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class OffsetStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OffsetStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode OffsetStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OffsetStandardFunctionNode(string?, List<Node>?, List<Node>?) public OffsetStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnDataCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnDataCommandFunctionNode.html",
    "title": "Class OnDataCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OnDataCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OnDataCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OnDataCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OnDataCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OnDataCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnDoubleclickCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnDoubleclickCommandFunctionNode.html",
    "title": "Class OnDoubleclickCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OnDoubleclickCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OnDoubleclickCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OnDoubleclickCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OnDoubleclickCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OnDoubleclickCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnEntryCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnEntryCommandFunctionNode.html",
    "title": "Class OnEntryCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OnEntryCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OnEntryCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OnEntryCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OnEntryCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OnEntryCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnKeyCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnKeyCommandFunctionNode.html",
    "title": "Class OnKeyCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OnKeyCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OnKeyCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OnKeyCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OnKeyCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OnKeyCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnRecalcCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnRecalcCommandFunctionNode.html",
    "title": "Class OnRecalcCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OnRecalcCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OnRecalcCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OnRecalcCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OnRecalcCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OnRecalcCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnSheetCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnSheetCommandFunctionNode.html",
    "title": "Class OnSheetCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OnSheetCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OnSheetCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OnSheetCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OnSheetCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OnSheetCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnTimeCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnTimeCommandFunctionNode.html",
    "title": "Class OnTimeCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OnTimeCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OnTimeCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OnTimeCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OnTimeCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OnTimeCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnWindowCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OnWindowCommandFunctionNode.html",
    "title": "Class OnWindowCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OnWindowCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OnWindowCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OnWindowCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OnWindowCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OnWindowCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OpenCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OpenCommandFunctionNode.html",
    "title": "Class OpenCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OpenCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OpenCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OpenCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OpenCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OpenCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OpenDialogMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OpenDialogMacroFunctionNode.html",
    "title": "Class OpenDialogMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class OpenDialogMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OpenDialogMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode OpenDialogMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OpenDialogMacroFunctionNode(string?, List<Node>?, List<Node>?) public OpenDialogMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OpenLinksCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OpenLinksCommandFunctionNode.html",
    "title": "Class OpenLinksCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OpenLinksCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OpenLinksCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OpenLinksCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OpenLinksCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OpenLinksCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OpenMailCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OpenMailCommandFunctionNode.html",
    "title": "Class OpenMailCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OpenMailCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OpenMailCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OpenMailCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OpenMailCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OpenMailCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OpenTextCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OpenTextCommandFunctionNode.html",
    "title": "Class OpenTextCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OpenTextCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OpenTextCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OpenTextCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OpenTextCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OpenTextCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsCalculationCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsCalculationCommandFunctionNode.html",
    "title": "Class OptionsCalculationCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OptionsCalculationCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OptionsCalculationCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OptionsCalculationCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OptionsCalculationCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OptionsCalculationCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsChartCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsChartCommandFunctionNode.html",
    "title": "Class OptionsChartCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OptionsChartCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OptionsChartCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OptionsChartCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OptionsChartCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OptionsChartCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsEditCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsEditCommandFunctionNode.html",
    "title": "Class OptionsEditCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OptionsEditCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OptionsEditCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OptionsEditCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OptionsEditCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OptionsEditCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsGeneralCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsGeneralCommandFunctionNode.html",
    "title": "Class OptionsGeneralCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OptionsGeneralCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OptionsGeneralCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OptionsGeneralCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OptionsGeneralCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OptionsGeneralCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsListsAddCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsListsAddCommandFunctionNode.html",
    "title": "Class OptionsListsAddCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OptionsListsAddCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OptionsListsAddCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OptionsListsAddCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OptionsListsAddCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OptionsListsAddCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsListsDeleteCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsListsDeleteCommandFunctionNode.html",
    "title": "Class OptionsListsDeleteCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OptionsListsDeleteCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OptionsListsDeleteCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OptionsListsDeleteCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OptionsListsDeleteCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OptionsListsDeleteCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsListsGetMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsListsGetMacroFunctionNode.html",
    "title": "Class OptionsListsGetMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class OptionsListsGetMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OptionsListsGetMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode OptionsListsGetMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OptionsListsGetMacroFunctionNode(string?, List<Node>?, List<Node>?) public OptionsListsGetMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsMeCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsMeCommandFunctionNode.html",
    "title": "Class OptionsMeCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OptionsMeCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OptionsMeCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OptionsMeCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OptionsMeCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OptionsMeCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsMenonoCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsMenonoCommandFunctionNode.html",
    "title": "Class OptionsMenonoCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OptionsMenonoCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OptionsMenonoCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OptionsMenonoCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OptionsMenonoCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OptionsMenonoCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsSaveCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsSaveCommandFunctionNode.html",
    "title": "Class OptionsSaveCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OptionsSaveCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OptionsSaveCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OptionsSaveCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OptionsSaveCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OptionsSaveCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsSpellCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsSpellCommandFunctionNode.html",
    "title": "Class OptionsSpellCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OptionsSpellCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OptionsSpellCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OptionsSpellCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OptionsSpellCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OptionsSpellCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsTransitionCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsTransitionCommandFunctionNode.html",
    "title": "Class OptionsTransitionCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OptionsTransitionCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OptionsTransitionCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OptionsTransitionCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OptionsTransitionCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OptionsTransitionCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsViewCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OptionsViewCommandFunctionNode.html",
    "title": "Class OptionsViewCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OptionsViewCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OptionsViewCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OptionsViewCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OptionsViewCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OptionsViewCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OrStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OrStandardFunctionNode.html",
    "title": "Class OrStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class OrStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OrStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode OrStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OrStandardFunctionNode(string?, List<Node>?, List<Node>?) public OrStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OutlineCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OutlineCommandFunctionNode.html",
    "title": "Class OutlineCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OutlineCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OutlineCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OutlineCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OutlineCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OutlineCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OverlayChartTypeCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OverlayChartTypeCommandFunctionNode.html",
    "title": "Class OverlayChartTypeCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OverlayChartTypeCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OverlayChartTypeCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OverlayChartTypeCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OverlayChartTypeCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OverlayChartTypeCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.OverlayCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.OverlayCommandFunctionNode.html",
    "title": "Class OverlayCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class OverlayCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class OverlayCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode OverlayCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors OverlayCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public OverlayCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PDurationFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PDurationFutureFunctionNode.html",
    "title": "Class PDurationFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class PDurationFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PDurationFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode PDurationFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PDurationFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public PDurationFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PageSetupCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PageSetupCommandFunctionNode.html",
    "title": "Class PageSetupCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PageSetupCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PageSetupCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PageSetupCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PageSetupCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PageSetupCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ParenthesizedExpressionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ParenthesizedExpressionNode.html",
    "title": "Class ParenthesizedExpressionNode | OpenLanguage Documentation",
    "summary": "Class ParenthesizedExpressionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll Represents an expression that was explicitly enclosed in parentheses in the original formula. public class ParenthesizedExpressionNode : ExpressionNode Inheritance object Node ExpressionNode ParenthesizedExpressionNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ParenthesizedExpressionNode(ExpressionNode, List<Node>?, List<Node>?) public ParenthesizedExpressionNode(ExpressionNode expression, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters expression ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Expression public ExpressionNode Expression { get; set; } Property Value ExpressionNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ParseCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ParseCommandFunctionNode.html",
    "title": "Class ParseCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ParseCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ParseCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ParseCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ParseCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ParseCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PasteCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PasteCommandFunctionNode.html",
    "title": "Class PasteCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PasteCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PasteCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PasteCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PasteCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PasteCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PasteLinkCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PasteLinkCommandFunctionNode.html",
    "title": "Class PasteLinkCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PasteLinkCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PasteLinkCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PasteLinkCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PasteLinkCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PasteLinkCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PastePictureCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PastePictureCommandFunctionNode.html",
    "title": "Class PastePictureCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PastePictureCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PastePictureCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PastePictureCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PastePictureCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PastePictureCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PastePictureLinkCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PastePictureLinkCommandFunctionNode.html",
    "title": "Class PastePictureLinkCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PastePictureLinkCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PastePictureLinkCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PastePictureLinkCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PastePictureLinkCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PastePictureLinkCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PasteSpecialCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PasteSpecialCommandFunctionNode.html",
    "title": "Class PasteSpecialCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PasteSpecialCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PasteSpecialCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PasteSpecialCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PasteSpecialCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PasteSpecialCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PasteToolCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PasteToolCommandFunctionNode.html",
    "title": "Class PasteToolCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PasteToolCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PasteToolCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PasteToolCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PasteToolCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PasteToolCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PatternsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PatternsCommandFunctionNode.html",
    "title": "Class PatternsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PatternsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PatternsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PatternsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PatternsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PatternsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PauseMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PauseMacroFunctionNode.html",
    "title": "Class PauseMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class PauseMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PauseMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode PauseMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PauseMacroFunctionNode(string?, List<Node>?, List<Node>?) public PauseMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PearsonStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PearsonStandardFunctionNode.html",
    "title": "Class PearsonStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class PearsonStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PearsonStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode PearsonStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PearsonStandardFunctionNode(string?, List<Node>?, List<Node>?) public PearsonStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentLiteralNode.html",
    "title": "Class PercentLiteralNode | OpenLanguage Documentation",
    "summary": "Class PercentLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PercentLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode PercentLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PercentLiteralNode(string, List<Node>?, List<Node>?) public PercentLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentNode.html",
    "title": "Class PercentNode | OpenLanguage Documentation",
    "summary": "Class PercentNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PercentNode : UnaryOperatorNode Inheritance object Node ExpressionNode UnaryOperatorNode PercentNode Inherited Members UnaryOperatorNode.Operand UnaryOperatorNode.Operator ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PercentNode(ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public PercentNode(ExpressionNode op, ExpressionNode operand, List<Node>? lws = null, List<Node>? tws = null) Parameters op ExpressionNode operand ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentOfFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentOfFutureFunctionNode.html",
    "title": "Class PercentOfFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class PercentOfFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PercentOfFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode PercentOfFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PercentOfFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public PercentOfFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentRankExcFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentRankExcFutureFunctionNode.html",
    "title": "Class PercentRankExcFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class PercentRankExcFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PercentRankExcFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode PercentRankExcFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PercentRankExcFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public PercentRankExcFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentRankIncFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentRankIncFutureFunctionNode.html",
    "title": "Class PercentRankIncFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class PercentRankIncFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PercentRankIncFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode PercentRankIncFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PercentRankIncFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public PercentRankIncFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentRankStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentRankStandardFunctionNode.html",
    "title": "Class PercentRankStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class PercentRankStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PercentRankStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode PercentRankStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PercentRankStandardFunctionNode(string?, List<Node>?, List<Node>?) public PercentRankStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentileExcFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentileExcFutureFunctionNode.html",
    "title": "Class PercentileExcFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class PercentileExcFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PercentileExcFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode PercentileExcFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PercentileExcFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public PercentileExcFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentileIncFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentileIncFutureFunctionNode.html",
    "title": "Class PercentileIncFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class PercentileIncFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PercentileIncFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode PercentileIncFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PercentileIncFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public PercentileIncFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentileStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PercentileStandardFunctionNode.html",
    "title": "Class PercentileStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class PercentileStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PercentileStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode PercentileStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PercentileStandardFunctionNode(string?, List<Node>?, List<Node>?) public PercentileStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PermutStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PermutStandardFunctionNode.html",
    "title": "Class PermutStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class PermutStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PermutStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode PermutStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PermutStandardFunctionNode(string?, List<Node>?, List<Node>?) public PermutStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PermutationaFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PermutationaFutureFunctionNode.html",
    "title": "Class PermutationaFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class PermutationaFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PermutationaFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode PermutationaFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PermutationaFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public PermutationaFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PhiFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PhiFutureFunctionNode.html",
    "title": "Class PhiFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class PhiFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PhiFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode PhiFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PhiFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public PhiFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PhoneticStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PhoneticStandardFunctionNode.html",
    "title": "Class PhoneticStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class PhoneticStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PhoneticStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode PhoneticStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PhoneticStandardFunctionNode(string?, List<Node>?, List<Node>?) public PhoneticStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PiStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PiStandardFunctionNode.html",
    "title": "Class PiStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class PiStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PiStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode PiStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PiStandardFunctionNode(string?, List<Node>?, List<Node>?) public PiStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PicklistCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PicklistCommandFunctionNode.html",
    "title": "Class PicklistCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PicklistCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PicklistCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PicklistCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PicklistCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PicklistCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotAddFieldsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotAddFieldsCommandFunctionNode.html",
    "title": "Class PivotAddFieldsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PivotAddFieldsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PivotAddFieldsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PivotAddFieldsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PivotAddFieldsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PivotAddFieldsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotByFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotByFutureFunctionNode.html",
    "title": "Class PivotByFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class PivotByFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PivotByFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode PivotByFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PivotByFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public PivotByFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotField.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotField.html",
    "title": "Class PivotField | OpenLanguage Documentation",
    "summary": "Class PivotField Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PivotField : ExpressionNode Inheritance object Node ExpressionNode PivotField Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PivotField(ExpressionNode, List<Node>?, List<Node>?) public PivotField(ExpressionNode name, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Name public ExpressionNode Name { get; set; } Property Value ExpressionNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotFieldCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotFieldCommandFunctionNode.html",
    "title": "Class PivotFieldCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PivotFieldCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PivotFieldCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PivotFieldCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PivotFieldCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PivotFieldCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotFieldGroupCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotFieldGroupCommandFunctionNode.html",
    "title": "Class PivotFieldGroupCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PivotFieldGroupCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PivotFieldGroupCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PivotFieldGroupCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PivotFieldGroupCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PivotFieldGroupCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotFieldOffset.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotFieldOffset.html",
    "title": "Class PivotFieldOffset | OpenLanguage Documentation",
    "summary": "Class PivotFieldOffset Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PivotFieldOffset : ExpressionNode Inheritance object Node ExpressionNode PivotFieldOffset Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PivotFieldOffset(ExpressionNode, List<Node>?, List<Node>?) public PivotFieldOffset(ExpressionNode value, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters value ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Value public ExpressionNode Value { get; set; } Property Value ExpressionNode Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotFieldPropertiesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotFieldPropertiesCommandFunctionNode.html",
    "title": "Class PivotFieldPropertiesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PivotFieldPropertiesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PivotFieldPropertiesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PivotFieldPropertiesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PivotFieldPropertiesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PivotFieldPropertiesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotFieldUngroupCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotFieldUngroupCommandFunctionNode.html",
    "title": "Class PivotFieldUngroupCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PivotFieldUngroupCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PivotFieldUngroupCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PivotFieldUngroupCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PivotFieldUngroupCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PivotFieldUngroupCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotItemCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotItemCommandFunctionNode.html",
    "title": "Class PivotItemCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PivotItemCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PivotItemCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PivotItemCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PivotItemCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PivotItemCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotItemPropertiesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotItemPropertiesCommandFunctionNode.html",
    "title": "Class PivotItemPropertiesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PivotItemPropertiesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PivotItemPropertiesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PivotItemPropertiesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PivotItemPropertiesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PivotItemPropertiesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotRefreshCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotRefreshCommandFunctionNode.html",
    "title": "Class PivotRefreshCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PivotRefreshCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PivotRefreshCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PivotRefreshCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PivotRefreshCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PivotRefreshCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotShowPagesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotShowPagesCommandFunctionNode.html",
    "title": "Class PivotShowPagesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PivotShowPagesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PivotShowPagesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PivotShowPagesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PivotShowPagesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PivotShowPagesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotTableChartCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotTableChartCommandFunctionNode.html",
    "title": "Class PivotTableChartCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PivotTableChartCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PivotTableChartCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PivotTableChartCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PivotTableChartCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PivotTableChartCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotTableWizardCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PivotTableWizardCommandFunctionNode.html",
    "title": "Class PivotTableWizardCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PivotTableWizardCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PivotTableWizardCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PivotTableWizardCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PivotTableWizardCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PivotTableWizardCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PlusLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PlusLiteralNode.html",
    "title": "Class PlusLiteralNode | OpenLanguage Documentation",
    "summary": "Class PlusLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PlusLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode PlusLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PlusLiteralNode(string, List<Node>?, List<Node>?) public PlusLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PmtStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PmtStandardFunctionNode.html",
    "title": "Class PmtStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class PmtStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PmtStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode PmtStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PmtStandardFunctionNode(string?, List<Node>?, List<Node>?) public PmtStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PoissonDistFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PoissonDistFutureFunctionNode.html",
    "title": "Class PoissonDistFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class PoissonDistFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PoissonDistFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode PoissonDistFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PoissonDistFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public PoissonDistFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PoissonStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PoissonStandardFunctionNode.html",
    "title": "Class PoissonStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class PoissonStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PoissonStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode PoissonStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PoissonStandardFunctionNode(string?, List<Node>?, List<Node>?) public PoissonStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PokeMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PokeMacroFunctionNode.html",
    "title": "Class PokeMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class PokeMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PokeMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode PokeMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PokeMacroFunctionNode(string?, List<Node>?, List<Node>?) public PokeMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PostDocumentCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PostDocumentCommandFunctionNode.html",
    "title": "Class PostDocumentCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PostDocumentCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PostDocumentCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PostDocumentCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PostDocumentCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PostDocumentCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PowerNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PowerNode.html",
    "title": "Class PowerNode | OpenLanguage Documentation",
    "summary": "Class PowerNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PowerNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode PowerNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PowerNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public PowerNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PowerStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PowerStandardFunctionNode.html",
    "title": "Class PowerStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class PowerStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PowerStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode PowerStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PowerStandardFunctionNode(string?, List<Node>?, List<Node>?) public PowerStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PpmtStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PpmtStandardFunctionNode.html",
    "title": "Class PpmtStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class PpmtStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PpmtStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode PpmtStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PpmtStandardFunctionNode(string?, List<Node>?, List<Node>?) public PpmtStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PqsourceFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PqsourceFutureFunctionNode.html",
    "title": "Class PqsourceFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class PqsourceFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PqsourceFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode PqsourceFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PqsourceFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public PqsourceFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PrecisionCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PrecisionCommandFunctionNode.html",
    "title": "Class PrecisionCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PrecisionCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PrecisionCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PrecisionCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PrecisionCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PrecisionCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PreferredCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PreferredCommandFunctionNode.html",
    "title": "Class PreferredCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PreferredCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PreferredCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PreferredCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PreferredCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PreferredCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PrefixNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PrefixNode.html",
    "title": "Class PrefixNode | OpenLanguage Documentation",
    "summary": "Class PrefixNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PrefixNode : ExpressionNode Inheritance object Node ExpressionNode PrefixNode Derived FunctionPrefixNode XlopPrefixNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PrefixNode(ExpressionNode?, List<Node>?, List<Node>?) public PrefixNode(ExpressionNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters prefix ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node> PrefixNode(string?, List<Node>?, List<Node>?) public PrefixNode(string? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters prefix string leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Prefix public ExpressionNode? Prefix { get; set; } Property Value ExpressionNode RawPrefix public string? RawPrefix { get; set; } Property Value string Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PressToolMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PressToolMacroFunctionNode.html",
    "title": "Class PressToolMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class PressToolMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PressToolMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode PressToolMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PressToolMacroFunctionNode(string?, List<Node>?, List<Node>?) public PressToolMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PriceStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PriceStandardFunctionNode.html",
    "title": "Class PriceStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class PriceStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PriceStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode PriceStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PriceStandardFunctionNode(string?, List<Node>?, List<Node>?) public PriceStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PricediscStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PricediscStandardFunctionNode.html",
    "title": "Class PricediscStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class PricediscStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PricediscStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode PricediscStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PricediscStandardFunctionNode(string?, List<Node>?, List<Node>?) public PricediscStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PricematStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PricematStandardFunctionNode.html",
    "title": "Class PricematStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class PricematStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PricematStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode PricematStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PricematStandardFunctionNode(string?, List<Node>?, List<Node>?) public PricematStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PrintCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PrintCommandFunctionNode.html",
    "title": "Class PrintCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PrintCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PrintCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PrintCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PrintCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PrintCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PrintPreviewCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PrintPreviewCommandFunctionNode.html",
    "title": "Class PrintPreviewCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PrintPreviewCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PrintPreviewCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PrintPreviewCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PrintPreviewCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PrintPreviewCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PrinterSetupCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PrinterSetupCommandFunctionNode.html",
    "title": "Class PrinterSetupCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PrinterSetupCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PrinterSetupCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PrinterSetupCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PrinterSetupCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PrinterSetupCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ProbStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ProbStandardFunctionNode.html",
    "title": "Class ProbStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ProbStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ProbStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ProbStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ProbStandardFunctionNode(string?, List<Node>?, List<Node>?) public ProbStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ProductStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ProductStandardFunctionNode.html",
    "title": "Class ProductStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ProductStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ProductStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ProductStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ProductStandardFunctionNode(string?, List<Node>?, List<Node>?) public ProductStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PromoteCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PromoteCommandFunctionNode.html",
    "title": "Class PromoteCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PromoteCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PromoteCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PromoteCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PromoteCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PromoteCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ProperStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ProperStandardFunctionNode.html",
    "title": "Class ProperStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ProperStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ProperStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ProperStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ProperStandardFunctionNode(string?, List<Node>?, List<Node>?) public ProperStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ProtectDocumentCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ProtectDocumentCommandFunctionNode.html",
    "title": "Class ProtectDocumentCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ProtectDocumentCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ProtectDocumentCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ProtectDocumentCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ProtectDocumentCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ProtectDocumentCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ProtectRevisionsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ProtectRevisionsCommandFunctionNode.html",
    "title": "Class ProtectRevisionsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ProtectRevisionsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ProtectRevisionsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ProtectRevisionsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ProtectRevisionsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ProtectRevisionsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PushbuttonPropertiesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PushbuttonPropertiesCommandFunctionNode.html",
    "title": "Class PushbuttonPropertiesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class PushbuttonPropertiesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PushbuttonPropertiesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode PushbuttonPropertiesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PushbuttonPropertiesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public PushbuttonPropertiesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PvStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PvStandardFunctionNode.html",
    "title": "Class PvStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class PvStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PvStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode PvStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PvStandardFunctionNode(string?, List<Node>?, List<Node>?) public PvStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PyFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PyFunctionNode.html",
    "title": "Class PyFunctionNode | OpenLanguage Documentation",
    "summary": "Class PyFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PyFunctionNode : WorksheetFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode WorksheetFunctionNode PyFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PyFunctionNode(string?, XlfnFunctionPrefixNode?, XlwsFunctionPrefixNode?, List<Node>?, List<Node>?) public PyFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? xlfnPrefix = null, XlwsFunctionPrefixNode? xlwsPrefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string xlfnPrefix XlfnFunctionPrefixNode xlwsPrefix XlwsFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PythonErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PythonErrorNode.html",
    "title": "Class PythonErrorNode | OpenLanguage Documentation",
    "summary": "Class PythonErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PythonErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode PythonErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PythonErrorNode(string, List<Node>?, List<Node>?) public PythonErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PythonStrFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PythonStrFutureFunctionNode.html",
    "title": "Class PythonStrFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class PythonStrFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PythonStrFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode PythonStrFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PythonStrFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public PythonStrFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PythonTypeFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PythonTypeFutureFunctionNode.html",
    "title": "Class PythonTypeFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class PythonTypeFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PythonTypeFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode PythonTypeFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PythonTypeFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public PythonTypeFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.PythonTypenameFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.PythonTypenameFutureFunctionNode.html",
    "title": "Class PythonTypenameFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class PythonTypenameFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class PythonTypenameFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode PythonTypenameFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PythonTypenameFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public PythonTypenameFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.QuartileExcFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.QuartileExcFutureFunctionNode.html",
    "title": "Class QuartileExcFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class QuartileExcFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class QuartileExcFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode QuartileExcFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors QuartileExcFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public QuartileExcFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.QuartileIncFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.QuartileIncFutureFunctionNode.html",
    "title": "Class QuartileIncFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class QuartileIncFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class QuartileIncFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode QuartileIncFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors QuartileIncFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public QuartileIncFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.QuartileStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.QuartileStandardFunctionNode.html",
    "title": "Class QuartileStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class QuartileStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class QuartileStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode QuartileStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors QuartileStandardFunctionNode(string?, List<Node>?, List<Node>?) public QuartileStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.QueryStringFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.QueryStringFutureFunctionNode.html",
    "title": "Class QueryStringFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class QueryStringFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class QueryStringFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode QueryStringFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors QueryStringFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public QueryStringFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.QuestionMarkNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.QuestionMarkNode.html",
    "title": "Class QuestionMarkNode | OpenLanguage Documentation",
    "summary": "Class QuestionMarkNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class QuestionMarkNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode QuestionMarkNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors QuestionMarkNode(string, List<Node>?, List<Node>?) public QuestionMarkNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.QuitCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.QuitCommandFunctionNode.html",
    "title": "Class QuitCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class QuitCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class QuitCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode QuitCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors QuitCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public QuitCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.QuotedSheetNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.QuotedSheetNode.html",
    "title": "Class QuotedSheetNode | OpenLanguage Documentation",
    "summary": "Class QuotedSheetNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class QuotedSheetNode : ExpressionNode Inheritance object Node ExpressionNode QuotedSheetNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors QuotedSheetNode(ExpressionNode, string, string, List<Node>?, List<Node>?) public QuotedSheetNode(ExpressionNode sheet, string openQuote, string closeQuote, List<Node>? leadingWs = null, List<Node>? trailingWs = null) Parameters sheet ExpressionNode openQuote string closeQuote string leadingWs List<Node> trailingWs List<Node> Properties CloseQuote public string CloseQuote { get; set; } Property Value string OpenQuote public string OpenQuote { get; set; } Property Value string Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Sheet public ExpressionNode Sheet { get; set; } Property Value ExpressionNode Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.QuotientStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.QuotientStandardFunctionNode.html",
    "title": "Class QuotientStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class QuotientStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class QuotientStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode QuotientStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors QuotientStandardFunctionNode(string?, List<Node>?, List<Node>?) public QuotientStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1AbsoluteColumnNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1AbsoluteColumnNode.html",
    "title": "Class R1C1AbsoluteColumnNode | OpenLanguage Documentation",
    "summary": "Class R1C1AbsoluteColumnNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class R1C1AbsoluteColumnNode : R1C1ColumnNode Inheritance object Node ExpressionNode ColumnNode<long> R1C1ColumnNode R1C1AbsoluteColumnNode Inherited Members R1C1ColumnNode.ToRawString() ColumnNode<long>.ColumnSpecifier ColumnNode<long>.Precedence ColumnNode<long>.ReplaceChild(int, Node) ColumnNode<long>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors R1C1AbsoluteColumnNode(long, List<Node>?, List<Node>?) public R1C1AbsoluteColumnNode(long val, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val long leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1AbsoluteRowNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1AbsoluteRowNode.html",
    "title": "Class R1C1AbsoluteRowNode | OpenLanguage Documentation",
    "summary": "Class R1C1AbsoluteRowNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class R1C1AbsoluteRowNode : R1C1RowNode Inheritance object Node ExpressionNode RowNode<long> R1C1RowNode R1C1AbsoluteRowNode Inherited Members R1C1RowNode.ToRawString() RowNode<long>.RowSpecifier RowNode<long>.Precedence RowNode<long>.ReplaceChild(int, Node) RowNode<long>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors R1C1AbsoluteRowNode(long, List<Node>?, List<Node>?) public R1C1AbsoluteRowNode(long val, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val long leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1CellNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1CellNode.html",
    "title": "Class R1C1CellNode | OpenLanguage Documentation",
    "summary": "Class R1C1CellNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class R1C1CellNode : CellNode<R1C1RowNode, long, R1C1ColumnNode, long> Inheritance object Node ExpressionNode CellNode<R1C1RowNode, long, R1C1ColumnNode, long> R1C1CellNode Inherited Members CellNode<R1C1RowNode, long, R1C1ColumnNode, long>.Row CellNode<R1C1RowNode, long, R1C1ColumnNode, long>.Column CellNode<R1C1RowNode, long, R1C1ColumnNode, long>.Precedence CellNode<R1C1RowNode, long, R1C1ColumnNode, long>.ToRawString() CellNode<R1C1RowNode, long, R1C1ColumnNode, long>.Children<O>() CellNode<R1C1RowNode, long, R1C1ColumnNode, long>.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.Precedence ExpressionNode.ToString() Node.Children<O>() Node.ReplaceChild(int, Node) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors R1C1CellNode(R1C1RowNode, R1C1ColumnNode) public R1C1CellNode(R1C1RowNode row, R1C1ColumnNode column) Parameters row R1C1RowNode column R1C1ColumnNode Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1ColumnNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1ColumnNode.html",
    "title": "Class R1C1ColumnNode | OpenLanguage Documentation",
    "summary": "Class R1C1ColumnNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public abstract class R1C1ColumnNode : ColumnNode<long> Inheritance object Node ExpressionNode ColumnNode<long> R1C1ColumnNode Derived R1C1AbsoluteColumnNode R1C1CurrentColumnNode R1C1RelativeColumnNode Inherited Members ColumnNode<long>.ColumnSpecifier ColumnNode<long>.Precedence ColumnNode<long>.ReplaceChild(int, Node) ColumnNode<long>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors R1C1ColumnNode(long, List<Node>?, List<Node>?) public R1C1ColumnNode(long val, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val long leadingWhitespace List<Node> trailingWhitespace List<Node> Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1CurrentColumnNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1CurrentColumnNode.html",
    "title": "Class R1C1CurrentColumnNode | OpenLanguage Documentation",
    "summary": "Class R1C1CurrentColumnNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class R1C1CurrentColumnNode : R1C1ColumnNode Inheritance object Node ExpressionNode ColumnNode<long> R1C1ColumnNode R1C1CurrentColumnNode Inherited Members ColumnNode<long>.ColumnSpecifier ColumnNode<long>.Precedence ColumnNode<long>.ReplaceChild(int, Node) ColumnNode<long>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors R1C1CurrentColumnNode(long, List<Node>?, List<Node>?) public R1C1CurrentColumnNode(long val = 0, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val long leadingWhitespace List<Node> trailingWhitespace List<Node> Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1CurrentRowNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1CurrentRowNode.html",
    "title": "Class R1C1CurrentRowNode | OpenLanguage Documentation",
    "summary": "Class R1C1CurrentRowNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class R1C1CurrentRowNode : R1C1RowNode Inheritance object Node ExpressionNode RowNode<long> R1C1RowNode R1C1CurrentRowNode Inherited Members RowNode<long>.RowSpecifier RowNode<long>.Precedence RowNode<long>.ReplaceChild(int, Node) RowNode<long>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors R1C1CurrentRowNode(long, List<Node>?, List<Node>?) public R1C1CurrentRowNode(long val = 0, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val long leadingWhitespace List<Node> trailingWhitespace List<Node> Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1RelativeColumnNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1RelativeColumnNode.html",
    "title": "Class R1C1RelativeColumnNode | OpenLanguage Documentation",
    "summary": "Class R1C1RelativeColumnNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class R1C1RelativeColumnNode : R1C1ColumnNode Inheritance object Node ExpressionNode ColumnNode<long> R1C1ColumnNode R1C1RelativeColumnNode Inherited Members ColumnNode<long>.ColumnSpecifier ColumnNode<long>.Precedence ColumnNode<long>.ReplaceChild(int, Node) ColumnNode<long>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors R1C1RelativeColumnNode(long, List<Node>?, List<Node>?) public R1C1RelativeColumnNode(long val, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val long leadingWhitespace List<Node> trailingWhitespace List<Node> Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1RelativeRowNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1RelativeRowNode.html",
    "title": "Class R1C1RelativeRowNode | OpenLanguage Documentation",
    "summary": "Class R1C1RelativeRowNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class R1C1RelativeRowNode : R1C1RowNode Inheritance object Node ExpressionNode RowNode<long> R1C1RowNode R1C1RelativeRowNode Inherited Members RowNode<long>.RowSpecifier RowNode<long>.Precedence RowNode<long>.ReplaceChild(int, Node) RowNode<long>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors R1C1RelativeRowNode(long, List<Node>?, List<Node>?) public R1C1RelativeRowNode(long val, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val long leadingWhitespace List<Node> trailingWhitespace List<Node> Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1RowNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.R1C1RowNode.html",
    "title": "Class R1C1RowNode | OpenLanguage Documentation",
    "summary": "Class R1C1RowNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public abstract class R1C1RowNode : RowNode<long> Inheritance object Node ExpressionNode RowNode<long> R1C1RowNode Derived R1C1AbsoluteRowNode R1C1CurrentRowNode R1C1RelativeRowNode Inherited Members RowNode<long>.RowSpecifier RowNode<long>.Precedence RowNode<long>.ReplaceChild(int, Node) RowNode<long>.Children<O>() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors R1C1RowNode(long, List<Node>?, List<Node>?) public R1C1RowNode(long val, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val long leadingWhitespace List<Node> trailingWhitespace List<Node> Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RadiansStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RadiansStandardFunctionNode.html",
    "title": "Class RadiansStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RadiansStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RadiansStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RadiansStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RadiansStandardFunctionNode(string?, List<Node>?, List<Node>?) public RadiansStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RandArrayFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RandArrayFutureFunctionNode.html",
    "title": "Class RandArrayFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class RandArrayFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RandArrayFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode RandArrayFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RandArrayFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public RandArrayFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RandStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RandStandardFunctionNode.html",
    "title": "Class RandStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RandStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RandStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RandStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RandStandardFunctionNode(string?, List<Node>?, List<Node>?) public RandStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RandbetweenStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RandbetweenStandardFunctionNode.html",
    "title": "Class RandbetweenStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RandbetweenStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RandbetweenStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RandbetweenStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RandbetweenStandardFunctionNode(string?, List<Node>?, List<Node>?) public RandbetweenStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RangeNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RangeNode.html",
    "title": "Class RangeNode | OpenLanguage Documentation",
    "summary": "Class RangeNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RangeNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode RangeNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RangeNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public RangeNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RankAvgFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RankAvgFutureFunctionNode.html",
    "title": "Class RankAvgFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class RankAvgFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RankAvgFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode RankAvgFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RankAvgFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public RankAvgFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RankEqFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RankEqFutureFunctionNode.html",
    "title": "Class RankEqFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class RankEqFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RankEqFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode RankEqFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RankEqFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public RankEqFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RankStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RankStandardFunctionNode.html",
    "title": "Class RankStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RankStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RankStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RankStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RankStandardFunctionNode(string?, List<Node>?, List<Node>?) public RankStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RateStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RateStandardFunctionNode.html",
    "title": "Class RateStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RateStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RateStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RateStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RateStandardFunctionNode(string?, List<Node>?, List<Node>?) public RateStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ReceivedStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ReceivedStandardFunctionNode.html",
    "title": "Class ReceivedStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ReceivedStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ReceivedStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ReceivedStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ReceivedStandardFunctionNode(string?, List<Node>?, List<Node>?) public ReceivedStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ReduceFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ReduceFutureFunctionNode.html",
    "title": "Class ReduceFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ReduceFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ReduceFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ReduceFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ReduceFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ReduceFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RefTextMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RefTextMacroFunctionNode.html",
    "title": "Class RefTextMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class RefTextMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RefTextMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode RefTextMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RefTextMacroFunctionNode(string?, List<Node>?, List<Node>?) public RefTextMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RegexExtractFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RegexExtractFutureFunctionNode.html",
    "title": "Class RegexExtractFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class RegexExtractFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RegexExtractFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode RegexExtractFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RegexExtractFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public RegexExtractFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RegexReplaceFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RegexReplaceFutureFunctionNode.html",
    "title": "Class RegexReplaceFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class RegexReplaceFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RegexReplaceFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode RegexReplaceFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RegexReplaceFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public RegexReplaceFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RegexTestFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RegexTestFutureFunctionNode.html",
    "title": "Class RegexTestFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class RegexTestFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RegexTestFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode RegexTestFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RegexTestFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public RegexTestFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RegisterIdMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RegisterIdMacroFunctionNode.html",
    "title": "Class RegisterIdMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class RegisterIdMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RegisterIdMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode RegisterIdMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RegisterIdMacroFunctionNode(string?, List<Node>?, List<Node>?) public RegisterIdMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RegisterMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RegisterMacroFunctionNode.html",
    "title": "Class RegisterMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class RegisterMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RegisterMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode RegisterMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RegisterMacroFunctionNode(string?, List<Node>?, List<Node>?) public RegisterMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RelRefMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RelRefMacroFunctionNode.html",
    "title": "Class RelRefMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class RelRefMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RelRefMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode RelRefMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RelRefMacroFunctionNode(string?, List<Node>?, List<Node>?) public RelRefMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RemoveListItemCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RemoveListItemCommandFunctionNode.html",
    "title": "Class RemoveListItemCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class RemoveListItemCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RemoveListItemCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode RemoveListItemCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RemoveListItemCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public RemoveListItemCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RemovePageBreakCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RemovePageBreakCommandFunctionNode.html",
    "title": "Class RemovePageBreakCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class RemovePageBreakCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RemovePageBreakCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode RemovePageBreakCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RemovePageBreakCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public RemovePageBreakCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RenameCommandMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RenameCommandMacroFunctionNode.html",
    "title": "Class RenameCommandMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class RenameCommandMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RenameCommandMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode RenameCommandMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RenameCommandMacroFunctionNode(string?, List<Node>?, List<Node>?) public RenameCommandMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RenameObjectCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RenameObjectCommandFunctionNode.html",
    "title": "Class RenameObjectCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class RenameObjectCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RenameObjectCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode RenameObjectCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RenameObjectCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public RenameObjectCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ReplaceFontCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ReplaceFontCommandFunctionNode.html",
    "title": "Class ReplaceFontCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ReplaceFontCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ReplaceFontCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ReplaceFontCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ReplaceFontCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ReplaceFontCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ReplaceStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ReplaceStandardFunctionNode.html",
    "title": "Class ReplaceStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ReplaceStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ReplaceStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ReplaceStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ReplaceStandardFunctionNode(string?, List<Node>?, List<Node>?) public ReplaceStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ReplacebStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ReplacebStandardFunctionNode.html",
    "title": "Class ReplacebStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ReplacebStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ReplacebStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ReplacebStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ReplacebStandardFunctionNode(string?, List<Node>?, List<Node>?) public ReplacebStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ReptStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ReptStandardFunctionNode.html",
    "title": "Class ReptStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ReptStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ReptStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ReptStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ReptStandardFunctionNode(string?, List<Node>?, List<Node>?) public ReptStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RequestMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RequestMacroFunctionNode.html",
    "title": "Class RequestMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class RequestMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RequestMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode RequestMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RequestMacroFunctionNode(string?, List<Node>?, List<Node>?) public RequestMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ResetToolCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ResetToolCommandFunctionNode.html",
    "title": "Class ResetToolCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ResetToolCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ResetToolCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ResetToolCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ResetToolCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ResetToolCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ResetToolbarMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ResetToolbarMacroFunctionNode.html",
    "title": "Class ResetToolbarMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ResetToolbarMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ResetToolbarMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ResetToolbarMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ResetToolbarMacroFunctionNode(string?, List<Node>?, List<Node>?) public ResetToolbarMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RestartMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RestartMacroFunctionNode.html",
    "title": "Class RestartMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class RestartMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RestartMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode RestartMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RestartMacroFunctionNode(string?, List<Node>?, List<Node>?) public RestartMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ResultMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ResultMacroFunctionNode.html",
    "title": "Class ResultMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ResultMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ResultMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ResultMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ResultMacroFunctionNode(string?, List<Node>?, List<Node>?) public ResultMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ResumeMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ResumeMacroFunctionNode.html",
    "title": "Class ResumeMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ResumeMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ResumeMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ResumeMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ResumeMacroFunctionNode(string?, List<Node>?, List<Node>?) public ResumeMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ReturnMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ReturnMacroFunctionNode.html",
    "title": "Class ReturnMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ReturnMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ReturnMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ReturnMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ReturnMacroFunctionNode(string?, List<Node>?, List<Node>?) public ReturnMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RightBStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RightBStandardFunctionNode.html",
    "title": "Class RightBStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RightBStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RightBStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RightBStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RightBStandardFunctionNode(string?, List<Node>?, List<Node>?) public RightBStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RightBracketNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RightBracketNode.html",
    "title": "Class RightBracketNode | OpenLanguage Documentation",
    "summary": "Class RightBracketNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RightBracketNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode RightBracketNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RightBracketNode(string, List<Node>?, List<Node>?) public RightBracketNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RightStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RightStandardFunctionNode.html",
    "title": "Class RightStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RightStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RightStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RightStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RightStandardFunctionNode(string?, List<Node>?, List<Node>?) public RightStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RmPrintAreaCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RmPrintAreaCommandFunctionNode.html",
    "title": "Class RmPrintAreaCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class RmPrintAreaCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RmPrintAreaCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode RmPrintAreaCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RmPrintAreaCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public RmPrintAreaCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RomanStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RomanStandardFunctionNode.html",
    "title": "Class RomanStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RomanStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RomanStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RomanStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RomanStandardFunctionNode(string?, List<Node>?, List<Node>?) public RomanStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RoundBahtDownStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RoundBahtDownStandardFunctionNode.html",
    "title": "Class RoundBahtDownStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RoundBahtDownStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RoundBahtDownStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RoundBahtDownStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RoundBahtDownStandardFunctionNode(string?, List<Node>?, List<Node>?) public RoundBahtDownStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RoundBahtUpStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RoundBahtUpStandardFunctionNode.html",
    "title": "Class RoundBahtUpStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RoundBahtUpStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RoundBahtUpStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RoundBahtUpStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RoundBahtUpStandardFunctionNode(string?, List<Node>?, List<Node>?) public RoundBahtUpStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RoundDownStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RoundDownStandardFunctionNode.html",
    "title": "Class RoundDownStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RoundDownStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RoundDownStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RoundDownStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RoundDownStandardFunctionNode(string?, List<Node>?, List<Node>?) public RoundDownStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RoundStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RoundStandardFunctionNode.html",
    "title": "Class RoundStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RoundStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RoundStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RoundStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RoundStandardFunctionNode(string?, List<Node>?, List<Node>?) public RoundStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RoundUpStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RoundUpStandardFunctionNode.html",
    "title": "Class RoundUpStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RoundUpStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RoundUpStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RoundUpStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RoundUpStandardFunctionNode(string?, List<Node>?, List<Node>?) public RoundUpStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RouteDocumentCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RouteDocumentCommandFunctionNode.html",
    "title": "Class RouteDocumentCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class RouteDocumentCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RouteDocumentCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode RouteDocumentCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RouteDocumentCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public RouteDocumentCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RoutingSlipCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RoutingSlipCommandFunctionNode.html",
    "title": "Class RoutingSlipCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class RoutingSlipCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RoutingSlipCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode RoutingSlipCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RoutingSlipCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public RoutingSlipCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RowHeightCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RowHeightCommandFunctionNode.html",
    "title": "Class RowHeightCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class RowHeightCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RowHeightCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode RowHeightCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RowHeightCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public RowHeightCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RowNode-1.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RowNode-1.html",
    "title": "Class RowNode<N> | OpenLanguage Documentation",
    "summary": "Class RowNode<N> Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public abstract class RowNode<N> : ExpressionNode where N : INumber<N>, IBinaryInteger<N>, INumberBase<N>, IParsable<N>, IFormattable, IMinMaxValue<N> Type Parameters N Inheritance object Node ExpressionNode RowNode<N> Derived A1RowNode R1C1RowNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RowNode(N, List<Node>?, List<Node>?) public RowNode(N val, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters val N leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int RowSpecifier public N RowSpecifier { get; set; } Property Value N Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RowStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RowStandardFunctionNode.html",
    "title": "Class RowStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RowStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RowStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RowStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RowStandardFunctionNode(string?, List<Node>?, List<Node>?) public RowStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RowsStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RowsStandardFunctionNode.html",
    "title": "Class RowsStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RowsStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RowsStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RowsStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RowsStandardFunctionNode(string?, List<Node>?, List<Node>?) public RowsStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RriFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RriFutureFunctionNode.html",
    "title": "Class RriFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class RriFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RriFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode RriFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RriFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public RriFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RsqStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RsqStandardFunctionNode.html",
    "title": "Class RsqStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RsqStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RsqStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RsqStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RsqStandardFunctionNode(string?, List<Node>?, List<Node>?) public RsqStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RtdStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RtdStandardFunctionNode.html",
    "title": "Class RtdStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class RtdStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RtdStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode RtdStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RtdStandardFunctionNode(string?, List<Node>?, List<Node>?) public RtdStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.RunCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.RunCommandFunctionNode.html",
    "title": "Class RunCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class RunCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class RunCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode RunCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RunCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public RunCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveAsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveAsCommandFunctionNode.html",
    "title": "Class SaveAsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SaveAsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SaveAsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SaveAsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SaveAsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SaveAsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveCommandFunctionNode.html",
    "title": "Class SaveCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SaveCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SaveCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SaveCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SaveCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SaveCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveCopyAsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveCopyAsCommandFunctionNode.html",
    "title": "Class SaveCopyAsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SaveCopyAsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SaveCopyAsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SaveCopyAsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SaveCopyAsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SaveCopyAsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveDialogMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveDialogMacroFunctionNode.html",
    "title": "Class SaveDialogMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class SaveDialogMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SaveDialogMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode SaveDialogMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SaveDialogMacroFunctionNode(string?, List<Node>?, List<Node>?) public SaveDialogMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveNewObjectCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveNewObjectCommandFunctionNode.html",
    "title": "Class SaveNewObjectCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SaveNewObjectCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SaveNewObjectCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SaveNewObjectCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SaveNewObjectCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SaveNewObjectCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveToolbarMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveToolbarMacroFunctionNode.html",
    "title": "Class SaveToolbarMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class SaveToolbarMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SaveToolbarMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode SaveToolbarMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SaveToolbarMacroFunctionNode(string?, List<Node>?, List<Node>?) public SaveToolbarMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveWorkbookCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveWorkbookCommandFunctionNode.html",
    "title": "Class SaveWorkbookCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SaveWorkbookCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SaveWorkbookCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SaveWorkbookCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SaveWorkbookCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SaveWorkbookCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveWorkspaceCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SaveWorkspaceCommandFunctionNode.html",
    "title": "Class SaveWorkspaceCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SaveWorkspaceCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SaveWorkspaceCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SaveWorkspaceCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SaveWorkspaceCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SaveWorkspaceCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScaleCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScaleCommandFunctionNode.html",
    "title": "Class ScaleCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ScaleCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ScaleCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ScaleCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ScaleCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ScaleCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScanFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScanFutureFunctionNode.html",
    "title": "Class ScanFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ScanFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ScanFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ScanFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ScanFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ScanFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioAddCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioAddCommandFunctionNode.html",
    "title": "Class ScenarioAddCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ScenarioAddCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ScenarioAddCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ScenarioAddCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ScenarioAddCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ScenarioAddCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioCellsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioCellsCommandFunctionNode.html",
    "title": "Class ScenarioCellsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ScenarioCellsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ScenarioCellsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ScenarioCellsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ScenarioCellsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ScenarioCellsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioDeleteCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioDeleteCommandFunctionNode.html",
    "title": "Class ScenarioDeleteCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ScenarioDeleteCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ScenarioDeleteCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ScenarioDeleteCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ScenarioDeleteCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ScenarioDeleteCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioEditCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioEditCommandFunctionNode.html",
    "title": "Class ScenarioEditCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ScenarioEditCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ScenarioEditCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ScenarioEditCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ScenarioEditCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ScenarioEditCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioGetMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioGetMacroFunctionNode.html",
    "title": "Class ScenarioGetMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ScenarioGetMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ScenarioGetMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ScenarioGetMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ScenarioGetMacroFunctionNode(string?, List<Node>?, List<Node>?) public ScenarioGetMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioMergeCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioMergeCommandFunctionNode.html",
    "title": "Class ScenarioMergeCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ScenarioMergeCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ScenarioMergeCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ScenarioMergeCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ScenarioMergeCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ScenarioMergeCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioShowCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioShowCommandFunctionNode.html",
    "title": "Class ScenarioShowCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ScenarioShowCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ScenarioShowCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ScenarioShowCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ScenarioShowCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ScenarioShowCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioShowNextCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioShowNextCommandFunctionNode.html",
    "title": "Class ScenarioShowNextCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ScenarioShowNextCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ScenarioShowNextCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ScenarioShowNextCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ScenarioShowNextCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ScenarioShowNextCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioSummaryCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScenarioSummaryCommandFunctionNode.html",
    "title": "Class ScenarioSummaryCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ScenarioSummaryCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ScenarioSummaryCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ScenarioSummaryCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ScenarioSummaryCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ScenarioSummaryCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScrollbarPropertiesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ScrollbarPropertiesCommandFunctionNode.html",
    "title": "Class ScrollbarPropertiesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ScrollbarPropertiesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ScrollbarPropertiesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ScrollbarPropertiesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ScrollbarPropertiesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ScrollbarPropertiesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SearchStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SearchStandardFunctionNode.html",
    "title": "Class SearchStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SearchStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SearchStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SearchStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SearchStandardFunctionNode(string?, List<Node>?, List<Node>?) public SearchStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SearchbStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SearchbStandardFunctionNode.html",
    "title": "Class SearchbStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SearchbStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SearchbStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SearchbStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SearchbStandardFunctionNode(string?, List<Node>?, List<Node>?) public SearchbStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SecFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SecFutureFunctionNode.html",
    "title": "Class SecFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class SecFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SecFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode SecFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SecFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public SecFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SechFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SechFutureFunctionNode.html",
    "title": "Class SechFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class SechFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SechFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode SechFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SechFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public SechFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SecondStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SecondStandardFunctionNode.html",
    "title": "Class SecondStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SecondStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SecondStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SecondStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SecondStandardFunctionNode(string?, List<Node>?, List<Node>?) public SecondStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectAllCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectAllCommandFunctionNode.html",
    "title": "Class SelectAllCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SelectAllCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SelectAllCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SelectAllCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SelectAllCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SelectAllCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectChartCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectChartCommandFunctionNode.html",
    "title": "Class SelectChartCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SelectChartCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SelectChartCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SelectChartCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SelectChartCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SelectChartCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectCommandFunctionNode.html",
    "title": "Class SelectCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SelectCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SelectCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SelectCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SelectCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SelectCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectEndCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectEndCommandFunctionNode.html",
    "title": "Class SelectEndCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SelectEndCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SelectEndCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SelectEndCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SelectEndCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SelectEndCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectLastCellCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectLastCellCommandFunctionNode.html",
    "title": "Class SelectLastCellCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SelectLastCellCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SelectLastCellCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SelectLastCellCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SelectLastCellCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SelectLastCellCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectListItemCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectListItemCommandFunctionNode.html",
    "title": "Class SelectListItemCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SelectListItemCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SelectListItemCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SelectListItemCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SelectListItemCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SelectListItemCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectPlotAreaCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectPlotAreaCommandFunctionNode.html",
    "title": "Class SelectPlotAreaCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SelectPlotAreaCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SelectPlotAreaCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SelectPlotAreaCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SelectPlotAreaCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SelectPlotAreaCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectSpecialCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectSpecialCommandFunctionNode.html",
    "title": "Class SelectSpecialCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SelectSpecialCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SelectSpecialCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SelectSpecialCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SelectSpecialCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SelectSpecialCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectionMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SelectionMacroFunctionNode.html",
    "title": "Class SelectionMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class SelectionMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SelectionMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode SelectionMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SelectionMacroFunctionNode(string?, List<Node>?, List<Node>?) public SelectionMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SemicolonDelimitedNodes-2.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SemicolonDelimitedNodes-2.html",
    "title": "Class SemicolonDelimitedNodes<L, R> | OpenLanguage Documentation",
    "summary": "Class SemicolonDelimitedNodes<L, R> Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SemicolonDelimitedNodes<L, R> : CharacterDelimitedExpressionNodes<L, SemicolonNode, R> where L : ExpressionNode where R : ExpressionNode Type Parameters L R Inheritance object Node ExpressionNode CharacterDelimitedExpressionNodes<L, SemicolonNode, R> SemicolonDelimitedNodes<L, R> Inherited Members CharacterDelimitedExpressionNodes<L, SemicolonNode, R>.Left CharacterDelimitedExpressionNodes<L, SemicolonNode, R>.Delimiter CharacterDelimitedExpressionNodes<L, SemicolonNode, R>.Right CharacterDelimitedExpressionNodes<L, SemicolonNode, R>.ToRawString() CharacterDelimitedExpressionNodes<L, SemicolonNode, R>.Children<O>() CharacterDelimitedExpressionNodes<L, SemicolonNode, R>.ReplaceChild(int, Node) CharacterDelimitedExpressionNodes<L, SemicolonNode, R>.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.Precedence ExpressionNode.ToRawString() ExpressionNode.ToString() Node.Children<O>() Node.ReplaceChild(int, Node) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SemicolonDelimitedNodes(L, SemicolonNode, R, List<Node>?, List<Node>?) public SemicolonDelimitedNodes(L left, SemicolonNode delimiter, R right, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters left L delimiter SemicolonNode right R leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SemicolonNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SemicolonNode.html",
    "title": "Class SemicolonNode | OpenLanguage Documentation",
    "summary": "Class SemicolonNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SemicolonNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode SemicolonNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SemicolonNode(string, List<Node>?, List<Node>?) public SemicolonNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SendKeysCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SendKeysCommandFunctionNode.html",
    "title": "Class SendKeysCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SendKeysCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SendKeysCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SendKeysCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SendKeysCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SendKeysCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SendMailCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SendMailCommandFunctionNode.html",
    "title": "Class SendMailCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SendMailCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SendMailCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SendMailCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SendMailCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SendMailCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SendToBackCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SendToBackCommandFunctionNode.html",
    "title": "Class SendToBackCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SendToBackCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SendToBackCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SendToBackCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SendToBackCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SendToBackCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SequenceFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SequenceFutureFunctionNode.html",
    "title": "Class SequenceFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class SequenceFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SequenceFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode SequenceFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SequenceFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public SequenceFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SeriesAxesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SeriesAxesCommandFunctionNode.html",
    "title": "Class SeriesAxesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SeriesAxesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SeriesAxesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SeriesAxesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SeriesAxesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SeriesAxesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SeriesOrderCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SeriesOrderCommandFunctionNode.html",
    "title": "Class SeriesOrderCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SeriesOrderCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SeriesOrderCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SeriesOrderCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SeriesOrderCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SeriesOrderCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SeriesStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SeriesStandardFunctionNode.html",
    "title": "Class SeriesStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SeriesStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SeriesStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SeriesStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SeriesStandardFunctionNode(string?, List<Node>?, List<Node>?) public SeriesStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SeriesXCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SeriesXCommandFunctionNode.html",
    "title": "Class SeriesXCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SeriesXCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SeriesXCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SeriesXCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SeriesXCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SeriesXCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SeriesYCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SeriesYCommandFunctionNode.html",
    "title": "Class SeriesYCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SeriesYCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SeriesYCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SeriesYCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SeriesYCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SeriesYCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SeriessumStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SeriessumStandardFunctionNode.html",
    "title": "Class SeriessumStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SeriessumStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SeriessumStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SeriessumStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SeriessumStandardFunctionNode(string?, List<Node>?, List<Node>?) public SeriessumStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetControlValueCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetControlValueCommandFunctionNode.html",
    "title": "Class SetControlValueCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SetControlValueCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SetControlValueCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SetControlValueCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetControlValueCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SetControlValueCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetCriteriaCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetCriteriaCommandFunctionNode.html",
    "title": "Class SetCriteriaCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SetCriteriaCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SetCriteriaCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SetCriteriaCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetCriteriaCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SetCriteriaCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetDatabaseCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetDatabaseCommandFunctionNode.html",
    "title": "Class SetDatabaseCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SetDatabaseCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SetDatabaseCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SetDatabaseCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetDatabaseCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SetDatabaseCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetDialogDefaultCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetDialogDefaultCommandFunctionNode.html",
    "title": "Class SetDialogDefaultCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SetDialogDefaultCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SetDialogDefaultCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SetDialogDefaultCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetDialogDefaultCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SetDialogDefaultCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetDialogFocusCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetDialogFocusCommandFunctionNode.html",
    "title": "Class SetDialogFocusCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SetDialogFocusCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SetDialogFocusCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SetDialogFocusCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetDialogFocusCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SetDialogFocusCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetExtractCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetExtractCommandFunctionNode.html",
    "title": "Class SetExtractCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SetExtractCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SetExtractCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SetExtractCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetExtractCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SetExtractCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetListItemCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetListItemCommandFunctionNode.html",
    "title": "Class SetListItemCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SetListItemCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SetListItemCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SetListItemCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetListItemCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SetListItemCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetNameMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetNameMacroFunctionNode.html",
    "title": "Class SetNameMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class SetNameMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SetNameMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode SetNameMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetNameMacroFunctionNode(string?, List<Node>?, List<Node>?) public SetNameMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetPageBreakCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetPageBreakCommandFunctionNode.html",
    "title": "Class SetPageBreakCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SetPageBreakCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SetPageBreakCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SetPageBreakCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetPageBreakCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SetPageBreakCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetPreferredCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetPreferredCommandFunctionNode.html",
    "title": "Class SetPreferredCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SetPreferredCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SetPreferredCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SetPreferredCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetPreferredCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SetPreferredCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetPrintAreaCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetPrintAreaCommandFunctionNode.html",
    "title": "Class SetPrintAreaCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SetPrintAreaCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SetPrintAreaCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SetPrintAreaCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetPrintAreaCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SetPrintAreaCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetPrintTitlesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetPrintTitlesCommandFunctionNode.html",
    "title": "Class SetPrintTitlesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SetPrintTitlesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SetPrintTitlesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SetPrintTitlesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetPrintTitlesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SetPrintTitlesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetUpdateStatusCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetUpdateStatusCommandFunctionNode.html",
    "title": "Class SetUpdateStatusCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SetUpdateStatusCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SetUpdateStatusCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SetUpdateStatusCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetUpdateStatusCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SetUpdateStatusCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetValueMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SetValueMacroFunctionNode.html",
    "title": "Class SetValueMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class SetValueMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SetValueMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode SetValueMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetValueMacroFunctionNode(string?, List<Node>?, List<Node>?) public SetValueMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShareCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShareCommandFunctionNode.html",
    "title": "Class ShareCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ShareCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ShareCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ShareCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ShareCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ShareCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShareNameCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShareNameCommandFunctionNode.html",
    "title": "Class ShareNameCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ShareNameCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ShareNameCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ShareNameCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ShareNameCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ShareNameCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SheetBackgroundCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SheetBackgroundCommandFunctionNode.html",
    "title": "Class SheetBackgroundCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SheetBackgroundCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SheetBackgroundCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SheetBackgroundCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SheetBackgroundCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SheetBackgroundCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SheetFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SheetFutureFunctionNode.html",
    "title": "Class SheetFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class SheetFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SheetFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode SheetFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SheetFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public SheetFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SheetNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SheetNode.html",
    "title": "Class SheetNode | OpenLanguage Documentation",
    "summary": "Class SheetNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll Represents a single sheet name, which may be quoted or unquoted, and may have a workbook index. public class SheetNode : ExpressionNode Inheritance object Node ExpressionNode SheetNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SheetNode(ExpressionNode?, ExpressionNode?, List<Node>?, List<Node>?) public SheetNode(ExpressionNode? workbookIndex = null, ExpressionNode? sheetName = null, List<Node>? leadingWs = null, List<Node>? trailingWs = null) Parameters workbookIndex ExpressionNode sheetName ExpressionNode leadingWs List<Node> trailingWs List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int SheetName public ExpressionNode? SheetName { get; set; } Property Value ExpressionNode WorkbookReference public ExpressionNode? WorkbookReference { get; set; } Property Value ExpressionNode Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SheetRangeNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SheetRangeNode.html",
    "title": "Class SheetRangeNode | OpenLanguage Documentation",
    "summary": "Class SheetRangeNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll Represents a range of sheets, e.g., \"Sheet1:Sheet3\". public class SheetRangeNode : ExpressionNode Inheritance object Node ExpressionNode SheetRangeNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SheetRangeNode(ExpressionNode, ColonNode, ExpressionNode, List<Node>?, List<Node>?) public SheetRangeNode(ExpressionNode startSheet, ColonNode colon, ExpressionNode endSheet, List<Node>? leadingWs = null, List<Node>? trailingWs = null) Parameters startSheet ExpressionNode colon ColonNode endSheet ExpressionNode leadingWs List<Node> trailingWs List<Node> Properties ColonNode public ColonNode ColonNode { get; set; } Property Value ColonNode EndSheetName public ExpressionNode EndSheetName { get; set; } Property Value ExpressionNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int StartSheetName public ExpressionNode StartSheetName { get; set; } Property Value ExpressionNode Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SheetReferenceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SheetReferenceNode.html",
    "title": "Class SheetReferenceNode | OpenLanguage Documentation",
    "summary": "Class SheetReferenceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll Represents a reference to a single sheet, e.g., \"Sheet1!A1\". public class SheetReferenceNode : ExpressionNode Inheritance object Node ExpressionNode SheetReferenceNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SheetReferenceNode(ExpressionNode, BangReferenceNode, List<Node>?, List<Node>?) public SheetReferenceNode(ExpressionNode sheet, BangReferenceNode bangRef, List<Node>? leadingWs = null, List<Node>? trailingWs = null) Parameters sheet ExpressionNode bangRef BangReferenceNode leadingWs List<Node> trailingWs List<Node> Properties BangReference public BangReferenceNode BangReference { get; set; } Property Value BangReferenceNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Sheet public ExpressionNode Sheet { get; set; } Property Value ExpressionNode Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SheetsFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SheetsFutureFunctionNode.html",
    "title": "Class SheetsFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class SheetsFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SheetsFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode SheetsFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SheetsFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public SheetsFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShortMenusCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShortMenusCommandFunctionNode.html",
    "title": "Class ShortMenusCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ShortMenusCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ShortMenusCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ShortMenusCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ShortMenusCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ShortMenusCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowActiveCellCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowActiveCellCommandFunctionNode.html",
    "title": "Class ShowActiveCellCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ShowActiveCellCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ShowActiveCellCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ShowActiveCellCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ShowActiveCellCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ShowActiveCellCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowBarMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowBarMacroFunctionNode.html",
    "title": "Class ShowBarMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ShowBarMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ShowBarMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ShowBarMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ShowBarMacroFunctionNode(string?, List<Node>?, List<Node>?) public ShowBarMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowClipboardCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowClipboardCommandFunctionNode.html",
    "title": "Class ShowClipboardCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ShowClipboardCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ShowClipboardCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ShowClipboardCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ShowClipboardCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ShowClipboardCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowDetailCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowDetailCommandFunctionNode.html",
    "title": "Class ShowDetailCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ShowDetailCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ShowDetailCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ShowDetailCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ShowDetailCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ShowDetailCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowDialogCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowDialogCommandFunctionNode.html",
    "title": "Class ShowDialogCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ShowDialogCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ShowDialogCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ShowDialogCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ShowDialogCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ShowDialogCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowInfoCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowInfoCommandFunctionNode.html",
    "title": "Class ShowInfoCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ShowInfoCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ShowInfoCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ShowInfoCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ShowInfoCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ShowInfoCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowLevelsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowLevelsCommandFunctionNode.html",
    "title": "Class ShowLevelsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ShowLevelsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ShowLevelsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ShowLevelsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ShowLevelsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ShowLevelsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowToolbarCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ShowToolbarCommandFunctionNode.html",
    "title": "Class ShowToolbarCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ShowToolbarCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ShowToolbarCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ShowToolbarCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ShowToolbarCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ShowToolbarCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SignStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SignStandardFunctionNode.html",
    "title": "Class SignStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SignStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SignStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SignStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SignStandardFunctionNode(string?, List<Node>?, List<Node>?) public SignStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SinStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SinStandardFunctionNode.html",
    "title": "Class SinStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SinStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SinStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SinStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SinStandardFunctionNode(string?, List<Node>?, List<Node>?) public SinStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SinhStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SinhStandardFunctionNode.html",
    "title": "Class SinhStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SinhStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SinhStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SinhStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SinhStandardFunctionNode(string?, List<Node>?, List<Node>?) public SinhStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SkewPFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SkewPFutureFunctionNode.html",
    "title": "Class SkewPFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class SkewPFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SkewPFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode SkewPFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SkewPFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public SkewPFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SkewStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SkewStandardFunctionNode.html",
    "title": "Class SkewStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SkewStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SkewStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SkewStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SkewStandardFunctionNode(string?, List<Node>?, List<Node>?) public SkewStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SlashLiteralNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SlashLiteralNode.html",
    "title": "Class SlashLiteralNode | OpenLanguage Documentation",
    "summary": "Class SlashLiteralNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SlashLiteralNode : CharacterLiteralNode Inheritance object Node ExpressionNode CharacterLiteralNode SlashLiteralNode Inherited Members CharacterLiteralNode.Raw CharacterLiteralNode.ToRawString() CharacterLiteralNode.Children<O>() CharacterLiteralNode.ReplaceChild(int, Node) CharacterLiteralNode.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SlashLiteralNode(string, List<Node>?, List<Node>?) public SlashLiteralNode(string rawStr, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawStr string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SlnStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SlnStandardFunctionNode.html",
    "title": "Class SlnStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SlnStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SlnStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SlnStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SlnStandardFunctionNode(string?, List<Node>?, List<Node>?) public SlnStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SlopeStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SlopeStandardFunctionNode.html",
    "title": "Class SlopeStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SlopeStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SlopeStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SlopeStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SlopeStandardFunctionNode(string?, List<Node>?, List<Node>?) public SlopeStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SmallStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SmallStandardFunctionNode.html",
    "title": "Class SmallStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SmallStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SmallStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SmallStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SmallStandardFunctionNode(string?, List<Node>?, List<Node>?) public SmallStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SortByFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SortByFutureFunctionNode.html",
    "title": "Class SortByFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class SortByFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SortByFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode SortByFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SortByFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public SortByFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SortSpecialCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SortSpecialCommandFunctionNode.html",
    "title": "Class SortSpecialCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SortSpecialCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SortSpecialCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SortSpecialCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SortSpecialCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SortSpecialCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SortWorksheetFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SortWorksheetFunctionNode.html",
    "title": "Class SortWorksheetFunctionNode | OpenLanguage Documentation",
    "summary": "Class SortWorksheetFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SortWorksheetFunctionNode : WorksheetFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode WorksheetFunctionNode SortWorksheetFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SortWorksheetFunctionNode(string?, XlfnFunctionPrefixNode?, XlwsFunctionPrefixNode?, List<Node>?, List<Node>?) public SortWorksheetFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? xlfnPrefix = null, XlwsFunctionPrefixNode? xlwsPrefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string xlfnPrefix XlfnFunctionPrefixNode xlwsPrefix XlwsFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SoundNoteCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SoundNoteCommandFunctionNode.html",
    "title": "Class SoundNoteCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SoundNoteCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SoundNoteCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SoundNoteCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SoundNoteCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SoundNoteCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SoundPlayCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SoundPlayCommandFunctionNode.html",
    "title": "Class SoundPlayCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SoundPlayCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SoundPlayCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SoundPlayCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SoundPlayCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SoundPlayCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SpellingCheckMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SpellingCheckMacroFunctionNode.html",
    "title": "Class SpellingCheckMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class SpellingCheckMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SpellingCheckMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode SpellingCheckMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SpellingCheckMacroFunctionNode(string?, List<Node>?, List<Node>?) public SpellingCheckMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SpellingCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SpellingCommandFunctionNode.html",
    "title": "Class SpellingCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SpellingCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SpellingCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SpellingCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SpellingCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SpellingCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SpillErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SpillErrorNode.html",
    "title": "Class SpillErrorNode | OpenLanguage Documentation",
    "summary": "Class SpillErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SpillErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode SpillErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SpillErrorNode(string, List<Node>?, List<Node>?) public SpillErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SplitCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SplitCommandFunctionNode.html",
    "title": "Class SplitCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SplitCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SplitCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SplitCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SplitCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SplitCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SqrtStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SqrtStandardFunctionNode.html",
    "title": "Class SqrtStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SqrtStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SqrtStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SqrtStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SqrtStandardFunctionNode(string?, List<Node>?, List<Node>?) public SqrtStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SqrtpiStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SqrtpiStandardFunctionNode.html",
    "title": "Class SqrtpiStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SqrtpiStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SqrtpiStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SqrtpiStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SqrtpiStandardFunctionNode(string?, List<Node>?, List<Node>?) public SqrtpiStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StDevAStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StDevAStandardFunctionNode.html",
    "title": "Class StDevAStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class StDevAStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StDevAStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode StDevAStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StDevAStandardFunctionNode(string?, List<Node>?, List<Node>?) public StDevAStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StDevPFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StDevPFutureFunctionNode.html",
    "title": "Class StDevPFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class StDevPFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StDevPFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode StDevPFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StDevPFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public StDevPFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StDevPStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StDevPStandardFunctionNode.html",
    "title": "Class StDevPStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class StDevPStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StDevPStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode StDevPStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StDevPStandardFunctionNode(string?, List<Node>?, List<Node>?) public StDevPStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StDevPaStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StDevPaStandardFunctionNode.html",
    "title": "Class StDevPaStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class StDevPaStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StDevPaStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode StDevPaStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StDevPaStandardFunctionNode(string?, List<Node>?, List<Node>?) public StDevPaStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StDevSFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StDevSFutureFunctionNode.html",
    "title": "Class StDevSFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class StDevSFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StDevSFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode StDevSFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StDevSFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public StDevSFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StDevStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StDevStandardFunctionNode.html",
    "title": "Class StDevStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class StDevStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StDevStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode StDevStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StDevStandardFunctionNode(string?, List<Node>?, List<Node>?) public StDevStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StandardFontCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StandardFontCommandFunctionNode.html",
    "title": "Class StandardFontCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class StandardFontCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StandardFontCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode StandardFontCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StandardFontCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public StandardFontCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StandardFunctionNode.html",
    "title": "Class StandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class StandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StandardFunctionNode : BuiltInFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode Derived AbsStandardFunctionNode AccrIntMStandardFunctionNode AccrIntStandardFunctionNode AcosStandardFunctionNode AcoshStandardFunctionNode AddressStandardFunctionNode AmorDegrCStandardFunctionNode AmorLinCStandardFunctionNode AndStandardFunctionNode AreasStandardFunctionNode AscStandardFunctionNode AsinStandardFunctionNode AsinhStandardFunctionNode AtanStandardFunctionNode AtanToStandardFunctionNode AtanhStandardFunctionNode AveDevStandardFunctionNode AverageAStandardFunctionNode AverageIfStandardFunctionNode AverageIfsStandardFunctionNode AverageStandardFunctionNode BahtTextStandardFunctionNode BesseliStandardFunctionNode BesseljStandardFunctionNode BesselkStandardFunctionNode BesselyStandardFunctionNode BetaDistStandardFunctionNode BetaInvStandardFunctionNode BinToDecStandardFunctionNode BinToHexStandardFunctionNode BinToOctStandardFunctionNode BinomDistStandardFunctionNode CeilingStandardFunctionNode CellStandardFunctionNode CharStandardFunctionNode ChiDistStandardFunctionNode ChiInvStandardFunctionNode ChiTestStandardFunctionNode ChooseStandardFunctionNode CleanStandardFunctionNode CodeStandardFunctionNode ColumnStandardFunctionNode ColumnsStandardFunctionNode CombinStandardFunctionNode ComplexStandardFunctionNode ConcatStandardFunctionNode ConcatenateStandardFunctionNode ConfidenceStandardFunctionNode ConvertStandardFunctionNode CorrelStandardFunctionNode CosStandardFunctionNode CoshStandardFunctionNode CountAStandardFunctionNode CountBlankStandardFunctionNode CountIfStandardFunctionNode CountIfsStandardFunctionNode CountStandardFunctionNode CoupDayBsStandardFunctionNode CoupDaysNcStandardFunctionNode CoupDaysStandardFunctionNode CoupNcdStandardFunctionNode CoupNumStandardFunctionNode CoupPcdStandardFunctionNode CovarStandardFunctionNode CritBinomStandardFunctionNode CubeKpimemberStandardFunctionNode CubeMemberStandardFunctionNode CubeMemberpropertyStandardFunctionNode CubeRankedmemberStandardFunctionNode CubeSetStandardFunctionNode CubeSetcountStandardFunctionNode CubeValueStandardFunctionNode CumIpmtStandardFunctionNode CumPrIncStandardFunctionNode DAverageStandardFunctionNode DBCSStandardFunctionNode DBStandardFunctionNode DCountAStandardFunctionNode DCountStandardFunctionNode DDBStandardFunctionNode DGetStandardFunctionNode DMaxStandardFunctionNode DMinStandardFunctionNode DProductStandardFunctionNode DStdDevPStandardFunctionNode DStdDevStandardFunctionNode DSumStandardFunctionNode DVarPStandardFunctionNode DVarStandardFunctionNode DateStandardFunctionNode DateStringStandardFunctionNode DateValueStandardFunctionNode DatedIfStandardFunctionNode DayStandardFunctionNode Days360StandardFunctionNode DecToBinStandardFunctionNode DecToHexStandardFunctionNode DecToOctStandardFunctionNode DegreesStandardFunctionNode DeltaStandardFunctionNode DevSqStandardFunctionNode DiscStandardFunctionNode DollarDeStandardFunctionNode DollarFrStandardFunctionNode DollarStandardFunctionNode DurationStandardFunctionNode EDateStandardFunctionNode EOMonthStandardFunctionNode EffectStandardFunctionNode ErfCStandardFunctionNode ErfStandardFunctionNode ErrorTypeStandardFunctionNode EvenStandardFunctionNode ExactStandardFunctionNode ExpStandardFunctionNode ExponDistStandardFunctionNode FDistStandardFunctionNode FInvStandardFunctionNode FTestStandardFunctionNode FactDoubleStandardFunctionNode FactStandardFunctionNode FalseStandardFunctionNode FindBStandardFunctionNode FindStandardFunctionNode FisherInvStandardFunctionNode FisherStandardFunctionNode FixedStandardFunctionNode FloorStandardFunctionNode ForecastStandardFunctionNode FrequencyStandardFunctionNode FvScheduleStandardFunctionNode FvStandardFunctionNode GammaDistStandardFunctionNode GammaInvStandardFunctionNode GammaLnStandardFunctionNode GcdStandardFunctionNode GeStepStandardFunctionNode GeoMeanStandardFunctionNode GetPivotDataStandardFunctionNode GrowthStandardFunctionNode HLookupStandardFunctionNode HarMeanStandardFunctionNode HexToBinStandardFunctionNode HexToDecStandardFunctionNode HexToOctStandardFunctionNode HourStandardFunctionNode HypGeomDistStandardFunctionNode HyperlinkStandardFunctionNode IfErrorStandardFunctionNode IfStandardFunctionNode IfsStandardFunctionNode ImAbsStandardFunctionNode ImAginaryStandardFunctionNode ImArgumentStandardFunctionNode ImConjugateStandardFunctionNode ImCosStandardFunctionNode ImDivStandardFunctionNode ImExpStandardFunctionNode ImLnStandardFunctionNode ImLog10StandardFunctionNode ImLogToStandardFunctionNode ImPowerStandardFunctionNode ImProductStandardFunctionNode ImRealStandardFunctionNode ImSinStandardFunctionNode ImSqrtStandardFunctionNode ImSubStandardFunctionNode ImSumStandardFunctionNode IndexStandardFunctionNode IndirectStandardFunctionNode InfoStandardFunctionNode IntStandardFunctionNode InterceptStandardFunctionNode IntrateStandardFunctionNode IpmtStandardFunctionNode IrrStandardFunctionNode IsBlankStandardFunctionNode IsErrStandardFunctionNode IsErrorStandardFunctionNode IsEvenStandardFunctionNode IsLogicalStandardFunctionNode IsNaStandardFunctionNode IsNontextStandardFunctionNode IsNumberStandardFunctionNode IsOddStandardFunctionNode IsPmtStandardFunctionNode IsRefStandardFunctionNode IsTextStandardFunctionNode IsThaiDigitStandardFunctionNode KurtStandardFunctionNode LargeStandardFunctionNode LcmStandardFunctionNode LeftStandardFunctionNode LeftbStandardFunctionNode LenStandardFunctionNode LenbStandardFunctionNode LinestStandardFunctionNode LnStandardFunctionNode Log10StandardFunctionNode LogInvStandardFunctionNode LogNormDistStandardFunctionNode LogStandardFunctionNode LogestStandardFunctionNode LookupStandardFunctionNode LowerStandardFunctionNode MatchStandardFunctionNode MaxStandardFunctionNode MaxaStandardFunctionNode MaxifsStandardFunctionNode MdetermStandardFunctionNode MdurationStandardFunctionNode MedianStandardFunctionNode MidStandardFunctionNode MidbStandardFunctionNode MinStandardFunctionNode MinaStandardFunctionNode MinifsStandardFunctionNode MinuteStandardFunctionNode MinverseStandardFunctionNode MirrStandardFunctionNode MmultStandardFunctionNode ModStandardFunctionNode ModeStandardFunctionNode MonthStandardFunctionNode MroundStandardFunctionNode MultinomialStandardFunctionNode NStandardFunctionNode NaStandardFunctionNode NegBinomDistStandardFunctionNode NetworkDaysStandardFunctionNode NominalStandardFunctionNode NormDistStandardFunctionNode NormInvStandardFunctionNode NormsDistStandardFunctionNode NormsInvStandardFunctionNode NotStandardFunctionNode NowStandardFunctionNode NperStandardFunctionNode NpvStandardFunctionNode NumberStringStandardFunctionNode OctToBinStandardFunctionNode OctToDecStandardFunctionNode OctToHexStandardFunctionNode OddFPriceStandardFunctionNode OddFYieldStandardFunctionNode OddLPriceStandardFunctionNode OddLYieldStandardFunctionNode OddStandardFunctionNode OffsetStandardFunctionNode OrStandardFunctionNode PearsonStandardFunctionNode PercentRankStandardFunctionNode PercentileStandardFunctionNode PermutStandardFunctionNode PhoneticStandardFunctionNode PiStandardFunctionNode PmtStandardFunctionNode PoissonStandardFunctionNode PowerStandardFunctionNode PpmtStandardFunctionNode PriceStandardFunctionNode PricediscStandardFunctionNode PricematStandardFunctionNode ProbStandardFunctionNode ProductStandardFunctionNode ProperStandardFunctionNode PvStandardFunctionNode QuartileStandardFunctionNode QuotientStandardFunctionNode RadiansStandardFunctionNode RandStandardFunctionNode RandbetweenStandardFunctionNode RankStandardFunctionNode RateStandardFunctionNode ReceivedStandardFunctionNode ReplaceStandardFunctionNode ReplacebStandardFunctionNode ReptStandardFunctionNode RightBStandardFunctionNode RightStandardFunctionNode RomanStandardFunctionNode RoundBahtDownStandardFunctionNode RoundBahtUpStandardFunctionNode RoundDownStandardFunctionNode RoundStandardFunctionNode RoundUpStandardFunctionNode RowStandardFunctionNode RowsStandardFunctionNode RsqStandardFunctionNode RtdStandardFunctionNode SearchStandardFunctionNode SearchbStandardFunctionNode SecondStandardFunctionNode SeriesStandardFunctionNode SeriessumStandardFunctionNode SignStandardFunctionNode SinStandardFunctionNode SinhStandardFunctionNode SkewStandardFunctionNode SlnStandardFunctionNode SlopeStandardFunctionNode SmallStandardFunctionNode SqrtStandardFunctionNode SqrtpiStandardFunctionNode StDevAStandardFunctionNode StDevPStandardFunctionNode StDevPaStandardFunctionNode StDevStandardFunctionNode StandardizeStandardFunctionNode SteyxStandardFunctionNode SubstituteStandardFunctionNode SubtotalStandardFunctionNode SumIfStandardFunctionNode SumIfsStandardFunctionNode SumProductStandardFunctionNode SumSqStandardFunctionNode SumStandardFunctionNode SumXMyToStandardFunctionNode SumXToMyToStandardFunctionNode SumXToPyToStandardFunctionNode SwitchStandardFunctionNode SydStandardFunctionNode TBillEqStandardFunctionNode TBillPriceStandardFunctionNode TBillYieldStandardFunctionNode TDistStandardFunctionNode TInvStandardFunctionNode TStandardFunctionNode TTestStandardFunctionNode TanStandardFunctionNode TanhStandardFunctionNode TextJoinStandardFunctionNode TextStandardFunctionNode ThaiDayOfWeekStandardFunctionNode ThaiDigitStandardFunctionNode ThaiMonthOfYearStandardFunctionNode ThaiNumSoundStandardFunctionNode ThaiNumStringStandardFunctionNode ThaiStringLengthStandardFunctionNode ThaiYearStandardFunctionNode TimeStandardFunctionNode TimeValueStandardFunctionNode TodayStandardFunctionNode TransposeStandardFunctionNode TrendStandardFunctionNode TrimMeanStandardFunctionNode TrimStandardFunctionNode TrueStandardFunctionNode TruncStandardFunctionNode TypeStandardFunctionNode UpperStandardFunctionNode UsDollarStandardFunctionNode VLookupStandardFunctionNode ValueStandardFunctionNode VarAStandardFunctionNode VarPStandardFunctionNode VarPaStandardFunctionNode VarStandardFunctionNode VdbStandardFunctionNode WeekNumStandardFunctionNode WeekdayStandardFunctionNode WeibullStandardFunctionNode WorkdayStandardFunctionNode XirrStandardFunctionNode XnpvStandardFunctionNode YearFracStandardFunctionNode YearStandardFunctionNode YieldDiscStandardFunctionNode YieldMatStandardFunctionNode YieldStandardFunctionNode ZTestStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StandardFunctionNode(ExpressionNode, List<Node>?, List<Node>?) public StandardFunctionNode(ExpressionNode name, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StandardWidthCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StandardWidthCommandFunctionNode.html",
    "title": "Class StandardWidthCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class StandardWidthCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StandardWidthCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode StandardWidthCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StandardWidthCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public StandardWidthCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StandardizeStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StandardizeStandardFunctionNode.html",
    "title": "Class StandardizeStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class StandardizeStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StandardizeStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode StandardizeStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StandardizeStandardFunctionNode(string?, List<Node>?, List<Node>?) public StandardizeStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StepMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StepMacroFunctionNode.html",
    "title": "Class StepMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class StepMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StepMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode StepMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StepMacroFunctionNode(string?, List<Node>?, List<Node>?) public StepMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SteyxStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SteyxStandardFunctionNode.html",
    "title": "Class SteyxStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SteyxStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SteyxStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SteyxStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SteyxStandardFunctionNode(string?, List<Node>?, List<Node>?) public SteyxStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StockHistoryFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StockHistoryFutureFunctionNode.html",
    "title": "Class StockHistoryFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class StockHistoryFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StockHistoryFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode StockHistoryFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StockHistoryFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public StockHistoryFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StringNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StringNode.html",
    "title": "Class StringNode | OpenLanguage Documentation",
    "summary": "Class StringNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StringNode : ExpressionNode Inheritance object Node ExpressionNode StringNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StringNode(string, List<Node>?, List<Node>?) public StringNode(string value, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters value string leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Value public string Value { get; set; } Property Value string Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureAbsoluteColumn.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureAbsoluteColumn.html",
    "title": "Class StructureAbsoluteColumn | OpenLanguage Documentation",
    "summary": "Class StructureAbsoluteColumn Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructureAbsoluteColumn : ExpressionNode Inheritance object Node ExpressionNode StructureAbsoluteColumn Derived StructureThisRowByPrefixReferenceNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StructureAbsoluteColumn(ExpressionNode) public StructureAbsoluteColumn(ExpressionNode name) Parameters name ExpressionNode Properties Name public ExpressionNode Name { get; set; } Property Value ExpressionNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureAllReferenceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureAllReferenceNode.html",
    "title": "Class StructureAllReferenceNode | OpenLanguage Documentation",
    "summary": "Class StructureAllReferenceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructureAllReferenceNode : StructuredReferenceKeywordNode Inheritance object Node ExpressionNode StructuredReferenceKeywordNode StructureAllReferenceNode Inherited Members StructuredReferenceKeywordNode.Precedence StructuredReferenceKeywordNode.Children<O>() StructuredReferenceKeywordNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureAllRowsReferenceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureAllRowsReferenceNode.html",
    "title": "Class StructureAllRowsReferenceNode | OpenLanguage Documentation",
    "summary": "Class StructureAllRowsReferenceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructureAllRowsReferenceNode : ExpressionNode Inheritance object Node ExpressionNode StructureAllRowsReferenceNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StructureAllRowsReferenceNode(ExpressionNode) public StructureAllRowsReferenceNode(ExpressionNode column) Parameters column ExpressionNode Properties Column public ExpressionNode Column { get; set; } Property Value ExpressionNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureColumn.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureColumn.html",
    "title": "Class StructureColumn | OpenLanguage Documentation",
    "summary": "Class StructureColumn Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructureColumn : ExpressionNode Inheritance object Node ExpressionNode StructureColumn Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StructureColumn(LeftBracketNode, ExpressionNode, RightBracketNode, List<Node>?, List<Node>?) public StructureColumn(LeftBracketNode openBracket, ExpressionNode name, RightBracketNode closeBracket, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters openBracket LeftBracketNode name ExpressionNode closeBracket RightBracketNode leadingWhitespace List<Node> trailingWhitespace List<Node> Properties CloseBracket public RightBracketNode CloseBracket { get; set; } Property Value RightBracketNode Name public ExpressionNode Name { get; set; } Property Value ExpressionNode OpenBracket public LeftBracketNode OpenBracket { get; set; } Property Value LeftBracketNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureColumnRange.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureColumnRange.html",
    "title": "Class StructureColumnRange | OpenLanguage Documentation",
    "summary": "Class StructureColumnRange Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructureColumnRange : ExpressionNode Inheritance object Node ExpressionNode StructureColumnRange Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StructureColumnRange(ExpressionNode, ExpressionNode) public StructureColumnRange(ExpressionNode start, ExpressionNode end) Parameters start ExpressionNode end ExpressionNode Properties End public ExpressionNode End { get; set; } Property Value ExpressionNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Start public ExpressionNode Start { get; set; } Property Value ExpressionNode Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureDataReferenceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureDataReferenceNode.html",
    "title": "Class StructureDataReferenceNode | OpenLanguage Documentation",
    "summary": "Class StructureDataReferenceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructureDataReferenceNode : StructuredReferenceKeywordNode Inheritance object Node ExpressionNode StructuredReferenceKeywordNode StructureDataReferenceNode Inherited Members StructuredReferenceKeywordNode.Precedence StructuredReferenceKeywordNode.Children<O>() StructuredReferenceKeywordNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureDataTotalsReferenceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureDataTotalsReferenceNode.html",
    "title": "Class StructureDataTotalsReferenceNode | OpenLanguage Documentation",
    "summary": "Class StructureDataTotalsReferenceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructureDataTotalsReferenceNode : ExpressionNode Inheritance object Node ExpressionNode StructureDataTotalsReferenceNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StructureDataTotalsReferenceNode(StructureDataReferenceNode, StructureTotalsReferenceNode) public StructureDataTotalsReferenceNode(StructureDataReferenceNode data, StructureTotalsReferenceNode totals) Parameters data StructureDataReferenceNode totals StructureTotalsReferenceNode Properties Data public StructureDataReferenceNode Data { get; set; } Property Value StructureDataReferenceNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Totals public StructureTotalsReferenceNode Totals { get; set; } Property Value StructureTotalsReferenceNode Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureHeadersDataReferenceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureHeadersDataReferenceNode.html",
    "title": "Class StructureHeadersDataReferenceNode | OpenLanguage Documentation",
    "summary": "Class StructureHeadersDataReferenceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructureHeadersDataReferenceNode : ExpressionNode Inheritance object Node ExpressionNode StructureHeadersDataReferenceNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StructureHeadersDataReferenceNode(StructureHeadersReferenceNode, StructureDataReferenceNode) public StructureHeadersDataReferenceNode(StructureHeadersReferenceNode headers, StructureDataReferenceNode data) Parameters headers StructureHeadersReferenceNode data StructureDataReferenceNode Properties Data public StructureDataReferenceNode Data { get; set; } Property Value StructureDataReferenceNode Headers public StructureHeadersReferenceNode Headers { get; set; } Property Value StructureHeadersReferenceNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureHeadersReferenceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureHeadersReferenceNode.html",
    "title": "Class StructureHeadersReferenceNode | OpenLanguage Documentation",
    "summary": "Class StructureHeadersReferenceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructureHeadersReferenceNode : StructuredReferenceKeywordNode Inheritance object Node ExpressionNode StructuredReferenceKeywordNode StructureHeadersReferenceNode Inherited Members StructuredReferenceKeywordNode.Precedence StructuredReferenceKeywordNode.Children<O>() StructuredReferenceKeywordNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureThisRowByPrefixReferenceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureThisRowByPrefixReferenceNode.html",
    "title": "Class StructureThisRowByPrefixReferenceNode | OpenLanguage Documentation",
    "summary": "Class StructureThisRowByPrefixReferenceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructureThisRowByPrefixReferenceNode : StructureAbsoluteColumn Inheritance object Node ExpressionNode StructureAbsoluteColumn StructureThisRowByPrefixReferenceNode Inherited Members StructureAbsoluteColumn.Name StructureAbsoluteColumn.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StructureThisRowByPrefixReferenceNode(AtSymbolLiteralNode, ExpressionNode) public StructureThisRowByPrefixReferenceNode(AtSymbolLiteralNode atSymbol, ExpressionNode name) Parameters atSymbol AtSymbolLiteralNode name ExpressionNode Properties AtSymbol public AtSymbolLiteralNode AtSymbol { get; set; } Property Value AtSymbolLiteralNode Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureThisRowColumnReferenceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureThisRowColumnReferenceNode.html",
    "title": "Class StructureThisRowColumnReferenceNode | OpenLanguage Documentation",
    "summary": "Class StructureThisRowColumnReferenceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructureThisRowColumnReferenceNode : ExpressionNode Inheritance object Node ExpressionNode StructureThisRowColumnReferenceNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StructureThisRowColumnReferenceNode(StructureThisRowReferenceNode, ExpressionNode) public StructureThisRowColumnReferenceNode(StructureThisRowReferenceNode thisRow, ExpressionNode column) Parameters thisRow StructureThisRowReferenceNode column ExpressionNode Properties Column public ExpressionNode Column { get; set; } Property Value ExpressionNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int ThisRow public StructureThisRowReferenceNode ThisRow { get; set; } Property Value StructureThisRowReferenceNode Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureThisRowReferenceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureThisRowReferenceNode.html",
    "title": "Class StructureThisRowReferenceNode | OpenLanguage Documentation",
    "summary": "Class StructureThisRowReferenceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructureThisRowReferenceNode : StructuredReferenceKeywordNode Inheritance object Node ExpressionNode StructuredReferenceKeywordNode StructureThisRowReferenceNode Inherited Members StructuredReferenceKeywordNode.Precedence StructuredReferenceKeywordNode.Children<O>() StructuredReferenceKeywordNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StructureThisRowReferenceNode(string) public StructureThisRowReferenceNode(string rawValue) Parameters rawValue string Properties RawValue public string RawValue { get; } Property Value string Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureTotalsReferenceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructureTotalsReferenceNode.html",
    "title": "Class StructureTotalsReferenceNode | OpenLanguage Documentation",
    "summary": "Class StructureTotalsReferenceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructureTotalsReferenceNode : StructuredReferenceKeywordNode Inheritance object Node ExpressionNode StructuredReferenceKeywordNode StructureTotalsReferenceNode Inherited Members StructuredReferenceKeywordNode.Precedence StructuredReferenceKeywordNode.Children<O>() StructuredReferenceKeywordNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructuredReferenceIndicesUnion.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructuredReferenceIndicesUnion.html",
    "title": "Class StructuredReferenceIndicesUnion | OpenLanguage Documentation",
    "summary": "Class StructuredReferenceIndicesUnion Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructuredReferenceIndicesUnion : CommaDelimitedNodes<ExpressionNode, ExpressionNode> Inheritance object Node ExpressionNode CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode> CommaDelimitedNodes<ExpressionNode, ExpressionNode> StructuredReferenceIndicesUnion Inherited Members CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode>.Left CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode>.Delimiter CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode>.Right CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode>.ToRawString() CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode>.Children<O>() CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode>.ReplaceChild(int, Node) CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode>.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.Precedence ExpressionNode.ToRawString() ExpressionNode.ToString() Node.Children<O>() Node.ReplaceChild(int, Node) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StructuredReferenceIndicesUnion(ExpressionNode, CommaNode, ExpressionNode, List<Node>?, List<Node>?) public StructuredReferenceIndicesUnion(ExpressionNode left, CommaNode delimiter, ExpressionNode right, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters left ExpressionNode delimiter CommaNode right ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructuredReferenceIntersection.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructuredReferenceIntersection.html",
    "title": "Class StructuredReferenceIntersection | OpenLanguage Documentation",
    "summary": "Class StructuredReferenceIntersection Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructuredReferenceIntersection : ConcatenatedNodePair<ExpressionNode, ExpressionNode> Inheritance object Node ExpressionNode ConcatenatedNodePair<ExpressionNode, ExpressionNode> StructuredReferenceIntersection Inherited Members ConcatenatedNodePair<ExpressionNode, ExpressionNode>.Left ConcatenatedNodePair<ExpressionNode, ExpressionNode>.Right ConcatenatedNodePair<ExpressionNode, ExpressionNode>.ToRawString() ConcatenatedNodePair<ExpressionNode, ExpressionNode>.Children<O>() ConcatenatedNodePair<ExpressionNode, ExpressionNode>.ReplaceChild(int, Node) ConcatenatedNodePair<ExpressionNode, ExpressionNode>.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.Precedence ExpressionNode.ToRawString() ExpressionNode.ToString() Node.Children<O>() Node.ReplaceChild(int, Node) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StructuredReferenceIntersection(ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public StructuredReferenceIntersection(ExpressionNode left, ExpressionNode right, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters left ExpressionNode right ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructuredReferenceKeywordNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructuredReferenceKeywordNode.html",
    "title": "Class StructuredReferenceKeywordNode | OpenLanguage Documentation",
    "summary": "Class StructuredReferenceKeywordNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public abstract class StructuredReferenceKeywordNode : ExpressionNode Inheritance object Node ExpressionNode StructuredReferenceKeywordNode Derived StructureAllReferenceNode StructureDataReferenceNode StructureHeadersReferenceNode StructureThisRowReferenceNode StructureTotalsReferenceNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToRawString() ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StructuredReferenceKeywordNode(List<Node>?, List<Node>?) protected StructuredReferenceKeywordNode(List<Node>? leadingWs = null, List<Node>? trailingWs = null) Parameters leadingWs List<Node> trailingWs List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructuredReferenceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructuredReferenceNode.html",
    "title": "Class StructuredReferenceNode | OpenLanguage Documentation",
    "summary": "Class StructuredReferenceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructuredReferenceNode : ExpressionNode Inheritance object Node ExpressionNode StructuredReferenceNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StructuredReferenceNode(ExpressionNode?, ExpressionNode?) public StructuredReferenceNode(ExpressionNode? sheetReference = null, ExpressionNode? tableIndex = null) Parameters sheetReference ExpressionNode tableIndex ExpressionNode StructuredReferenceNode(ExpressionNode?, List<ExpressionNode>?) public StructuredReferenceNode(ExpressionNode? sheetReference, List<ExpressionNode>? tableIndices) Parameters sheetReference ExpressionNode tableIndices List<ExpressionNode> Properties Indices public List<ExpressionNode> Indices { get; set; } Property Value List<ExpressionNode> Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int SheetReference public ExpressionNode? SheetReference { get; set; } Property Value ExpressionNode Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructuredReferenceUnion.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StructuredReferenceUnion.html",
    "title": "Class StructuredReferenceUnion | OpenLanguage Documentation",
    "summary": "Class StructuredReferenceUnion Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StructuredReferenceUnion : CommaDelimitedNodes<ExpressionNode, ExpressionNode> Inheritance object Node ExpressionNode CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode> CommaDelimitedNodes<ExpressionNode, ExpressionNode> StructuredReferenceUnion Inherited Members CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode>.Left CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode>.Delimiter CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode>.Right CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode>.ToRawString() CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode>.Children<O>() CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode>.ReplaceChild(int, Node) CharacterDelimitedExpressionNodes<ExpressionNode, CommaNode, ExpressionNode>.Precedence ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.Precedence ExpressionNode.ToRawString() ExpressionNode.ToString() Node.Children<O>() Node.ReplaceChild(int, Node) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StructuredReferenceUnion(ExpressionNode, CommaNode, ExpressionNode, List<Node>?, List<Node>?) public StructuredReferenceUnion(ExpressionNode left, CommaNode delimiter, ExpressionNode right, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters left ExpressionNode delimiter CommaNode right ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.StyleCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.StyleCommandFunctionNode.html",
    "title": "Class StyleCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class StyleCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class StyleCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode StyleCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StyleCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public StyleCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SubscribeToCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SubscribeToCommandFunctionNode.html",
    "title": "Class SubscribeToCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SubscribeToCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SubscribeToCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SubscribeToCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SubscribeToCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SubscribeToCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SubstituteStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SubstituteStandardFunctionNode.html",
    "title": "Class SubstituteStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SubstituteStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SubstituteStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SubstituteStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SubstituteStandardFunctionNode(string?, List<Node>?, List<Node>?) public SubstituteStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SubtotalCreateCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SubtotalCreateCommandFunctionNode.html",
    "title": "Class SubtotalCreateCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SubtotalCreateCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SubtotalCreateCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SubtotalCreateCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SubtotalCreateCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SubtotalCreateCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SubtotalRemoveCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SubtotalRemoveCommandFunctionNode.html",
    "title": "Class SubtotalRemoveCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SubtotalRemoveCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SubtotalRemoveCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SubtotalRemoveCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SubtotalRemoveCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SubtotalRemoveCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SubtotalStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SubtotalStandardFunctionNode.html",
    "title": "Class SubtotalStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SubtotalStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SubtotalStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SubtotalStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SubtotalStandardFunctionNode(string?, List<Node>?, List<Node>?) public SubtotalStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SubtractNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SubtractNode.html",
    "title": "Class SubtractNode | OpenLanguage Documentation",
    "summary": "Class SubtractNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SubtractNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode SubtractNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SubtractNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public SubtractNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumIfStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumIfStandardFunctionNode.html",
    "title": "Class SumIfStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SumIfStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SumIfStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SumIfStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SumIfStandardFunctionNode(string?, List<Node>?, List<Node>?) public SumIfStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumIfsStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumIfsStandardFunctionNode.html",
    "title": "Class SumIfsStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SumIfsStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SumIfsStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SumIfsStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SumIfsStandardFunctionNode(string?, List<Node>?, List<Node>?) public SumIfsStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumProductStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumProductStandardFunctionNode.html",
    "title": "Class SumProductStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SumProductStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SumProductStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SumProductStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SumProductStandardFunctionNode(string?, List<Node>?, List<Node>?) public SumProductStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumSqStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumSqStandardFunctionNode.html",
    "title": "Class SumSqStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SumSqStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SumSqStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SumSqStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SumSqStandardFunctionNode(string?, List<Node>?, List<Node>?) public SumSqStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumStandardFunctionNode.html",
    "title": "Class SumStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SumStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SumStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SumStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SumStandardFunctionNode(string?, List<Node>?, List<Node>?) public SumStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumXMyToStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumXMyToStandardFunctionNode.html",
    "title": "Class SumXMyToStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SumXMyToStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SumXMyToStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SumXMyToStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SumXMyToStandardFunctionNode(string?, List<Node>?, List<Node>?) public SumXMyToStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumXToMyToStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumXToMyToStandardFunctionNode.html",
    "title": "Class SumXToMyToStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SumXToMyToStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SumXToMyToStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SumXToMyToStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SumXToMyToStandardFunctionNode(string?, List<Node>?, List<Node>?) public SumXToMyToStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumXToPyToStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SumXToPyToStandardFunctionNode.html",
    "title": "Class SumXToPyToStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SumXToPyToStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SumXToPyToStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SumXToPyToStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SumXToPyToStandardFunctionNode(string?, List<Node>?, List<Node>?) public SumXToPyToStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SummaryInfoCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SummaryInfoCommandFunctionNode.html",
    "title": "Class SummaryInfoCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class SummaryInfoCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SummaryInfoCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode SummaryInfoCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SummaryInfoCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public SummaryInfoCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SwitchStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SwitchStandardFunctionNode.html",
    "title": "Class SwitchStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SwitchStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SwitchStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SwitchStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SwitchStandardFunctionNode(string?, List<Node>?, List<Node>?) public SwitchStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.SydStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.SydStandardFunctionNode.html",
    "title": "Class SydStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class SydStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class SydStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode SydStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SydStandardFunctionNode(string?, List<Node>?, List<Node>?) public SydStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TBillEqStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TBillEqStandardFunctionNode.html",
    "title": "Class TBillEqStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TBillEqStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TBillEqStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TBillEqStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TBillEqStandardFunctionNode(string?, List<Node>?, List<Node>?) public TBillEqStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TBillPriceStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TBillPriceStandardFunctionNode.html",
    "title": "Class TBillPriceStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TBillPriceStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TBillPriceStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TBillPriceStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TBillPriceStandardFunctionNode(string?, List<Node>?, List<Node>?) public TBillPriceStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TBillYieldStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TBillYieldStandardFunctionNode.html",
    "title": "Class TBillYieldStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TBillYieldStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TBillYieldStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TBillYieldStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TBillYieldStandardFunctionNode(string?, List<Node>?, List<Node>?) public TBillYieldStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TDistFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TDistFutureFunctionNode.html",
    "title": "Class TDistFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class TDistFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TDistFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode TDistFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TDistFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public TDistFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TDistRtFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TDistRtFutureFunctionNode.html",
    "title": "Class TDistRtFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class TDistRtFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TDistRtFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode TDistRtFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TDistRtFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public TDistRtFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TDistStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TDistStandardFunctionNode.html",
    "title": "Class TDistStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TDistStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TDistStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TDistStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TDistStandardFunctionNode(string?, List<Node>?, List<Node>?) public TDistStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TDistTwoTFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TDistTwoTFutureFunctionNode.html",
    "title": "Class TDistTwoTFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class TDistTwoTFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TDistTwoTFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode TDistTwoTFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TDistTwoTFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public TDistTwoTFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TInvFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TInvFutureFunctionNode.html",
    "title": "Class TInvFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class TInvFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TInvFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode TInvFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TInvFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public TInvFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TInvStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TInvStandardFunctionNode.html",
    "title": "Class TInvStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TInvStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TInvStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TInvStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TInvStandardFunctionNode(string?, List<Node>?, List<Node>?) public TInvStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TInvToTFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TInvToTFutureFunctionNode.html",
    "title": "Class TInvToTFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class TInvToTFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TInvToTFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode TInvToTFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TInvToTFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public TInvToTFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TStandardFunctionNode.html",
    "title": "Class TStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TStandardFunctionNode(string?, List<Node>?, List<Node>?) public TStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TTestFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TTestFutureFunctionNode.html",
    "title": "Class TTestFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class TTestFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TTestFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode TTestFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TTestFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public TTestFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TTestStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TTestStandardFunctionNode.html",
    "title": "Class TTestStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TTestStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TTestStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TTestStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TTestStandardFunctionNode(string?, List<Node>?, List<Node>?) public TTestStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TabOrderCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TabOrderCommandFunctionNode.html",
    "title": "Class TabOrderCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class TabOrderCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TabOrderCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode TabOrderCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TabOrderCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public TabOrderCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TableCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TableCommandFunctionNode.html",
    "title": "Class TableCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class TableCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TableCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode TableCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TableCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public TableCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TakeFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TakeFutureFunctionNode.html",
    "title": "Class TakeFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class TakeFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TakeFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode TakeFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TakeFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public TakeFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TanStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TanStandardFunctionNode.html",
    "title": "Class TanStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TanStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TanStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TanStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TanStandardFunctionNode(string?, List<Node>?, List<Node>?) public TanStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TanhStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TanhStandardFunctionNode.html",
    "title": "Class TanhStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TanhStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TanhStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TanhStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TanhStandardFunctionNode(string?, List<Node>?, List<Node>?) public TanhStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TerminateMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TerminateMacroFunctionNode.html",
    "title": "Class TerminateMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class TerminateMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TerminateMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode TerminateMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TerminateMacroFunctionNode(string?, List<Node>?, List<Node>?) public TerminateMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextAfterFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextAfterFutureFunctionNode.html",
    "title": "Class TextAfterFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class TextAfterFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TextAfterFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode TextAfterFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TextAfterFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public TextAfterFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextBeforeFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextBeforeFutureFunctionNode.html",
    "title": "Class TextBeforeFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class TextBeforeFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TextBeforeFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode TextBeforeFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TextBeforeFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public TextBeforeFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextBoxMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextBoxMacroFunctionNode.html",
    "title": "Class TextBoxMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class TextBoxMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TextBoxMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode TextBoxMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TextBoxMacroFunctionNode(string?, List<Node>?, List<Node>?) public TextBoxMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextJoinStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextJoinStandardFunctionNode.html",
    "title": "Class TextJoinStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TextJoinStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TextJoinStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TextJoinStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TextJoinStandardFunctionNode(string?, List<Node>?, List<Node>?) public TextJoinStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextRefMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextRefMacroFunctionNode.html",
    "title": "Class TextRefMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class TextRefMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TextRefMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode TextRefMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TextRefMacroFunctionNode(string?, List<Node>?, List<Node>?) public TextRefMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextSplitFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextSplitFutureFunctionNode.html",
    "title": "Class TextSplitFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class TextSplitFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TextSplitFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode TextSplitFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TextSplitFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public TextSplitFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextStandardFunctionNode.html",
    "title": "Class TextStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TextStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TextStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TextStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TextStandardFunctionNode(string?, List<Node>?, List<Node>?) public TextStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextToColumnsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TextToColumnsCommandFunctionNode.html",
    "title": "Class TextToColumnsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class TextToColumnsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TextToColumnsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode TextToColumnsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TextToColumnsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public TextToColumnsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ThaiDayOfWeekStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ThaiDayOfWeekStandardFunctionNode.html",
    "title": "Class ThaiDayOfWeekStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ThaiDayOfWeekStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ThaiDayOfWeekStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ThaiDayOfWeekStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ThaiDayOfWeekStandardFunctionNode(string?, List<Node>?, List<Node>?) public ThaiDayOfWeekStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ThaiDigitStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ThaiDigitStandardFunctionNode.html",
    "title": "Class ThaiDigitStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ThaiDigitStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ThaiDigitStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ThaiDigitStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ThaiDigitStandardFunctionNode(string?, List<Node>?, List<Node>?) public ThaiDigitStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ThaiMonthOfYearStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ThaiMonthOfYearStandardFunctionNode.html",
    "title": "Class ThaiMonthOfYearStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ThaiMonthOfYearStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ThaiMonthOfYearStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ThaiMonthOfYearStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ThaiMonthOfYearStandardFunctionNode(string?, List<Node>?, List<Node>?) public ThaiMonthOfYearStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ThaiNumSoundStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ThaiNumSoundStandardFunctionNode.html",
    "title": "Class ThaiNumSoundStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ThaiNumSoundStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ThaiNumSoundStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ThaiNumSoundStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ThaiNumSoundStandardFunctionNode(string?, List<Node>?, List<Node>?) public ThaiNumSoundStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ThaiNumStringStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ThaiNumStringStandardFunctionNode.html",
    "title": "Class ThaiNumStringStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ThaiNumStringStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ThaiNumStringStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ThaiNumStringStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ThaiNumStringStandardFunctionNode(string?, List<Node>?, List<Node>?) public ThaiNumStringStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ThaiStringLengthStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ThaiStringLengthStandardFunctionNode.html",
    "title": "Class ThaiStringLengthStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ThaiStringLengthStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ThaiStringLengthStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ThaiStringLengthStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ThaiStringLengthStandardFunctionNode(string?, List<Node>?, List<Node>?) public ThaiStringLengthStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ThaiYearStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ThaiYearStandardFunctionNode.html",
    "title": "Class ThaiYearStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ThaiYearStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ThaiYearStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ThaiYearStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ThaiYearStandardFunctionNode(string?, List<Node>?, List<Node>?) public ThaiYearStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TimeStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TimeStandardFunctionNode.html",
    "title": "Class TimeStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TimeStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TimeStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TimeStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TimeStandardFunctionNode(string?, List<Node>?, List<Node>?) public TimeStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TimeValueStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TimeValueStandardFunctionNode.html",
    "title": "Class TimeValueStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TimeValueStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TimeValueStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TimeValueStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TimeValueStandardFunctionNode(string?, List<Node>?, List<Node>?) public TimeValueStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ToColFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ToColFutureFunctionNode.html",
    "title": "Class ToColFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ToColFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ToColFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ToColFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ToColFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ToColFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ToRowFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ToRowFutureFunctionNode.html",
    "title": "Class ToRowFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ToRowFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ToRowFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ToRowFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ToRowFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ToRowFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TodayStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TodayStandardFunctionNode.html",
    "title": "Class TodayStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TodayStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TodayStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TodayStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TodayStandardFunctionNode(string?, List<Node>?, List<Node>?) public TodayStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TracerClearCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TracerClearCommandFunctionNode.html",
    "title": "Class TracerClearCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class TracerClearCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TracerClearCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode TracerClearCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TracerClearCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public TracerClearCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TracerDisplayCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TracerDisplayCommandFunctionNode.html",
    "title": "Class TracerDisplayCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class TracerDisplayCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TracerDisplayCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode TracerDisplayCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TracerDisplayCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public TracerDisplayCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TracerErrorCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TracerErrorCommandFunctionNode.html",
    "title": "Class TracerErrorCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class TracerErrorCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TracerErrorCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode TracerErrorCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TracerErrorCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public TracerErrorCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TracerNavigateCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TracerNavigateCommandFunctionNode.html",
    "title": "Class TracerNavigateCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class TracerNavigateCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TracerNavigateCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode TracerNavigateCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TracerNavigateCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public TracerNavigateCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TranslateFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TranslateFutureFunctionNode.html",
    "title": "Class TranslateFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class TranslateFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TranslateFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode TranslateFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TranslateFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public TranslateFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TransposeStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TransposeStandardFunctionNode.html",
    "title": "Class TransposeStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TransposeStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TransposeStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TransposeStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TransposeStandardFunctionNode(string?, List<Node>?, List<Node>?) public TransposeStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TraverseNotesCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TraverseNotesCommandFunctionNode.html",
    "title": "Class TraverseNotesCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class TraverseNotesCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TraverseNotesCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode TraverseNotesCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TraverseNotesCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public TraverseNotesCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TrendStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TrendStandardFunctionNode.html",
    "title": "Class TrendStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TrendStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TrendStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TrendStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TrendStandardFunctionNode(string?, List<Node>?, List<Node>?) public TrendStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TrimMeanStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TrimMeanStandardFunctionNode.html",
    "title": "Class TrimMeanStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TrimMeanStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TrimMeanStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TrimMeanStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TrimMeanStandardFunctionNode(string?, List<Node>?, List<Node>?) public TrimMeanStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TrimRangeFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TrimRangeFutureFunctionNode.html",
    "title": "Class TrimRangeFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class TrimRangeFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TrimRangeFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode TrimRangeFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TrimRangeFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public TrimRangeFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TrimStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TrimStandardFunctionNode.html",
    "title": "Class TrimStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TrimStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TrimStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TrimStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TrimStandardFunctionNode(string?, List<Node>?, List<Node>?) public TrimStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TrueStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TrueStandardFunctionNode.html",
    "title": "Class TrueStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TrueStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TrueStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TrueStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TrueStandardFunctionNode(string?, List<Node>?, List<Node>?) public TrueStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TruncStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TruncStandardFunctionNode.html",
    "title": "Class TruncStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TruncStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TruncStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TruncStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TruncStandardFunctionNode(string?, List<Node>?, List<Node>?) public TruncStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.TypeStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.TypeStandardFunctionNode.html",
    "title": "Class TypeStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class TypeStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class TypeStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode TypeStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TypeStandardFunctionNode(string?, List<Node>?, List<Node>?) public TypeStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnaryMinusNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnaryMinusNode.html",
    "title": "Class UnaryMinusNode | OpenLanguage Documentation",
    "summary": "Class UnaryMinusNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UnaryMinusNode : UnaryOperatorNode Inheritance object Node ExpressionNode UnaryOperatorNode UnaryMinusNode Inherited Members UnaryOperatorNode.Operand UnaryOperatorNode.Operator UnaryOperatorNode.Children<O>() UnaryOperatorNode.ReplaceChild(int, Node) UnaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnaryMinusNode(ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public UnaryMinusNode(ExpressionNode op, ExpressionNode operand, List<Node>? lws = null, List<Node>? tws = null) Parameters op ExpressionNode operand ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnaryOperatorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnaryOperatorNode.html",
    "title": "Class UnaryOperatorNode | OpenLanguage Documentation",
    "summary": "Class UnaryOperatorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public abstract class UnaryOperatorNode : ExpressionNode Inheritance object Node ExpressionNode UnaryOperatorNode Derived AtSuffixNode DynamicNode ImplicitIntersectionNode PercentNode UnaryMinusNode UnaryPlusNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.Precedence ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnaryOperatorNode(ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) protected UnaryOperatorNode(ExpressionNode op, ExpressionNode operand, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters op ExpressionNode operand ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node> Properties Operand public ExpressionNode Operand { get; set; } Property Value ExpressionNode Operator public ExpressionNode Operator { get; set; } Property Value ExpressionNode Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnaryPlusNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnaryPlusNode.html",
    "title": "Class UnaryPlusNode | OpenLanguage Documentation",
    "summary": "Class UnaryPlusNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UnaryPlusNode : UnaryOperatorNode Inheritance object Node ExpressionNode UnaryOperatorNode UnaryPlusNode Inherited Members UnaryOperatorNode.Operand UnaryOperatorNode.Operator UnaryOperatorNode.Children<O>() UnaryOperatorNode.ReplaceChild(int, Node) UnaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnaryPlusNode(ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public UnaryPlusNode(ExpressionNode op, ExpressionNode operand, List<Node>? lws = null, List<Node>? tws = null) Parameters op ExpressionNode operand ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UndoCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UndoCommandFunctionNode.html",
    "title": "Class UndoCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class UndoCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UndoCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode UndoCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UndoCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public UndoCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UngroupCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UngroupCommandFunctionNode.html",
    "title": "Class UngroupCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class UngroupCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UngroupCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode UngroupCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UngroupCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public UngroupCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UngroupSheetsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UngroupSheetsCommandFunctionNode.html",
    "title": "Class UngroupSheetsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class UngroupSheetsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UngroupSheetsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode UngroupSheetsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UngroupSheetsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public UngroupSheetsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnhideCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnhideCommandFunctionNode.html",
    "title": "Class UnhideCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class UnhideCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UnhideCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode UnhideCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnhideCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public UnhideCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnicharFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnicharFutureFunctionNode.html",
    "title": "Class UnicharFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class UnicharFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UnicharFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode UnicharFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnicharFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public UnicharFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnicodeFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnicodeFutureFunctionNode.html",
    "title": "Class UnicodeFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class UnicodeFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UnicodeFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode UnicodeFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnicodeFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public UnicodeFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnionNode.html",
    "title": "Class UnionNode | OpenLanguage Documentation",
    "summary": "Class UnionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UnionNode : BinaryOperatorNode Inheritance object Node ExpressionNode BinaryOperatorNode UnionNode Inherited Members BinaryOperatorNode.Left BinaryOperatorNode.Operator BinaryOperatorNode.Right BinaryOperatorNode.Children<O>() BinaryOperatorNode.ReplaceChild(int, Node) BinaryOperatorNode.ToRawString() ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnionNode(ExpressionNode, ExpressionNode, ExpressionNode, List<Node>?, List<Node>?) public UnionNode(ExpressionNode l, ExpressionNode op, ExpressionNode r, List<Node>? lws = null, List<Node>? tws = null) Parameters l ExpressionNode op ExpressionNode r ExpressionNode lws List<Node> tws List<Node> Properties Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UniqueFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UniqueFutureFunctionNode.html",
    "title": "Class UniqueFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class UniqueFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UniqueFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode UniqueFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UniqueFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public UniqueFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnknownErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnknownErrorNode.html",
    "title": "Class UnknownErrorNode | OpenLanguage Documentation",
    "summary": "Class UnknownErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UnknownErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode UnknownErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnknownErrorNode(string, List<Node>?, List<Node>?) public UnknownErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnlockedNextCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnlockedNextCommandFunctionNode.html",
    "title": "Class UnlockedNextCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class UnlockedNextCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UnlockedNextCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode UnlockedNextCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnlockedNextCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public UnlockedNextCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnlockedPrevCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnlockedPrevCommandFunctionNode.html",
    "title": "Class UnlockedPrevCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class UnlockedPrevCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UnlockedPrevCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode UnlockedPrevCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnlockedPrevCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public UnlockedPrevCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnprotectRevisionsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnprotectRevisionsCommandFunctionNode.html",
    "title": "Class UnprotectRevisionsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class UnprotectRevisionsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UnprotectRevisionsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode UnprotectRevisionsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnprotectRevisionsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public UnprotectRevisionsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnregisterMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UnregisterMacroFunctionNode.html",
    "title": "Class UnregisterMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class UnregisterMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UnregisterMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode UnregisterMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UnregisterMacroFunctionNode(string?, List<Node>?, List<Node>?) public UnregisterMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UpdateLinkCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UpdateLinkCommandFunctionNode.html",
    "title": "Class UpdateLinkCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class UpdateLinkCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UpdateLinkCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode UpdateLinkCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UpdateLinkCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public UpdateLinkCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UpperStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UpperStandardFunctionNode.html",
    "title": "Class UpperStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class UpperStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UpperStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode UpperStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UpperStandardFunctionNode(string?, List<Node>?, List<Node>?) public UpperStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UsDollarStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UsDollarStandardFunctionNode.html",
    "title": "Class UsDollarStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class UsDollarStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UsDollarStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode UsDollarStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UsDollarStandardFunctionNode(string?, List<Node>?, List<Node>?) public UsDollarStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.UserDefinedFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.UserDefinedFunctionNode.html",
    "title": "Class UserDefinedFunctionNode | OpenLanguage Documentation",
    "summary": "Class UserDefinedFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class UserDefinedFunctionNode : NameNode Inheritance object Node ExpressionNode NameNode UserDefinedFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UserDefinedFunctionNode(ExpressionNode, List<Node>?, List<Node>?) public UserDefinedFunctionNode(ExpressionNode name, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name ExpressionNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VLineCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VLineCommandFunctionNode.html",
    "title": "Class VLineCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class VLineCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VLineCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode VLineCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VLineCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public VLineCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VLookupStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VLookupStandardFunctionNode.html",
    "title": "Class VLookupStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class VLookupStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VLookupStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode VLookupStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VLookupStandardFunctionNode(string?, List<Node>?, List<Node>?) public VLookupStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VPageCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VPageCommandFunctionNode.html",
    "title": "Class VPageCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class VPageCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VPageCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode VPageCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VPageCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public VPageCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VStackFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VStackFutureFunctionNode.html",
    "title": "Class VStackFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class VStackFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VStackFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode VStackFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VStackFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public VStackFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ValueErrorNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ValueErrorNode.html",
    "title": "Class ValueErrorNode | OpenLanguage Documentation",
    "summary": "Class ValueErrorNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ValueErrorNode : ErrorNode Inheritance object Node ExpressionNode ErrorNode ValueErrorNode Inherited Members ErrorNode.ErrorType ErrorNode.Precedence ErrorNode.ToRawString() ErrorNode.Children<O>() ErrorNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ValueErrorNode(string, List<Node>?, List<Node>?) public ValueErrorNode(string errorType, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters errorType string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ValueStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ValueStandardFunctionNode.html",
    "title": "Class ValueStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ValueStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ValueStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ValueStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ValueStandardFunctionNode(string?, List<Node>?, List<Node>?) public ValueStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ValueToTextFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ValueToTextFutureFunctionNode.html",
    "title": "Class ValueToTextFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ValueToTextFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ValueToTextFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ValueToTextFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ValueToTextFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ValueToTextFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VarAStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VarAStandardFunctionNode.html",
    "title": "Class VarAStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class VarAStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VarAStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode VarAStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VarAStandardFunctionNode(string?, List<Node>?, List<Node>?) public VarAStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VarPFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VarPFutureFunctionNode.html",
    "title": "Class VarPFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class VarPFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VarPFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode VarPFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VarPFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public VarPFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VarPStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VarPStandardFunctionNode.html",
    "title": "Class VarPStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class VarPStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VarPStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode VarPStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VarPStandardFunctionNode(string?, List<Node>?, List<Node>?) public VarPStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VarPaStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VarPaStandardFunctionNode.html",
    "title": "Class VarPaStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class VarPaStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VarPaStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode VarPaStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VarPaStandardFunctionNode(string?, List<Node>?, List<Node>?) public VarPaStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VarSFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VarSFutureFunctionNode.html",
    "title": "Class VarSFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class VarSFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VarSFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode VarSFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VarSFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public VarSFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VarStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VarStandardFunctionNode.html",
    "title": "Class VarStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class VarStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VarStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode VarStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VarStandardFunctionNode(string?, List<Node>?, List<Node>?) public VarStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VbaActivateCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VbaActivateCommandFunctionNode.html",
    "title": "Class VbaActivateCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class VbaActivateCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VbaActivateCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode VbaActivateCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VbaActivateCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public VbaActivateCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VbaInsertFileCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VbaInsertFileCommandFunctionNode.html",
    "title": "Class VbaInsertFileCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class VbaInsertFileCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VbaInsertFileCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode VbaInsertFileCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VbaInsertFileCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public VbaInsertFileCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VbaMakeAddinCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VbaMakeAddinCommandFunctionNode.html",
    "title": "Class VbaMakeAddinCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class VbaMakeAddinCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VbaMakeAddinCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode VbaMakeAddinCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VbaMakeAddinCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public VbaMakeAddinCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VbaProcedureDefinitionCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VbaProcedureDefinitionCommandFunctionNode.html",
    "title": "Class VbaProcedureDefinitionCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class VbaProcedureDefinitionCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VbaProcedureDefinitionCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode VbaProcedureDefinitionCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VbaProcedureDefinitionCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public VbaProcedureDefinitionCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VdbStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VdbStandardFunctionNode.html",
    "title": "Class VdbStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class VdbStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VdbStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode VdbStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VdbStandardFunctionNode(string?, List<Node>?, List<Node>?) public VdbStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.View3DCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.View3DCommandFunctionNode.html",
    "title": "Class View3DCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class View3DCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class View3DCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode View3DCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors View3DCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public View3DCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ViewDefineCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ViewDefineCommandFunctionNode.html",
    "title": "Class ViewDefineCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ViewDefineCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ViewDefineCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ViewDefineCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ViewDefineCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ViewDefineCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ViewDeleteCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ViewDeleteCommandFunctionNode.html",
    "title": "Class ViewDeleteCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ViewDeleteCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ViewDeleteCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ViewDeleteCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ViewDeleteCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ViewDeleteCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ViewGetMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ViewGetMacroFunctionNode.html",
    "title": "Class ViewGetMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class ViewGetMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ViewGetMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode ViewGetMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ViewGetMacroFunctionNode(string?, List<Node>?, List<Node>?) public ViewGetMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ViewShowCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ViewShowCommandFunctionNode.html",
    "title": "Class ViewShowCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ViewShowCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ViewShowCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ViewShowCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ViewShowCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ViewShowCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VolatileMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VolatileMacroFunctionNode.html",
    "title": "Class VolatileMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class VolatileMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VolatileMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode VolatileMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VolatileMacroFunctionNode(string?, List<Node>?, List<Node>?) public VolatileMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.VscrollCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.VscrollCommandFunctionNode.html",
    "title": "Class VscrollCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class VscrollCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class VscrollCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode VscrollCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors VscrollCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public VscrollCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WaitCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WaitCommandFunctionNode.html",
    "title": "Class WaitCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WaitCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WaitCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WaitCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WaitCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WaitCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WebPublishCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WebPublishCommandFunctionNode.html",
    "title": "Class WebPublishCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WebPublishCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WebPublishCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WebPublishCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WebPublishCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WebPublishCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WebServiceFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WebServiceFutureFunctionNode.html",
    "title": "Class WebServiceFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class WebServiceFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WebServiceFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode WebServiceFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WebServiceFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public WebServiceFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WeekNumStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WeekNumStandardFunctionNode.html",
    "title": "Class WeekNumStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class WeekNumStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WeekNumStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode WeekNumStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WeekNumStandardFunctionNode(string?, List<Node>?, List<Node>?) public WeekNumStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WeekdayStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WeekdayStandardFunctionNode.html",
    "title": "Class WeekdayStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class WeekdayStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WeekdayStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode WeekdayStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WeekdayStandardFunctionNode(string?, List<Node>?, List<Node>?) public WeekdayStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WeibullDistFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WeibullDistFutureFunctionNode.html",
    "title": "Class WeibullDistFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class WeibullDistFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WeibullDistFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode WeibullDistFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WeibullDistFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public WeibullDistFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WeibullStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WeibullStandardFunctionNode.html",
    "title": "Class WeibullStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class WeibullStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WeibullStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode WeibullStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WeibullStandardFunctionNode(string?, List<Node>?, List<Node>?) public WeibullStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WhileMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WhileMacroFunctionNode.html",
    "title": "Class WhileMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class WhileMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WhileMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode WhileMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WhileMacroFunctionNode(string?, List<Node>?, List<Node>?) public WhileMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WhitespaceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WhitespaceNode.html",
    "title": "Class WhitespaceNode | OpenLanguage Documentation",
    "summary": "Class WhitespaceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WhitespaceNode : Node Inheritance object Node WhitespaceNode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WhitespaceNode(string) public WhitespaceNode(string whitespaceStr) Parameters whitespaceStr string Properties Raw public string Raw { get; set; } Property Value string Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToString() Converts the AST node back into its exact string representation in a formula. public override string ToString() Returns string The formula string for this node."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WindowMaximizeCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WindowMaximizeCommandFunctionNode.html",
    "title": "Class WindowMaximizeCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WindowMaximizeCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WindowMaximizeCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WindowMaximizeCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WindowMaximizeCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WindowMaximizeCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WindowMinimizeCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WindowMinimizeCommandFunctionNode.html",
    "title": "Class WindowMinimizeCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WindowMinimizeCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WindowMinimizeCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WindowMinimizeCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WindowMinimizeCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WindowMinimizeCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WindowMoveCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WindowMoveCommandFunctionNode.html",
    "title": "Class WindowMoveCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WindowMoveCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WindowMoveCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WindowMoveCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WindowMoveCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WindowMoveCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WindowRestoreCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WindowRestoreCommandFunctionNode.html",
    "title": "Class WindowRestoreCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WindowRestoreCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WindowRestoreCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WindowRestoreCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WindowRestoreCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WindowRestoreCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WindowSizeCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WindowSizeCommandFunctionNode.html",
    "title": "Class WindowSizeCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WindowSizeCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WindowSizeCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WindowSizeCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WindowSizeCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WindowSizeCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WindowTitleMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WindowTitleMacroFunctionNode.html",
    "title": "Class WindowTitleMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class WindowTitleMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WindowTitleMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode WindowTitleMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WindowTitleMacroFunctionNode(string?, List<Node>?, List<Node>?) public WindowTitleMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WindowsMacroFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WindowsMacroFunctionNode.html",
    "title": "Class WindowsMacroFunctionNode | OpenLanguage Documentation",
    "summary": "Class WindowsMacroFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WindowsMacroFunctionNode : MacroFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode MacroFunctionNode WindowsMacroFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WindowsMacroFunctionNode(string?, List<Node>?, List<Node>?) public WindowsMacroFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookActivateCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookActivateCommandFunctionNode.html",
    "title": "Class WorkbookActivateCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookActivateCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookActivateCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookActivateCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookActivateCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookActivateCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookAddCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookAddCommandFunctionNode.html",
    "title": "Class WorkbookAddCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookAddCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookAddCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookAddCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookAddCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookAddCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookCopyCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookCopyCommandFunctionNode.html",
    "title": "Class WorkbookCopyCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookCopyCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookCopyCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookCopyCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookCopyCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookCopyCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookDeleteCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookDeleteCommandFunctionNode.html",
    "title": "Class WorkbookDeleteCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookDeleteCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookDeleteCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookDeleteCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookDeleteCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookDeleteCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookHideCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookHideCommandFunctionNode.html",
    "title": "Class WorkbookHideCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookHideCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookHideCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookHideCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookHideCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookHideCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookInsertCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookInsertCommandFunctionNode.html",
    "title": "Class WorkbookInsertCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookInsertCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookInsertCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookInsertCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookInsertCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookInsertCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookMoveCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookMoveCommandFunctionNode.html",
    "title": "Class WorkbookMoveCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookMoveCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookMoveCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookMoveCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookMoveCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookMoveCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookNameCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookNameCommandFunctionNode.html",
    "title": "Class WorkbookNameCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookNameCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookNameCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookNameCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookNameCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookNameCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookNewCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookNewCommandFunctionNode.html",
    "title": "Class WorkbookNewCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookNewCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookNewCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookNewCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookNewCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookNewCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookNextCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookNextCommandFunctionNode.html",
    "title": "Class WorkbookNextCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookNextCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookNextCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookNextCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookNextCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookNextCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookOptionsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookOptionsCommandFunctionNode.html",
    "title": "Class WorkbookOptionsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookOptionsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookOptionsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookOptionsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookOptionsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookOptionsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookPrevCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookPrevCommandFunctionNode.html",
    "title": "Class WorkbookPrevCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookPrevCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookPrevCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookPrevCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookPrevCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookPrevCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookProtectCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookProtectCommandFunctionNode.html",
    "title": "Class WorkbookProtectCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookProtectCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookProtectCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookProtectCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookProtectCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookProtectCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookReferenceNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookReferenceNode.html",
    "title": "Class WorkbookReferenceNode | OpenLanguage Documentation",
    "summary": "Class WorkbookReferenceNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll Represents a workbook index, e.g., \"[1]\" or \"[MyWorkbook.xlsx]\". public class WorkbookReferenceNode : ExpressionNode Inheritance object Node ExpressionNode WorkbookReferenceNode Inherited Members ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookReferenceNode(ExpressionNode?, LeftBracketNode, RightBracketNode, List<Node>?, List<Node>?) public WorkbookReferenceNode(ExpressionNode? index, LeftBracketNode openBracket, RightBracketNode closeBracket, List<Node>? leadingWs = null, List<Node>? trailingWs = null) Parameters index ExpressionNode openBracket LeftBracketNode closeBracket RightBracketNode leadingWs List<Node> trailingWs List<Node> Properties CloseBracket public RightBracketNode CloseBracket { get; set; } Property Value RightBracketNode Index public ExpressionNode? Index { get; set; } Property Value ExpressionNode OpenBracket public LeftBracketNode OpenBracket { get; set; } Property Value LeftBracketNode Precedence Gets the operator precedence for this expression node. public override int Precedence { get; } Property Value int Methods Children<O>() public override IEnumerable<O> Children<O>() where O : Node Returns IEnumerable<O> Type Parameters O ReplaceChild(int, Node) public override Node? ReplaceChild(int index, Node replacement) Parameters index int replacement Node Returns Node ToRawString() Renders the core content of the node without its own leading/trailing whitespace. public override string ToRawString() Returns string The raw string representation of this node's specific content."
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookScrollCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookScrollCommandFunctionNode.html",
    "title": "Class WorkbookScrollCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookScrollCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookScrollCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookScrollCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookScrollCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookScrollCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookSelectCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookSelectCommandFunctionNode.html",
    "title": "Class WorkbookSelectCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookSelectCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookSelectCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookSelectCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookSelectCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookSelectCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookTabSplitCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookTabSplitCommandFunctionNode.html",
    "title": "Class WorkbookTabSplitCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookTabSplitCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookTabSplitCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookTabSplitCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookTabSplitCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookTabSplitCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookUnhideCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkbookUnhideCommandFunctionNode.html",
    "title": "Class WorkbookUnhideCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkbookUnhideCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkbookUnhideCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkbookUnhideCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkbookUnhideCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkbookUnhideCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkdayIntlFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkdayIntlFutureFunctionNode.html",
    "title": "Class WorkdayIntlFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkdayIntlFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkdayIntlFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode WorkdayIntlFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkdayIntlFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public WorkdayIntlFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkdayStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkdayStandardFunctionNode.html",
    "title": "Class WorkdayStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkdayStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkdayStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode WorkdayStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkdayStandardFunctionNode(string?, List<Node>?, List<Node>?) public WorkdayStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkgroupCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkgroupCommandFunctionNode.html",
    "title": "Class WorkgroupCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkgroupCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkgroupCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkgroupCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkgroupCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkgroupCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkgroupOptionsCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkgroupOptionsCommandFunctionNode.html",
    "title": "Class WorkgroupOptionsCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkgroupOptionsCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkgroupOptionsCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkgroupOptionsCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkgroupOptionsCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkgroupOptionsCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorksheetFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorksheetFunctionNode.html",
    "title": "Class WorksheetFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorksheetFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorksheetFunctionNode : BuiltInFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode WorksheetFunctionNode Derived FilterWorksheetFunctionNode PyFunctionNode SortWorksheetFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorksheetFunctionNode(NameNode, XlfnFunctionPrefixNode?, XlwsFunctionPrefixNode?, List<Node>?, List<Node>?) public WorksheetFunctionNode(NameNode name, XlfnFunctionPrefixNode? xlfnPrefix = null, XlwsFunctionPrefixNode? xlwsPrefix = null, List<Node>? leadingWs = null, List<Node>? trailingWs = null) Parameters name NameNode xlfnPrefix XlfnFunctionPrefixNode xlwsPrefix XlwsFunctionPrefixNode leadingWs List<Node> trailingWs List<Node> WorksheetFunctionNode(NameNode, List<Node>?, List<Node>?) public WorksheetFunctionNode(NameNode name, List<Node>? leadingWs = null, List<Node>? trailingWs = null) Parameters name NameNode leadingWs List<Node> trailingWs List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkspaceCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WorkspaceCommandFunctionNode.html",
    "title": "Class WorkspaceCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class WorkspaceCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WorkspaceCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode WorkspaceCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WorkspaceCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public WorkspaceCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WrapColsFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WrapColsFutureFunctionNode.html",
    "title": "Class WrapColsFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class WrapColsFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WrapColsFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode WrapColsFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WrapColsFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public WrapColsFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.WrapRowsFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.WrapRowsFutureFunctionNode.html",
    "title": "Class WrapRowsFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class WrapRowsFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class WrapRowsFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode WrapRowsFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WrapRowsFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public WrapRowsFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.XLookupFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.XLookupFutureFunctionNode.html",
    "title": "Class XLookupFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class XLookupFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class XLookupFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode XLookupFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors XLookupFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public XLookupFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.XMatchFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.XMatchFutureFunctionNode.html",
    "title": "Class XMatchFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class XMatchFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class XMatchFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode XMatchFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors XMatchFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public XMatchFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.XirrStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.XirrStandardFunctionNode.html",
    "title": "Class XirrStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class XirrStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class XirrStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode XirrStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors XirrStandardFunctionNode(string?, List<Node>?, List<Node>?) public XirrStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.XlbgnmFunctionPrefixNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.XlbgnmFunctionPrefixNode.html",
    "title": "Class XlbgnmFunctionPrefixNode | OpenLanguage Documentation",
    "summary": "Class XlbgnmFunctionPrefixNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll Represents the \"_xlbgnm.\" prefix for Big Grid Name compatibility. string? representation: \"_xlbgnm.\" Used when old defined names conflict with new cell references in extended column ranges. public class XlbgnmFunctionPrefixNode : FunctionPrefixNode Inheritance object Node ExpressionNode PrefixNode FunctionPrefixNode XlbgnmFunctionPrefixNode Inherited Members PrefixNode.RawPrefix PrefixNode.Prefix PrefixNode.Precedence PrefixNode.ToRawString() PrefixNode.Children<O>() PrefixNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors XlbgnmFunctionPrefixNode(NameNode?, List<Node>?, List<Node>?) public XlbgnmFunctionPrefixNode(NameNode? name = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name NameNode leadingWhitespace List<Node> trailingWhitespace List<Node> XlbgnmFunctionPrefixNode(string?, List<Node>?, List<Node>?) public XlbgnmFunctionPrefixNode(string? name = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.XlfnFunctionPrefixNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.XlfnFunctionPrefixNode.html",
    "title": "Class XlfnFunctionPrefixNode | OpenLanguage Documentation",
    "summary": "Class XlfnFunctionPrefixNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll Represents the \"_xlfn.\" prefix for Excel Function Name resolution. string? representation: \"_xlfn.\" Used for new Excel functions that may not be recognized by older Excel versions. This prefix indicates that the function name should be resolved at runtime by the Excel engine. public class XlfnFunctionPrefixNode : FunctionPrefixNode Inheritance object Node ExpressionNode PrefixNode FunctionPrefixNode XlfnFunctionPrefixNode Inherited Members PrefixNode.RawPrefix PrefixNode.Prefix PrefixNode.Precedence PrefixNode.ToRawString() PrefixNode.Children<O>() PrefixNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors XlfnFunctionPrefixNode(NameNode?, List<Node>?, List<Node>?) public XlfnFunctionPrefixNode(NameNode? name = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name NameNode leadingWhitespace List<Node> trailingWhitespace List<Node> XlfnFunctionPrefixNode(string?, List<Node>?, List<Node>?) public XlfnFunctionPrefixNode(string? name = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.XllFunctionPrefixNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.XllFunctionPrefixNode.html",
    "title": "Class XllFunctionPrefixNode | OpenLanguage Documentation",
    "summary": "Class XllFunctionPrefixNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll Represents the \"_xll.\" prefix for Excel Library functions. string? representation: \"_xll.\" Used for functions provided by Excel add-in libraries (XLL files). These functions extend Excel's capabilities through custom libraries and external add-ins. public class XllFunctionPrefixNode : FunctionPrefixNode Inheritance object Node ExpressionNode PrefixNode FunctionPrefixNode XllFunctionPrefixNode Inherited Members PrefixNode.RawPrefix PrefixNode.Prefix PrefixNode.Precedence PrefixNode.ToRawString() PrefixNode.Children<O>() PrefixNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors XllFunctionPrefixNode(NameNode?, List<Node>?, List<Node>?) public XllFunctionPrefixNode(NameNode? name = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name NameNode leadingWhitespace List<Node> trailingWhitespace List<Node> XllFunctionPrefixNode(string?, List<Node>?, List<Node>?) public XllFunctionPrefixNode(string? name = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.XlnmFunctionPrefixNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.XlnmFunctionPrefixNode.html",
    "title": "Class XlnmFunctionPrefixNode | OpenLanguage Documentation",
    "summary": "Class XlnmFunctionPrefixNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll Represents the \"_xlnm.\" prefix for Excel built-in defined names. string? representation: \"_xlnm.\" Used for internal named ranges and built-in names like Print_Area. public class XlnmFunctionPrefixNode : FunctionPrefixNode Inheritance object Node ExpressionNode PrefixNode FunctionPrefixNode XlnmFunctionPrefixNode Inherited Members PrefixNode.RawPrefix PrefixNode.Prefix PrefixNode.Precedence PrefixNode.ToRawString() PrefixNode.Children<O>() PrefixNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors XlnmFunctionPrefixNode(NameNode?, List<Node>?, List<Node>?) public XlnmFunctionPrefixNode(NameNode? name = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name NameNode leadingWhitespace List<Node> trailingWhitespace List<Node> XlnmFunctionPrefixNode(string?, List<Node>?, List<Node>?) public XlnmFunctionPrefixNode(string? name = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.XlopPrefixNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.XlopPrefixNode.html",
    "title": "Class XlopPrefixNode | OpenLanguage Documentation",
    "summary": "Class XlopPrefixNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll Represents the \"_xlop.\" prefix for LAMBDA optional parameters. string? representation: \"_xlop.\" Used internally by Excel to identify optional arguments in LAMBDA. This prefix node derives directly from PrefixNode (not FunctionPrefixNode). public class XlopPrefixNode : PrefixNode Inheritance object Node ExpressionNode PrefixNode XlopPrefixNode Inherited Members PrefixNode.RawPrefix PrefixNode.Prefix PrefixNode.Precedence PrefixNode.ToRawString() PrefixNode.Children<O>() PrefixNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors XlopPrefixNode(NameNode?, List<Node>?, List<Node>?) public XlopPrefixNode(NameNode? name = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name NameNode leadingWhitespace List<Node> trailingWhitespace List<Node> XlopPrefixNode(string?, List<Node>?, List<Node>?) public XlopPrefixNode(string? name = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.XlpmFunctionPrefixNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.XlpmFunctionPrefixNode.html",
    "title": "Class XlpmFunctionPrefixNode | OpenLanguage Documentation",
    "summary": "Class XlpmFunctionPrefixNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll Represents the \"_xlpm.\" prefix for LAMBDA/LET parameter names. string? representation: \"_xlpm.\" Used internally in Excel for lambda and let function parameters. public class XlpmFunctionPrefixNode : FunctionPrefixNode Inheritance object Node ExpressionNode PrefixNode FunctionPrefixNode XlpmFunctionPrefixNode Inherited Members PrefixNode.RawPrefix PrefixNode.Prefix PrefixNode.Precedence PrefixNode.ToRawString() PrefixNode.Children<O>() PrefixNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors XlpmFunctionPrefixNode(NameNode?, List<Node>?, List<Node>?) public XlpmFunctionPrefixNode(NameNode? name = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name NameNode leadingWhitespace List<Node> trailingWhitespace List<Node> XlpmFunctionPrefixNode(string?, List<Node>?, List<Node>?) public XlpmFunctionPrefixNode(string? name = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.XlwsFunctionPrefixNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.XlwsFunctionPrefixNode.html",
    "title": "Class XlwsFunctionPrefixNode | OpenLanguage Documentation",
    "summary": "Class XlwsFunctionPrefixNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll Represents the \"_xlws.\" prefix for Excel Worksheet functions. string? representation: \"_xlws.\" Used for worksheet-specific functions and operations in Excel. These functions provide worksheet manipulation, cell operations, and sheet-level functionality. public class XlwsFunctionPrefixNode : FunctionPrefixNode Inheritance object Node ExpressionNode PrefixNode FunctionPrefixNode XlwsFunctionPrefixNode Inherited Members PrefixNode.RawPrefix PrefixNode.Prefix PrefixNode.Precedence PrefixNode.ToRawString() PrefixNode.Children<O>() PrefixNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors XlwsFunctionPrefixNode(NameNode?, List<Node>?, List<Node>?) public XlwsFunctionPrefixNode(NameNode? name = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name NameNode leadingWhitespace List<Node> trailingWhitespace List<Node> XlwsFunctionPrefixNode(string?, List<Node>?, List<Node>?) public XlwsFunctionPrefixNode(string? name = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters name string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.XnpvStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.XnpvStandardFunctionNode.html",
    "title": "Class XnpvStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class XnpvStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class XnpvStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode XnpvStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors XnpvStandardFunctionNode(string?, List<Node>?, List<Node>?) public XnpvStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.XorFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.XorFutureFunctionNode.html",
    "title": "Class XorFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class XorFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class XorFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode XorFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors XorFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public XorFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.YearFracStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.YearFracStandardFunctionNode.html",
    "title": "Class YearFracStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class YearFracStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class YearFracStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode YearFracStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors YearFracStandardFunctionNode(string?, List<Node>?, List<Node>?) public YearFracStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.YearStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.YearStandardFunctionNode.html",
    "title": "Class YearStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class YearStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class YearStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode YearStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors YearStandardFunctionNode(string?, List<Node>?, List<Node>?) public YearStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.YieldDiscStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.YieldDiscStandardFunctionNode.html",
    "title": "Class YieldDiscStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class YieldDiscStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class YieldDiscStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode YieldDiscStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors YieldDiscStandardFunctionNode(string?, List<Node>?, List<Node>?) public YieldDiscStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.YieldMatStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.YieldMatStandardFunctionNode.html",
    "title": "Class YieldMatStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class YieldMatStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class YieldMatStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode YieldMatStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors YieldMatStandardFunctionNode(string?, List<Node>?, List<Node>?) public YieldMatStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.YieldStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.YieldStandardFunctionNode.html",
    "title": "Class YieldStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class YieldStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class YieldStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode YieldStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors YieldStandardFunctionNode(string?, List<Node>?, List<Node>?) public YieldStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ZTestFutureFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ZTestFutureFunctionNode.html",
    "title": "Class ZTestFutureFunctionNode | OpenLanguage Documentation",
    "summary": "Class ZTestFutureFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ZTestFutureFunctionNode : FutureFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode FutureFunctionNode ZTestFutureFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ZTestFutureFunctionNode(string?, XlfnFunctionPrefixNode?, List<Node>?, List<Node>?) public ZTestFutureFunctionNode(string? rawName = null, XlfnFunctionPrefixNode? prefix = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string prefix XlfnFunctionPrefixNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ZTestStandardFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ZTestStandardFunctionNode.html",
    "title": "Class ZTestStandardFunctionNode | OpenLanguage Documentation",
    "summary": "Class ZTestStandardFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ZTestStandardFunctionNode : StandardFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode StandardFunctionNode ZTestStandardFunctionNode Inherited Members NameNode.RawName NameNode.Name NameNode.Precedence NameNode.ToRawString() NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ZTestStandardFunctionNode(string?, List<Node>?, List<Node>?) public ZTestStandardFunctionNode(string? rawName = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.ZoomCommandFunctionNode.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.ZoomCommandFunctionNode.html",
    "title": "Class ZoomCommandFunctionNode | OpenLanguage Documentation",
    "summary": "Class ZoomCommandFunctionNode Namespace OpenLanguage.SpreadsheetML.Formula.Ast Assembly OpenLanguage.dll public class ZoomCommandFunctionNode : CommandFunctionNode Inheritance object Node ExpressionNode NameNode BuiltInFunctionNode CommandFunctionNode ZoomCommandFunctionNode Inherited Members CommandFunctionNode.QuestionMark CommandFunctionNode.ToRawString() NameNode.RawName NameNode.Name NameNode.Precedence NameNode.Children<O>() NameNode.ReplaceChild(int, Node) ExpressionNode.LeadingWhitespace ExpressionNode.TrailingWhitespace ExpressionNode.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ZoomCommandFunctionNode(string?, QuestionMarkNode?, List<Node>?, List<Node>?) public ZoomCommandFunctionNode(string? rawName = null, QuestionMarkNode? questionMark = null, List<Node>? leadingWhitespace = null, List<Node>? trailingWhitespace = null) Parameters rawName string questionMark QuestionMarkNode leadingWhitespace List<Node> trailingWhitespace List<Node>"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Ast.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Ast.html",
    "title": "Namespace OpenLanguage.SpreadsheetML.Formula.Ast | OpenLanguage Documentation",
    "summary": "Namespace OpenLanguage.SpreadsheetML.Formula.Ast Classes A1AbsoluteColumnNode A1AbsoluteRowNode A1CellNode A1ColumnNode A1ColumnOnlyNode A1R1C1CommandFunctionNode A1RelativeColumnNode A1RelativeRowNode A1RowNode A1RowOnlyNode AbsRefMacroFunctionNode AbsStandardFunctionNode AccrIntMStandardFunctionNode AccrIntStandardFunctionNode AcosStandardFunctionNode AcoshStandardFunctionNode AcotFutureFunctionNode AcothFutureFunctionNode ActivateCommandFunctionNode ActivateNextCommandFunctionNode ActivateNotesCommandFunctionNode ActivatePrevCommandFunctionNode ActiveCellFontCommandFunctionNode ActiveCellMacroFunctionNode AddArrowCommandFunctionNode AddBarMacroFunctionNode AddChartAutoFormatCommandFunctionNode AddCommandMacroFunctionNode AddListItemCommandFunctionNode AddMenuMacroFunctionNode AddNode AddOverlayCommandFunctionNode AddPrintAreaCommandFunctionNode AddToolCommandFunctionNode AddToolbarMacroFunctionNode AddinManagerCommandFunctionNode AddressStandardFunctionNode AggregateFutureFunctionNode AlertCommandFunctionNode AlignmentCommandFunctionNode AmorDegrCStandardFunctionNode AmorLinCStandardFunctionNode AmpersandLiteralNode AndNode AndStandardFunctionNode AppActivateCommandFunctionNode AppActivateMicrosoftCommandFunctionNode AppMaximizeCommandFunctionNode AppMinimizeCommandFunctionNode AppMoveCommandFunctionNode AppRestoreCommandFunctionNode AppSizeCommandFunctionNode AppTitleMacroFunctionNode ApplyNamesCommandFunctionNode ApplyStyleCommandFunctionNode ArabicFutureFunctionNode AreasStandardFunctionNode ArgumentMacroFunctionNode ArrangeAllCommandFunctionNode ArrayNode ArrayToTextFutureFunctionNode AscStandardFunctionNode AsinStandardFunctionNode AsinhStandardFunctionNode AssignToObjectCommandFunctionNode AssignToToolCommandFunctionNode AsteriskLiteralNode AtSuffixNode AtSymbolLiteralNode AtanStandardFunctionNode AtanToStandardFunctionNode AtanhStandardFunctionNode AttachTextCommandFunctionNode AttachToolbarsCommandFunctionNode AttributesCommandFunctionNode AutoOutlineCommandFunctionNode AutocorrectCommandFunctionNode AveDevStandardFunctionNode AverageAStandardFunctionNode AverageIfStandardFunctionNode AverageIfsStandardFunctionNode AverageStandardFunctionNode AxesCommandFunctionNode BahtTextStandardFunctionNode BangNode BangReferenceNode Represents a reference prefixed with a bang, e.g., \"!MyName\" or \"!A1\". BaseFutureFunctionNode BeepCommandFunctionNode BesseliStandardFunctionNode BesseljStandardFunctionNode BesselkStandardFunctionNode BesselyStandardFunctionNode BetaDistFutureFunctionNode BetaDistStandardFunctionNode BetaInvFutureFunctionNode BetaInvStandardFunctionNode BinToDecStandardFunctionNode BinToHexStandardFunctionNode BinToOctStandardFunctionNode BinaryOperatorNode BinomDistFutureFunctionNode BinomDistRangeFutureFunctionNode BinomDistStandardFunctionNode BinomInvFutureFunctionNode BitAndFutureFunctionNode BitLShiftFutureFunctionNode BitOrFutureFunctionNode BitRShiftFutureFunctionNode BitXorFutureFunctionNode BlockedErrorNode BorderCommandFunctionNode BreakMacroFunctionNode BringToFrontCommandFunctionNode BuiltInFunctionNode BusyErrorNode BycolFutureFunctionNode ByrowFutureFunctionNode CalcErrorNode CalculateDocumentCommandFunctionNode CalculateNowCommandFunctionNode CalculationCommandFunctionNode CallMacroFunctionNode CallerMacroFunctionNode CancelCopyCommandFunctionNode CancelKeyMacroFunctionNode CaretLiteralNode CeilingMathFutureFunctionNode CeilingPreciseFutureFunctionNode CeilingStandardFunctionNode CellNode<R, RN, C, CN> CellProtectionCommandFunctionNode CellRangeNode<LC, RC, LCRN, LCR, LCCN, LCC, RCRN, RCR, RCCN, RCC> CellStandardFunctionNode ChangeLinkCommandFunctionNode CharStandardFunctionNode CharacterDelimitedExpressionNodes<L, D, R> CharacterLiteralNode ChartAddDataCommandFunctionNode ChartTrendCommandFunctionNode ChartWizardCommandFunctionNode CheckCommandMacroFunctionNode CheckboxPropertiesCommandFunctionNode ChiDistStandardFunctionNode ChiInvStandardFunctionNode ChiTestStandardFunctionNode ChisqDistFutureFunctionNode ChisqDistRtFutureFunctionNode ChisqInvFutureFunctionNode ChisqInvRtFutureFunctionNode ChisqTestFutureFunctionNode ChooseColsFutureFunctionNode ChooseRowsFutureFunctionNode ChooseStandardFunctionNode CircularErrorNode CleanStandardFunctionNode ClearCommandFunctionNode ClearOutlineCommandFunctionNode ClearPrintAreaCommandFunctionNode ClearRoutingSlipCommandFunctionNode CloseAllCommandFunctionNode CloseCommandFunctionNode CodeStandardFunctionNode ColonDelimitedNodes<L, R> ColonNode ColorPaletteCommandFunctionNode ColumnIndexedKeyword ColumnNode<N> ColumnRangeIndexedKeyword ColumnStandardFunctionNode ColumnWidthCommandFunctionNode ColumnsStandardFunctionNode CombinStandardFunctionNode CombinaFutureFunctionNode CombinationCommandFunctionNode CommaDelimitedNodes<L, R> CommaNode CommandFunctionNode ComplexStandardFunctionNode ConcatStandardFunctionNode ConcatenateNode ConcatenateStandardFunctionNode ConcatenatedNodePair<L, R> ConcatenatedNodes ConfidenceNormFutureFunctionNode ConfidenceStandardFunctionNode ConfidenceTFutureFunctionNode ConnectErrorNode ConsolidateCommandFunctionNode ConstrainNumericCommandFunctionNode ConvertStandardFunctionNode CopyChartCommandFunctionNode CopyCommandFunctionNode CopyPictureCommandFunctionNode CopyToolCommandFunctionNode CorrelStandardFunctionNode CosStandardFunctionNode CoshStandardFunctionNode CotFutureFunctionNode CothFutureFunctionNode CountAStandardFunctionNode CountBlankStandardFunctionNode CountIfStandardFunctionNode CountIfsStandardFunctionNode CountStandardFunctionNode CoupDayBsStandardFunctionNode CoupDaysNcStandardFunctionNode CoupDaysStandardFunctionNode CoupNcdStandardFunctionNode CoupNumStandardFunctionNode CoupPcdStandardFunctionNode CovarStandardFunctionNode CovariancePFutureFunctionNode CovarianceSFutureFunctionNode CreateNamesCommandFunctionNode CreateObjectMacroFunctionNode CreatePublisherCommandFunctionNode CritBinomStandardFunctionNode CscFutureFunctionNode CschFutureFunctionNode CubeKpimemberStandardFunctionNode CubeMemberStandardFunctionNode CubeMemberpropertyStandardFunctionNode CubeRankedmemberStandardFunctionNode CubeSetStandardFunctionNode CubeSetcountStandardFunctionNode CubeValueStandardFunctionNode CumIpmtStandardFunctionNode CumPrIncStandardFunctionNode CustomRepeatMacroFunctionNode CustomUndoMacroFunctionNode CustomizeToolbarCommandFunctionNode CutCommandFunctionNode DAverageStandardFunctionNode DBCSStandardFunctionNode DBStandardFunctionNode DCountAStandardFunctionNode DCountStandardFunctionNode DDBStandardFunctionNode DGetStandardFunctionNode DMaxStandardFunctionNode DMinStandardFunctionNode DProductStandardFunctionNode DStdDevPStandardFunctionNode DStdDevStandardFunctionNode DSumStandardFunctionNode DVarPStandardFunctionNode DVarStandardFunctionNode DataDeleteCommandFunctionNode DataFindCommandFunctionNode DataFindNextCommandFunctionNode DataFindPrevCommandFunctionNode DataFormCommandFunctionNode DataLabelCommandFunctionNode DataSeriesCommandFunctionNode DateStandardFunctionNode DateStringStandardFunctionNode DateValueStandardFunctionNode DatedIfStandardFunctionNode DayStandardFunctionNode Days360StandardFunctionNode DaysFutureFunctionNode DeRefMacroFunctionNode DecToBinStandardFunctionNode DecToHexStandardFunctionNode DecToOctStandardFunctionNode DecimalFutureFunctionNode DefineNameCommandFunctionNode DefineStyleCommandFunctionNode DegreesStandardFunctionNode DeleteArrowCommandFunctionNode DeleteBarMacroFunctionNode DeleteChartAutoFormatCommandFunctionNode DeleteCommandMacroFunctionNode DeleteFormatCommandFunctionNode DeleteMenuMacroFunctionNode DeleteNameCommandFunctionNode DeleteNoteCommandFunctionNode DeleteOverlayCommandFunctionNode DeleteStyleCommandFunctionNode DeleteToolCommandFunctionNode DeleteToolbarMacroFunctionNode DeltaStandardFunctionNode DemoteCommandFunctionNode DetectLanguageFutureFunctionNode DevSqStandardFunctionNode DialogBoxMacroFunctionNode DirectoryMacroFunctionNode DisableInputCommandFunctionNode DiscStandardFunctionNode DisplayCommandFunctionNode DivZeroErrorNode DivideNode DocumentsMacroFunctionNode DollarDeStandardFunctionNode DollarFrStandardFunctionNode DollarStandardFunctionNode DropFutureFunctionNode DuplicateCommandFunctionNode DurationStandardFunctionNode DynamicNode EDateStandardFunctionNode EOMonthStandardFunctionNode EchoMacroFunctionNode EcmaCeilingFutureFunctionNode EditColorCommandFunctionNode EditDeleteCommandFunctionNode EditObjectCommandFunctionNode EditRepeatCommandFunctionNode EditSeriesCommandFunctionNode EditToolCommandFunctionNode EditboxPropertiesCommandFunctionNode EditionOptionsCommandFunctionNode EffectStandardFunctionNode ElseIfMacroFunctionNode ElseMacroFunctionNode EmptyArgumentNode EnableCommandMacroFunctionNode EnableObjectCommandFunctionNode EnableTipwizardCommandFunctionNode EnableToolMacroFunctionNode EncodeUrlFutureFunctionNode EndIfMacroFunctionNode EnterDataCommandFunctionNode EqualLiteralNode EqualNode EqualPrefixedNode ErfCPreciseFutureFunctionNode ErfCStandardFunctionNode ErfPreciseFutureFunctionNode ErfStandardFunctionNode ErrorMacroFunctionNode ErrorNode ErrorTypeStandardFunctionNode ErrorbarXCommandFunctionNode ErrorbarYCommandFunctionNode EuroConvertFutureFunctionNode EvaluateMacroFunctionNode EvenStandardFunctionNode ExactStandardFunctionNode ExecMacroFunctionNode ExecuteMacroFunctionNode ExpStandardFunctionNode ExpandFutureFunctionNode ExponDistFutureFunctionNode ExponDistStandardFunctionNode ExpressionNode Represents a node that can be evaluated to a value. This base class now includes properties to retain all surrounding whitespace for lossless parsing. ExtendPolygonCommandFunctionNode ExternalErrorNode ExtractCommandFunctionNode FDistFutureFunctionNode FDistRtFutureFunctionNode FDistStandardFunctionNode FInvFutureFunctionNode FInvRtFutureFunctionNode FInvStandardFunctionNode FTestFutureFunctionNode FTestStandardFunctionNode FactDoubleStandardFunctionNode FactStandardFunctionNode FalseStandardFunctionNode FcloseMacroFunctionNode FieldErrorNode FieldValueFutureFunctionNode FileCloseCommandFunctionNode FileDeleteCommandFunctionNode FilesMacroFunctionNode FillAutoCommandFunctionNode FillDownCommandFunctionNode FillGroupCommandFunctionNode FillLeftCommandFunctionNode FillRightCommandFunctionNode FillUpCommandFunctionNode FilterAdvancedCommandFunctionNode FilterShowAllCommandFunctionNode FilterWorksheetFunctionNode FilterXmlFutureFunctionNode FindBStandardFunctionNode FindFileCommandFunctionNode FindStandardFunctionNode FisherInvStandardFunctionNode FisherStandardFunctionNode FixedStandardFunctionNode FloorMathFutureFunctionNode FloorPreciseFutureFunctionNode FloorStandardFunctionNode FontCommandFunctionNode FontPropertiesCommandFunctionNode FopenMacroFunctionNode ForCellMacroFunctionNode ForMacroFunctionNode ForecastEtsConfIntFutureFunctionNode ForecastEtsFutureFunctionNode ForecastEtsSeasonalityFutureFunctionNode ForecastEtsStatFutureFunctionNode ForecastLinearFutureFunctionNode ForecastStandardFunctionNode FormatAutoCommandFunctionNode FormatChartCommandFunctionNode FormatCharttypeCommandFunctionNode FormatFontCommandFunctionNode FormatLegendCommandFunctionNode FormatMainCommandFunctionNode FormatMoveCommandFunctionNode FormatNumberCommandFunctionNode FormatOverlayCommandFunctionNode FormatShapeCommandFunctionNode FormatSizeCommandFunctionNode FormatTextCommandFunctionNode FormulaArrayCommandFunctionNode FormulaCommandFunctionNode FormulaConvertMacroFunctionNode FormulaFillCommandFunctionNode FormulaFindCommandFunctionNode FormulaFindNextCommandFunctionNode FormulaFindPrevCommandFunctionNode FormulaGotoCommandFunctionNode FormulaReplaceCommandFunctionNode FormulaTextFutureFunctionNode FposMacroFunctionNode FreadMacroFunctionNode FreadlnMacroFunctionNode FreezePanesCommandFunctionNode FrequencyStandardFunctionNode FsizeMacroFunctionNode FullCommandFunctionNode FullScreenCommandFunctionNode FunctionCallNode FunctionPrefixNode FunctionWizardCommandFunctionNode FutureFunctionNode FvScheduleStandardFunctionNode FvStandardFunctionNode FwriteMacroFunctionNode FwritelnMacroFunctionNode Gallery3DAreaCommandFunctionNode Gallery3DBarCommandFunctionNode Gallery3DColumnCommandFunctionNode Gallery3DLineCommandFunctionNode Gallery3DPieCommandFunctionNode Gallery3DSurfaceCommandFunctionNode GalleryAreaCommandFunctionNode GalleryBarCommandFunctionNode GalleryColumnCommandFunctionNode GalleryCustomCommandFunctionNode GalleryDoughnutCommandFunctionNode GalleryLineCommandFunctionNode GalleryPieCommandFunctionNode GalleryRadarCommandFunctionNode GalleryScatterCommandFunctionNode GammaDistFutureFunctionNode GammaDistStandardFunctionNode GammaFutureFunctionNode GammaInvFutureFunctionNode GammaInvStandardFunctionNode GammaLnPreciseFutureFunctionNode GammaLnStandardFunctionNode GaussFutureFunctionNode GcdStandardFunctionNode GeStepStandardFunctionNode GeoMeanStandardFunctionNode GetBarMacroFunctionNode GetCellMacroFunctionNode GetChartItemMacroFunctionNode GetDefMacroFunctionNode GetDocumentMacroFunctionNode GetFormulaMacroFunctionNode GetLinkInfoMacroFunctionNode GetMovieMacroFunctionNode GetNameMacroFunctionNode GetNoteMacroFunctionNode GetObjectMacroFunctionNode GetPivotDataStandardFunctionNode GetToolMacroFunctionNode GetToolbarMacroFunctionNode GetWindowMacroFunctionNode GetWorkbookMacroFunctionNode GetWorkspaceMacroFunctionNode GettingDataErrorNode GoalSeekCommandFunctionNode GotoMacroFunctionNode GreaterThanLiteralNode GreaterThanNode GreaterThanOrEqualLiteralNode GreaterThanOrEqualNode GridlinesCommandFunctionNode GroupByFutureFunctionNode GroupMacroFunctionNode GrowthStandardFunctionNode HLineCommandFunctionNode HLookupStandardFunctionNode HPageCommandFunctionNode HStackFutureFunctionNode HaltMacroFunctionNode HarMeanStandardFunctionNode HashLiteralNode HelpMacroFunctionNode HexToBinStandardFunctionNode HexToDecStandardFunctionNode HexToOctStandardFunctionNode HideCommandFunctionNode HideDialogCommandFunctionNode HideObjectCommandFunctionNode HideallInkannotsCommandFunctionNode HideallNotesCommandFunctionNode HidecurrNoteCommandFunctionNode HourStandardFunctionNode HscrollCommandFunctionNode HypGeomDistFutureFunctionNode HypGeomDistStandardFunctionNode HyperlinkStandardFunctionNode IfErrorStandardFunctionNode IfNaFutureFunctionNode IfStandardFunctionNode IfsStandardFunctionNode ImAbsStandardFunctionNode ImAginaryStandardFunctionNode ImArgumentStandardFunctionNode ImConjugateStandardFunctionNode ImCosStandardFunctionNode ImCoshFutureFunctionNode ImCotFutureFunctionNode ImCscFutureFunctionNode ImCschFutureFunctionNode ImDivStandardFunctionNode ImExpStandardFunctionNode ImLnStandardFunctionNode ImLog10StandardFunctionNode ImLogToStandardFunctionNode ImPowerStandardFunctionNode ImProductStandardFunctionNode ImRealStandardFunctionNode ImSecFutureFunctionNode ImSechFutureFunctionNode ImSinStandardFunctionNode ImSinhFutureFunctionNode ImSqrtStandardFunctionNode ImSubStandardFunctionNode ImSumStandardFunctionNode ImTanFutureFunctionNode ImageFutureFunctionNode ImplicitIntersectionNode IndexStandardFunctionNode IndexedPivotField IndirectStandardFunctionNode InfoStandardFunctionNode InitiateMacroFunctionNode InputMacroFunctionNode InsertCommandFunctionNode InsertMapObjectCommandFunctionNode InsertObjectCommandFunctionNode InsertPictureCommandFunctionNode InsertTitleCommandFunctionNode InsertdatatableCommandFunctionNode IntStandardFunctionNode InterceptStandardFunctionNode IntersectionLiteralNode IntersectionNode IntrateStandardFunctionNode IpmtStandardFunctionNode IrrStandardFunctionNode IsBlankStandardFunctionNode IsErrStandardFunctionNode IsErrorStandardFunctionNode IsEvenStandardFunctionNode IsFormulaFutureFunctionNode IsLogicalStandardFunctionNode IsNaStandardFunctionNode IsNontextStandardFunctionNode IsNumberStandardFunctionNode IsOCeilingFutureFunctionNode IsOWeekNumFutureFunctionNode IsOddStandardFunctionNode IsOmittedFutureFunctionNode IsPmtStandardFunctionNode IsRefStandardFunctionNode IsTextStandardFunctionNode IsThaiDigitStandardFunctionNode JisFutureFunctionNode JustifyCommandFunctionNode KurtStandardFunctionNode LabelPropertiesCommandFunctionNode LambdaFutureFunctionNode LargeStandardFunctionNode LastErrorMacroFunctionNode LayoutCommandFunctionNode LcmStandardFunctionNode LeftBracketNode LeftStandardFunctionNode LeftbStandardFunctionNode LegendCommandFunctionNode LenStandardFunctionNode LenbStandardFunctionNode LessThanLiteralNode LessThanNode LessThanOrEqualLiteralNode LessThanOrEqualNode LetFutureFunctionNode LinePrintCommandFunctionNode LinestStandardFunctionNode LinkComboCommandFunctionNode LinkFormatCommandFunctionNode LinksMacroFunctionNode ListNamesCommandFunctionNode ListboxPropertiesCommandFunctionNode LnStandardFunctionNode Log10StandardFunctionNode LogInvStandardFunctionNode LogNormDistFutureFunctionNode LogNormDistStandardFunctionNode LogNormInvFutureFunctionNode LogStandardFunctionNode LogestStandardFunctionNode LogicalNode LookupStandardFunctionNode LowerStandardFunctionNode MUnitFutureFunctionNode MacroFunctionNode MacroOptionsCommandFunctionNode MailAddMailerCommandFunctionNode MailDeleteMailerCommandFunctionNode MailEditMailerCommandFunctionNode MailForwardCommandFunctionNode MailLogOffCommandFunctionNode MailLogOnCommandFunctionNode MailNextLetterCommandFunctionNode MailReplyAllCommandFunctionNode MailReplyCommandFunctionNode MailSendMailerCommandFunctionNode MainChartCommandFunctionNode MainChartTypeCommandFunctionNode MakeArrayFutureFunctionNode MapFutureFunctionNode MatchStandardFunctionNode MaxStandardFunctionNode MaxaStandardFunctionNode MaxifsStandardFunctionNode MdetermStandardFunctionNode MdurationStandardFunctionNode MedianStandardFunctionNode MenuEditorCommandFunctionNode MergeStylesCommandFunctionNode MessageCommandFunctionNode MidStandardFunctionNode MidbStandardFunctionNode MinStandardFunctionNode MinaStandardFunctionNode MinifsStandardFunctionNode MinusLiteralNode MinuteStandardFunctionNode MinverseStandardFunctionNode MirrStandardFunctionNode MmultStandardFunctionNode ModStandardFunctionNode ModeMultFutureFunctionNode ModeSnglFutureFunctionNode ModeStandardFunctionNode ModuloNode MonthStandardFunctionNode MoveBrkCommandFunctionNode MoveToolCommandFunctionNode MovieCommandMacroFunctionNode MroundStandardFunctionNode MultinomialStandardFunctionNode MultiplyNode NAErrorNode NStandardFunctionNode NaStandardFunctionNode NameErrorNode NameNode NamedRangeNode NamesMacroFunctionNode NegBinomDistFutureFunctionNode NegBinomDistStandardFunctionNode NetworkDaysIntlFutureFunctionNode NetworkDaysStandardFunctionNode NewCommandFunctionNode NewWindowCommandFunctionNode NewwebqueryCommandFunctionNode NextMacroFunctionNode Node The base class for all nodes in the Abstract Syntax Tree (AST). NominalStandardFunctionNode NormDistFutureFunctionNode NormDistStandardFunctionNode NormInvFutureFunctionNode NormInvStandardFunctionNode NormSDistFutureFunctionNode NormSInvFutureFunctionNode NormalCommandFunctionNode NormsDistStandardFunctionNode NormsInvStandardFunctionNode NotEqualLiteralNode NotEqualNode NotStandardFunctionNode NoteMacroFunctionNode NowStandardFunctionNode NperStandardFunctionNode NpvStandardFunctionNode NullErrorNode NumErrorNode NumberStringStandardFunctionNode NumberValueFutureFunctionNode NumericLiteralFormatSpecifier<N> NumericLiteralNode<N> ObjectPropertiesCommandFunctionNode ObjectProtectionCommandFunctionNode OctToBinStandardFunctionNode OctToDecStandardFunctionNode OctToHexStandardFunctionNode OddFPriceStandardFunctionNode OddFYieldStandardFunctionNode OddLPriceStandardFunctionNode OddLYieldStandardFunctionNode OddStandardFunctionNode OffsetStandardFunctionNode OnDataCommandFunctionNode OnDoubleclickCommandFunctionNode OnEntryCommandFunctionNode OnKeyCommandFunctionNode OnRecalcCommandFunctionNode OnSheetCommandFunctionNode OnTimeCommandFunctionNode OnWindowCommandFunctionNode OpenCommandFunctionNode OpenDialogMacroFunctionNode OpenLinksCommandFunctionNode OpenMailCommandFunctionNode OpenTextCommandFunctionNode OptionsCalculationCommandFunctionNode OptionsChartCommandFunctionNode OptionsEditCommandFunctionNode OptionsGeneralCommandFunctionNode OptionsListsAddCommandFunctionNode OptionsListsDeleteCommandFunctionNode OptionsListsGetMacroFunctionNode OptionsMeCommandFunctionNode OptionsMenonoCommandFunctionNode OptionsSaveCommandFunctionNode OptionsSpellCommandFunctionNode OptionsTransitionCommandFunctionNode OptionsViewCommandFunctionNode OrStandardFunctionNode OutlineCommandFunctionNode OverlayChartTypeCommandFunctionNode OverlayCommandFunctionNode PDurationFutureFunctionNode PageSetupCommandFunctionNode ParenthesizedExpressionNode Represents an expression that was explicitly enclosed in parentheses in the original formula. ParseCommandFunctionNode PasteCommandFunctionNode PasteLinkCommandFunctionNode PastePictureCommandFunctionNode PastePictureLinkCommandFunctionNode PasteSpecialCommandFunctionNode PasteToolCommandFunctionNode PatternsCommandFunctionNode PauseMacroFunctionNode PearsonStandardFunctionNode PercentLiteralNode PercentNode PercentOfFutureFunctionNode PercentRankExcFutureFunctionNode PercentRankIncFutureFunctionNode PercentRankStandardFunctionNode PercentileExcFutureFunctionNode PercentileIncFutureFunctionNode PercentileStandardFunctionNode PermutStandardFunctionNode PermutationaFutureFunctionNode PhiFutureFunctionNode PhoneticStandardFunctionNode PiStandardFunctionNode PicklistCommandFunctionNode PivotAddFieldsCommandFunctionNode PivotByFutureFunctionNode PivotField PivotFieldCommandFunctionNode PivotFieldGroupCommandFunctionNode PivotFieldOffset PivotFieldPropertiesCommandFunctionNode PivotFieldUngroupCommandFunctionNode PivotItemCommandFunctionNode PivotItemPropertiesCommandFunctionNode PivotRefreshCommandFunctionNode PivotShowPagesCommandFunctionNode PivotTableChartCommandFunctionNode PivotTableWizardCommandFunctionNode PlusLiteralNode PmtStandardFunctionNode PoissonDistFutureFunctionNode PoissonStandardFunctionNode PokeMacroFunctionNode PostDocumentCommandFunctionNode PowerNode PowerStandardFunctionNode PpmtStandardFunctionNode PqsourceFutureFunctionNode PrecisionCommandFunctionNode PreferredCommandFunctionNode PrefixNode PressToolMacroFunctionNode PriceStandardFunctionNode PricediscStandardFunctionNode PricematStandardFunctionNode PrintCommandFunctionNode PrintPreviewCommandFunctionNode PrinterSetupCommandFunctionNode ProbStandardFunctionNode ProductStandardFunctionNode PromoteCommandFunctionNode ProperStandardFunctionNode ProtectDocumentCommandFunctionNode ProtectRevisionsCommandFunctionNode PushbuttonPropertiesCommandFunctionNode PvStandardFunctionNode PyFunctionNode PythonErrorNode PythonStrFutureFunctionNode PythonTypeFutureFunctionNode PythonTypenameFutureFunctionNode QuartileExcFutureFunctionNode QuartileIncFutureFunctionNode QuartileStandardFunctionNode QueryStringFutureFunctionNode QuestionMarkNode QuitCommandFunctionNode QuotedSheetNode QuotientStandardFunctionNode R1C1AbsoluteColumnNode R1C1AbsoluteRowNode R1C1CellNode R1C1ColumnNode R1C1CurrentColumnNode R1C1CurrentRowNode R1C1RelativeColumnNode R1C1RelativeRowNode R1C1RowNode RadiansStandardFunctionNode RandArrayFutureFunctionNode RandStandardFunctionNode RandbetweenStandardFunctionNode RangeNode RankAvgFutureFunctionNode RankEqFutureFunctionNode RankStandardFunctionNode RateStandardFunctionNode ReceivedStandardFunctionNode ReduceFutureFunctionNode RefTextMacroFunctionNode RegexExtractFutureFunctionNode RegexReplaceFutureFunctionNode RegexTestFutureFunctionNode RegisterIdMacroFunctionNode RegisterMacroFunctionNode RelRefMacroFunctionNode RemoveListItemCommandFunctionNode RemovePageBreakCommandFunctionNode RenameCommandMacroFunctionNode RenameObjectCommandFunctionNode ReplaceFontCommandFunctionNode ReplaceStandardFunctionNode ReplacebStandardFunctionNode ReptStandardFunctionNode RequestMacroFunctionNode ResetToolCommandFunctionNode ResetToolbarMacroFunctionNode RestartMacroFunctionNode ResultMacroFunctionNode ResumeMacroFunctionNode ReturnMacroFunctionNode RightBStandardFunctionNode RightBracketNode RightStandardFunctionNode RmPrintAreaCommandFunctionNode RomanStandardFunctionNode RoundBahtDownStandardFunctionNode RoundBahtUpStandardFunctionNode RoundDownStandardFunctionNode RoundStandardFunctionNode RoundUpStandardFunctionNode RouteDocumentCommandFunctionNode RoutingSlipCommandFunctionNode RowHeightCommandFunctionNode RowNode<N> RowStandardFunctionNode RowsStandardFunctionNode RriFutureFunctionNode RsqStandardFunctionNode RtdStandardFunctionNode RunCommandFunctionNode SaveAsCommandFunctionNode SaveCommandFunctionNode SaveCopyAsCommandFunctionNode SaveDialogMacroFunctionNode SaveNewObjectCommandFunctionNode SaveToolbarMacroFunctionNode SaveWorkbookCommandFunctionNode SaveWorkspaceCommandFunctionNode ScaleCommandFunctionNode ScanFutureFunctionNode ScenarioAddCommandFunctionNode ScenarioCellsCommandFunctionNode ScenarioDeleteCommandFunctionNode ScenarioEditCommandFunctionNode ScenarioGetMacroFunctionNode ScenarioMergeCommandFunctionNode ScenarioShowCommandFunctionNode ScenarioShowNextCommandFunctionNode ScenarioSummaryCommandFunctionNode ScrollbarPropertiesCommandFunctionNode SearchStandardFunctionNode SearchbStandardFunctionNode SecFutureFunctionNode SechFutureFunctionNode SecondStandardFunctionNode SelectAllCommandFunctionNode SelectChartCommandFunctionNode SelectCommandFunctionNode SelectEndCommandFunctionNode SelectLastCellCommandFunctionNode SelectListItemCommandFunctionNode SelectPlotAreaCommandFunctionNode SelectSpecialCommandFunctionNode SelectionMacroFunctionNode SemicolonDelimitedNodes<L, R> SemicolonNode SendKeysCommandFunctionNode SendMailCommandFunctionNode SendToBackCommandFunctionNode SequenceFutureFunctionNode SeriesAxesCommandFunctionNode SeriesOrderCommandFunctionNode SeriesStandardFunctionNode SeriesXCommandFunctionNode SeriesYCommandFunctionNode SeriessumStandardFunctionNode SetControlValueCommandFunctionNode SetCriteriaCommandFunctionNode SetDatabaseCommandFunctionNode SetDialogDefaultCommandFunctionNode SetDialogFocusCommandFunctionNode SetExtractCommandFunctionNode SetListItemCommandFunctionNode SetNameMacroFunctionNode SetPageBreakCommandFunctionNode SetPreferredCommandFunctionNode SetPrintAreaCommandFunctionNode SetPrintTitlesCommandFunctionNode SetUpdateStatusCommandFunctionNode SetValueMacroFunctionNode ShareCommandFunctionNode ShareNameCommandFunctionNode SheetBackgroundCommandFunctionNode SheetFutureFunctionNode SheetNode Represents a single sheet name, which may be quoted or unquoted, and may have a workbook index. SheetRangeNode Represents a range of sheets, e.g., \"Sheet1:Sheet3\". SheetReferenceNode Represents a reference to a single sheet, e.g., \"Sheet1!A1\". SheetsFutureFunctionNode ShortMenusCommandFunctionNode ShowActiveCellCommandFunctionNode ShowBarMacroFunctionNode ShowClipboardCommandFunctionNode ShowDetailCommandFunctionNode ShowDialogCommandFunctionNode ShowInfoCommandFunctionNode ShowLevelsCommandFunctionNode ShowToolbarCommandFunctionNode SignStandardFunctionNode SinStandardFunctionNode SinhStandardFunctionNode SkewPFutureFunctionNode SkewStandardFunctionNode SlashLiteralNode SlnStandardFunctionNode SlopeStandardFunctionNode SmallStandardFunctionNode SortByFutureFunctionNode SortSpecialCommandFunctionNode SortWorksheetFunctionNode SoundNoteCommandFunctionNode SoundPlayCommandFunctionNode SpellingCheckMacroFunctionNode SpellingCommandFunctionNode SpillErrorNode SplitCommandFunctionNode SqrtStandardFunctionNode SqrtpiStandardFunctionNode StDevAStandardFunctionNode StDevPFutureFunctionNode StDevPStandardFunctionNode StDevPaStandardFunctionNode StDevSFutureFunctionNode StDevStandardFunctionNode StandardFontCommandFunctionNode StandardFunctionNode StandardWidthCommandFunctionNode StandardizeStandardFunctionNode StepMacroFunctionNode SteyxStandardFunctionNode StockHistoryFutureFunctionNode StringNode StructureAbsoluteColumn StructureAllReferenceNode StructureAllRowsReferenceNode StructureColumn StructureColumnRange StructureDataReferenceNode StructureDataTotalsReferenceNode StructureHeadersDataReferenceNode StructureHeadersReferenceNode StructureThisRowByPrefixReferenceNode StructureThisRowColumnReferenceNode StructureThisRowReferenceNode StructureTotalsReferenceNode StructuredReferenceIndicesUnion StructuredReferenceIntersection StructuredReferenceKeywordNode StructuredReferenceNode StructuredReferenceUnion StyleCommandFunctionNode SubscribeToCommandFunctionNode SubstituteStandardFunctionNode SubtotalCreateCommandFunctionNode SubtotalRemoveCommandFunctionNode SubtotalStandardFunctionNode SubtractNode SumIfStandardFunctionNode SumIfsStandardFunctionNode SumProductStandardFunctionNode SumSqStandardFunctionNode SumStandardFunctionNode SumXMyToStandardFunctionNode SumXToMyToStandardFunctionNode SumXToPyToStandardFunctionNode SummaryInfoCommandFunctionNode SwitchStandardFunctionNode SydStandardFunctionNode TBillEqStandardFunctionNode TBillPriceStandardFunctionNode TBillYieldStandardFunctionNode TDistFutureFunctionNode TDistRtFutureFunctionNode TDistStandardFunctionNode TDistTwoTFutureFunctionNode TInvFutureFunctionNode TInvStandardFunctionNode TInvToTFutureFunctionNode TStandardFunctionNode TTestFutureFunctionNode TTestStandardFunctionNode TabOrderCommandFunctionNode TableCommandFunctionNode TakeFutureFunctionNode TanStandardFunctionNode TanhStandardFunctionNode TerminateMacroFunctionNode TextAfterFutureFunctionNode TextBeforeFutureFunctionNode TextBoxMacroFunctionNode TextJoinStandardFunctionNode TextRefMacroFunctionNode TextSplitFutureFunctionNode TextStandardFunctionNode TextToColumnsCommandFunctionNode ThaiDayOfWeekStandardFunctionNode ThaiDigitStandardFunctionNode ThaiMonthOfYearStandardFunctionNode ThaiNumSoundStandardFunctionNode ThaiNumStringStandardFunctionNode ThaiStringLengthStandardFunctionNode ThaiYearStandardFunctionNode TimeStandardFunctionNode TimeValueStandardFunctionNode ToColFutureFunctionNode ToRowFutureFunctionNode TodayStandardFunctionNode TracerClearCommandFunctionNode TracerDisplayCommandFunctionNode TracerErrorCommandFunctionNode TracerNavigateCommandFunctionNode TranslateFutureFunctionNode TransposeStandardFunctionNode TraverseNotesCommandFunctionNode TrendStandardFunctionNode TrimMeanStandardFunctionNode TrimRangeFutureFunctionNode TrimStandardFunctionNode TrueStandardFunctionNode TruncStandardFunctionNode TypeStandardFunctionNode UnaryMinusNode UnaryOperatorNode UnaryPlusNode UndoCommandFunctionNode UngroupCommandFunctionNode UngroupSheetsCommandFunctionNode UnhideCommandFunctionNode UnicharFutureFunctionNode UnicodeFutureFunctionNode UnionNode UniqueFutureFunctionNode UnknownErrorNode UnlockedNextCommandFunctionNode UnlockedPrevCommandFunctionNode UnprotectRevisionsCommandFunctionNode UnregisterMacroFunctionNode UpdateLinkCommandFunctionNode UpperStandardFunctionNode UsDollarStandardFunctionNode UserDefinedFunctionNode VLineCommandFunctionNode VLookupStandardFunctionNode VPageCommandFunctionNode VStackFutureFunctionNode ValueErrorNode ValueStandardFunctionNode ValueToTextFutureFunctionNode VarAStandardFunctionNode VarPFutureFunctionNode VarPStandardFunctionNode VarPaStandardFunctionNode VarSFutureFunctionNode VarStandardFunctionNode VbaActivateCommandFunctionNode VbaInsertFileCommandFunctionNode VbaMakeAddinCommandFunctionNode VbaProcedureDefinitionCommandFunctionNode VdbStandardFunctionNode View3DCommandFunctionNode ViewDefineCommandFunctionNode ViewDeleteCommandFunctionNode ViewGetMacroFunctionNode ViewShowCommandFunctionNode VolatileMacroFunctionNode VscrollCommandFunctionNode WaitCommandFunctionNode WebPublishCommandFunctionNode WebServiceFutureFunctionNode WeekNumStandardFunctionNode WeekdayStandardFunctionNode WeibullDistFutureFunctionNode WeibullStandardFunctionNode WhileMacroFunctionNode WhitespaceNode WindowMaximizeCommandFunctionNode WindowMinimizeCommandFunctionNode WindowMoveCommandFunctionNode WindowRestoreCommandFunctionNode WindowSizeCommandFunctionNode WindowTitleMacroFunctionNode WindowsMacroFunctionNode WorkbookActivateCommandFunctionNode WorkbookAddCommandFunctionNode WorkbookCopyCommandFunctionNode WorkbookDeleteCommandFunctionNode WorkbookHideCommandFunctionNode WorkbookInsertCommandFunctionNode WorkbookMoveCommandFunctionNode WorkbookNameCommandFunctionNode WorkbookNewCommandFunctionNode WorkbookNextCommandFunctionNode WorkbookOptionsCommandFunctionNode WorkbookPrevCommandFunctionNode WorkbookProtectCommandFunctionNode WorkbookReferenceNode Represents a workbook index, e.g., \"[1]\" or \"[MyWorkbook.xlsx]\". WorkbookScrollCommandFunctionNode WorkbookSelectCommandFunctionNode WorkbookTabSplitCommandFunctionNode WorkbookUnhideCommandFunctionNode WorkdayIntlFutureFunctionNode WorkdayStandardFunctionNode WorkgroupCommandFunctionNode WorkgroupOptionsCommandFunctionNode WorksheetFunctionNode WorkspaceCommandFunctionNode WrapColsFutureFunctionNode WrapRowsFutureFunctionNode XLookupFutureFunctionNode XMatchFutureFunctionNode XirrStandardFunctionNode XlbgnmFunctionPrefixNode Represents the \"_xlbgnm.\" prefix for Big Grid Name compatibility. string? representation: \"_xlbgnm.\" Used when old defined names conflict with new cell references in extended column ranges. XlfnFunctionPrefixNode Represents the \"_xlfn.\" prefix for Excel Function Name resolution. string? representation: \"_xlfn.\" Used for new Excel functions that may not be recognized by older Excel versions. This prefix indicates that the function name should be resolved at runtime by the Excel engine. XllFunctionPrefixNode Represents the \"_xll.\" prefix for Excel Library functions. string? representation: \"_xll.\" Used for functions provided by Excel add-in libraries (XLL files). These functions extend Excel's capabilities through custom libraries and external add-ins. XlnmFunctionPrefixNode Represents the \"_xlnm.\" prefix for Excel built-in defined names. string? representation: \"_xlnm.\" Used for internal named ranges and built-in names like Print_Area. XlopPrefixNode Represents the \"_xlop.\" prefix for LAMBDA optional parameters. string? representation: \"_xlop.\" Used internally by Excel to identify optional arguments in LAMBDA. This prefix node derives directly from PrefixNode (not FunctionPrefixNode). XlpmFunctionPrefixNode Represents the \"_xlpm.\" prefix for LAMBDA/LET parameter names. string? representation: \"_xlpm.\" Used internally in Excel for lambda and let function parameters. XlwsFunctionPrefixNode Represents the \"_xlws.\" prefix for Excel Worksheet functions. string? representation: \"_xlws.\" Used for worksheet-specific functions and operations in Excel. These functions provide worksheet manipulation, cell operations, and sheet-level functionality. XnpvStandardFunctionNode XorFutureFunctionNode YearFracStandardFunctionNode YearStandardFunctionNode YieldDiscStandardFunctionNode YieldMatStandardFunctionNode YieldStandardFunctionNode ZTestFutureFunctionNode ZTestStandardFunctionNode ZoomCommandFunctionNode"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.FormulaParser.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.FormulaParser.html",
    "title": "Class FormulaParser | OpenLanguage Documentation",
    "summary": "Class FormulaParser Namespace OpenLanguage.SpreadsheetML.Formula Assembly OpenLanguage.dll A parser for Excel-like formulas using the GPLEX/GPPG toolchain. public static class FormulaParser Inheritance object FormulaParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Parse(IEnumerable<char>?) public static Node Parse(IEnumerable<char>? chars) Parameters chars IEnumerable<char> Returns Node Parse(string?) public static Node Parse(string? formulaText) Parameters formulaText string Returns Node TryParse(IEnumerable<char>?) public static Node? TryParse(IEnumerable<char>? chars) Parameters chars IEnumerable<char> Returns Node TryParse(string?) public static Node? TryParse(string? chars) Parameters chars string Returns Node"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Generated.CodePageHandling.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Generated.CodePageHandling.html",
    "title": "Class CodePageHandling | OpenLanguage Documentation",
    "summary": "Class CodePageHandling Namespace OpenLanguage.SpreadsheetML.Formula.Generated Assembly OpenLanguage.dll public static class CodePageHandling Inheritance object CodePageHandling Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCodePage(string) public static int GetCodePage(string option) Parameters option string Returns int"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Generated.Parser.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Generated.Parser.html",
    "title": "Class Parser | OpenLanguage Documentation",
    "summary": "Class Parser Namespace OpenLanguage.SpreadsheetML.Formula.Generated Assembly OpenLanguage.dll public class Parser : ShiftReduceParser<ValueType, LexLocation> Inheritance object ShiftReduceParser<ValueType, LexLocation> Parser Inherited Members ShiftReduceParser<ValueType, LexLocation>.Scanner ShiftReduceParser<ValueType, LexLocation>.CurrentSemanticValue ShiftReduceParser<ValueType, LexLocation>.CurrentLocationSpan ShiftReduceParser<ValueType, LexLocation>.NextToken ShiftReduceParser<ValueType, LexLocation>.ValueStack ShiftReduceParser<ValueType, LexLocation>.LocationStack ShiftReduceParser<ValueType, LexLocation>.InitRules(Rule[]) ShiftReduceParser<ValueType, LexLocation>.InitStates(State[]) ShiftReduceParser<ValueType, LexLocation>.InitStateTable(int) ShiftReduceParser<ValueType, LexLocation>.InitSpecialTokens(int, int) ShiftReduceParser<ValueType, LexLocation>.InitNonTerminals(string[]) ShiftReduceParser<ValueType, LexLocation>.YYAccept() ShiftReduceParser<ValueType, LexLocation>.YYAbort() ShiftReduceParser<ValueType, LexLocation>.YYError() ShiftReduceParser<ValueType, LexLocation>.YYRecovering ShiftReduceParser<ValueType, LexLocation>.Initialize() ShiftReduceParser<ValueType, LexLocation>.Parse() ShiftReduceParser<ValueType, LexLocation>.DoAction(int) ShiftReduceParser<ValueType, LexLocation>.yyclearin() ShiftReduceParser<ValueType, LexLocation>.yyerrok() ShiftReduceParser<ValueType, LexLocation>.AddState(int, State) ShiftReduceParser<ValueType, LexLocation>.TerminalToString(int) ShiftReduceParser<ValueType, LexLocation>.CharToString(char) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields root public Node root Field Value Node Methods DoAction(int) Execute the selected action from array. Must be overriden in derived classes. protected override void DoAction(int action) Parameters action int Initialize() Abstract base method. ShiftReduceParser calls this to initialize the base class data structures. Concrete parser classes must override this method. protected override void Initialize() TerminalToString(int) Abstract state class naming terminal symbols. This is overridden by derived classes with the name (or alias) to be used in error messages. protected override string TerminalToString(int terminal) Parameters terminal int The terminal ordinal Returns string"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Generated.ScanBase.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Generated.ScanBase.html",
    "title": "Class ScanBase | OpenLanguage Documentation",
    "summary": "Class ScanBase Namespace OpenLanguage.SpreadsheetML.Formula.Generated Assembly OpenLanguage.dll public abstract class ScanBase : AbstractScanner<ValueType, LexLocation> Inheritance object AbstractScanner<ValueType, LexLocation> ScanBase Inherited Members AbstractScanner<ValueType, LexLocation>.yylval AbstractScanner<ValueType, LexLocation>.yylloc AbstractScanner<ValueType, LexLocation>.yylex() AbstractScanner<ValueType, LexLocation>.yyerror(string, params object[]) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties yylloc Current scanner location property. The value is of the type declared by %YYLTYPE in the parser specification. public override LexLocation yylloc { get; set; } Property Value LexLocation Methods yywrap() protected virtual bool yywrap() Returns bool"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Generated.ScanObj.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Generated.ScanObj.html",
    "title": "Class ScanObj | OpenLanguage Documentation",
    "summary": "Class ScanObj Namespace OpenLanguage.SpreadsheetML.Formula.Generated Assembly OpenLanguage.dll public class ScanObj Inheritance object ScanObj Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ScanObj(int, ValueType, LexLocation) public ScanObj(int t, ValueType val, LexLocation loc) Parameters t int val ValueType loc LexLocation Fields token public int token Field Value int yylloc public LexLocation yylloc Field Value LexLocation yylval public ValueType yylval Field Value ValueType"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Generated.Tokens.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Generated.Tokens.html",
    "title": "Enum Tokens | OpenLanguage Documentation",
    "summary": "Enum Tokens Namespace OpenLanguage.SpreadsheetML.Formula.Generated Assembly OpenLanguage.dll public enum Tokens Fields EOF = 3 R1C1_COLUMN_PREFIX = 4 R1C1_ROW_PREFIX = 5 T_A1_COLUMN = 1058 T_A1_ROW = 1057 T_AMPERSAND = 1097 T_ASTERISK = 1095 T_AT_SYMBOL = 1061 T_BANG = 1060 T_BLOCKED_ERROR = 1080 T_BUSY_ERROR = 1081 T_CALC_ERROR = 1079 T_CARET = 1098 T_CIRCULAR_ERROR = 1082 T_COLON = 1112 T_COMMA = 1111 T_CONNECT_ERROR = 1083 T_DIV0_ERROR = 1070 T_DOLLAR = 1053 T_EMPTY_BRACKETS = 1114 T_EQ = 1101 T_EXTERNAL_ERROR = 1084 T_FIELD_ERROR = 1085 T_FLOATING_POINT_CONSTANT = 1052 T_FUNC_A1_R1C1 = 6 T_FUNC_ABS = 674 T_FUNC_ABSREF = 566 T_FUNC_ACCRINT = 675 T_FUNC_ACCRINTM = 676 T_FUNC_ACOS = 677 T_FUNC_ACOSH = 678 T_FUNC_ACOT = 399 T_FUNC_ACOTH = 400 T_FUNC_ACTIVATE = 7 T_FUNC_ACTIVATE_NEXT = 8 T_FUNC_ACTIVATE_NOTES = 9 T_FUNC_ACTIVATE_PREV = 10 T_FUNC_ACTIVE_CELL = 567 T_FUNC_ACTIVE_CELL_FONT = 11 T_FUNC_ADDIN_MANAGER = 18 T_FUNC_ADDRESS = 679 T_FUNC_ADD_ARROW = 12 T_FUNC_ADD_BAR = 568 T_FUNC_ADD_CHART_AUTOFORMAT = 13 T_FUNC_ADD_COMMAND = 569 T_FUNC_ADD_LIST_ITEM = 14 T_FUNC_ADD_MENU = 570 T_FUNC_ADD_OVERLAY = 15 T_FUNC_ADD_PRINT_AREA = 16 T_FUNC_ADD_TOOL = 17 T_FUNC_ADD_TOOLBAR = 571 T_FUNC_AGGREGATE = 401 T_FUNC_ALERT = 19 T_FUNC_ALIGNMENT = 20 T_FUNC_AMORDEGRC = 680 T_FUNC_AMORLINC = 681 T_FUNC_AND = 682 T_FUNC_APPLY_NAMES = 28 T_FUNC_APPLY_STYLE = 29 T_FUNC_APP_ACTIVATE = 21 T_FUNC_APP_ACTIVATE_MICROSOFT = 22 T_FUNC_APP_MAXIMIZE = 23 T_FUNC_APP_MINIMIZE = 24 T_FUNC_APP_MOVE = 25 T_FUNC_APP_RESTORE = 26 T_FUNC_APP_SIZE = 27 T_FUNC_APP_TITLE = 572 T_FUNC_ARABIC = 402 T_FUNC_AREAS = 683 T_FUNC_ARGUMENT = 573 T_FUNC_ARRANGE_ALL = 30 T_FUNC_ARRAYTOTEXT = 403 T_FUNC_ASC = 684 T_FUNC_ASIN = 685 T_FUNC_ASINH = 686 T_FUNC_ASSIGN_TO_OBJECT = 31 T_FUNC_ASSIGN_TO_TOOL = 32 T_FUNC_ATAN = 687 T_FUNC_ATAN2 = 688 T_FUNC_ATANH = 689 T_FUNC_ATTACH_TEXT = 33 T_FUNC_ATTACH_TOOLBARS = 34 T_FUNC_ATTRIBUTES = 35 T_FUNC_AUTOCORRECT = 37 T_FUNC_AUTO_OUTLINE = 36 T_FUNC_AVEDEV = 690 T_FUNC_AVERAGE = 691 T_FUNC_AVERAGEA = 692 T_FUNC_AVERAGEIF = 693 T_FUNC_AVERAGEIFS = 694 T_FUNC_AXES = 38 T_FUNC_BAHTTEXT = 695 T_FUNC_BASE = 404 T_FUNC_BEEP = 39 T_FUNC_BESSELI = 696 T_FUNC_BESSELJ = 697 T_FUNC_BESSELK = 698 T_FUNC_BESSELY = 699 T_FUNC_BETADIST = 700 T_FUNC_BETAINV = 701 T_FUNC_BETA_DIST = 405 T_FUNC_BETA_INV = 406 T_FUNC_BIN2DEC = 702 T_FUNC_BIN2HEX = 703 T_FUNC_BIN2OCT = 704 T_FUNC_BINOMDIST = 705 T_FUNC_BINOM_DIST = 407 T_FUNC_BINOM_DIST_RANGE = 408 T_FUNC_BINOM_INV = 409 T_FUNC_BITAND = 410 T_FUNC_BITLSHIFT = 411 T_FUNC_BITOR = 412 T_FUNC_BITRSHIFT = 413 T_FUNC_BITXOR = 414 T_FUNC_BORDER = 40 T_FUNC_BREAK = 574 T_FUNC_BRING_TO_FRONT = 41 T_FUNC_BYCOL = 415 T_FUNC_BYROW = 416 T_FUNC_CALCULATE_DOCUMENT = 42 T_FUNC_CALCULATE_NOW = 43 T_FUNC_CALCULATION = 44 T_FUNC_CALL = 575 T_FUNC_CALLER = 576 T_FUNC_CANCEL_COPY = 45 T_FUNC_CANCEL_KEY = 577 T_FUNC_CEILING = 706 T_FUNC_CEILING_MATH = 417 T_FUNC_CEILING_PRECISE = 418 T_FUNC_CELL = 707 T_FUNC_CELL_PROTECTION = 46 T_FUNC_CHANGE_LINK = 47 T_FUNC_CHAR = 708 T_FUNC_CHART_ADD_DATA = 48 T_FUNC_CHART_TREND = 49 T_FUNC_CHART_WIZARD = 50 T_FUNC_CHECKBOX_PROPERTIES = 51 T_FUNC_CHECK_COMMAND = 578 T_FUNC_CHIDIST = 709 T_FUNC_CHIINV = 710 T_FUNC_CHISQ_DIST = 419 T_FUNC_CHISQ_DIST_RT = 420 T_FUNC_CHISQ_INV = 421 T_FUNC_CHISQ_INV_RT = 422 T_FUNC_CHISQ_TEST = 423 T_FUNC_CHITEST = 711 T_FUNC_CHOOSE = 712 T_FUNC_CHOOSECOLS = 424 T_FUNC_CHOOSEROWS = 425 T_FUNC_CLEAN = 713 T_FUNC_CLEAR = 52 T_FUNC_CLEAR_OUTLINE = 53 T_FUNC_CLEAR_PRINT_AREA = 54 T_FUNC_CLEAR_ROUTING_SLIP = 55 T_FUNC_CLOSE = 56 T_FUNC_CLOSE_ALL = 57 T_FUNC_CODE = 714 T_FUNC_COLOR_PALETTE = 58 T_FUNC_COLUMN = 715 T_FUNC_COLUMNS = 716 T_FUNC_COLUMN_WIDTH = 59 T_FUNC_COMBIN = 717 T_FUNC_COMBINA = 426 T_FUNC_COMBINATION = 60 T_FUNC_COMPLEX = 718 T_FUNC_CONCAT = 719 T_FUNC_CONCATENATE = 720 T_FUNC_CONFIDENCE = 721 T_FUNC_CONFIDENCE_NORM = 427 T_FUNC_CONFIDENCE_T = 428 T_FUNC_CONSOLIDATE = 61 T_FUNC_CONSTRAIN_NUMERIC = 62 T_FUNC_CONVERT = 722 T_FUNC_COPY = 63 T_FUNC_COPY_CHART = 64 T_FUNC_COPY_PICTURE = 65 T_FUNC_COPY_TOOL = 66 T_FUNC_CORREL = 723 T_FUNC_COS = 724 T_FUNC_COSH = 725 T_FUNC_COT = 429 T_FUNC_COTH = 430 T_FUNC_COUNT = 726 T_FUNC_COUNTA = 727 T_FUNC_COUNTBLANK = 728 T_FUNC_COUNTIF = 729 T_FUNC_COUNTIFS = 730 T_FUNC_COUPDAYBS = 731 T_FUNC_COUPDAYS = 732 T_FUNC_COUPDAYSNC = 733 T_FUNC_COUPNCD = 734 T_FUNC_COUPNUM = 735 T_FUNC_COUPPCD = 736 T_FUNC_COVAR = 737 T_FUNC_COVARIANCE_P = 431 T_FUNC_COVARIANCE_S = 432 T_FUNC_CREATE_NAMES = 67 T_FUNC_CREATE_OBJECT = 579 T_FUNC_CREATE_PUBLISHER = 68 T_FUNC_CRITBINOM = 738 T_FUNC_CSC = 433 T_FUNC_CSCH = 434 T_FUNC_CUBEKPIMEMBER = 739 T_FUNC_CUBEMEMBER = 740 T_FUNC_CUBEMEMBERPROPERTY = 741 T_FUNC_CUBERANKEDMEMBER = 742 T_FUNC_CUBESET = 743 T_FUNC_CUBESETCOUNT = 744 T_FUNC_CUBEVALUE = 745 T_FUNC_CUMIPMT = 746 T_FUNC_CUMPRINC = 747 T_FUNC_CUSTOMIZE_TOOLBAR = 69 T_FUNC_CUSTOM_REPEAT = 580 T_FUNC_CUSTOM_UNDO = 581 T_FUNC_CUT = 70 T_FUNC_DATA_DELETE = 71 T_FUNC_DATA_FIND = 72 T_FUNC_DATA_FIND_NEXT = 73 T_FUNC_DATA_FIND_PREV = 74 T_FUNC_DATA_FORM = 75 T_FUNC_DATA_LABEL = 76 T_FUNC_DATA_SERIES = 77 T_FUNC_DATE = 748 T_FUNC_DATEDIF = 749 T_FUNC_DATESTRING = 750 T_FUNC_DATEVALUE = 751 T_FUNC_DAVERAGE = 752 T_FUNC_DAY = 753 T_FUNC_DAYS = 435 T_FUNC_DAYS360 = 754 T_FUNC_DB = 755 T_FUNC_DBCS = 756 T_FUNC_DCOUNT = 757 T_FUNC_DCOUNTA = 758 T_FUNC_DDB = 759 T_FUNC_DEC2BIN = 760 T_FUNC_DEC2HEX = 761 T_FUNC_DEC2OCT = 762 T_FUNC_DECIMAL = 436 T_FUNC_DEFINE_NAME = 78 T_FUNC_DEFINE_STYLE = 79 T_FUNC_DEGREES = 763 T_FUNC_DELETE_ARROW = 80 T_FUNC_DELETE_BAR = 582 T_FUNC_DELETE_CHART_AUTOFORMAT = 81 T_FUNC_DELETE_COMMAND = 583 T_FUNC_DELETE_FORMAT = 82 T_FUNC_DELETE_MENU = 584 T_FUNC_DELETE_NAME = 83 T_FUNC_DELETE_NOTE = 84 T_FUNC_DELETE_OVERLAY = 85 T_FUNC_DELETE_STYLE = 86 T_FUNC_DELETE_TOOL = 87 T_FUNC_DELETE_TOOLBAR = 585 T_FUNC_DELTA = 764 T_FUNC_DEMOTE = 88 T_FUNC_DEREF = 586 T_FUNC_DETECTLANGUAGE = 437 T_FUNC_DEVSQ = 765 T_FUNC_DGET = 766 T_FUNC_DIALOG_BOX = 587 T_FUNC_DIRECTORY = 588 T_FUNC_DISABLE_INPUT = 89 T_FUNC_DISC = 767 T_FUNC_DISPLAY = 90 T_FUNC_DMAX = 768 T_FUNC_DMIN = 769 T_FUNC_DOCUMENTS = 589 T_FUNC_DOLLAR = 770 T_FUNC_DOLLARDE = 771 T_FUNC_DOLLARFR = 772 T_FUNC_DPRODUCT = 773 T_FUNC_DROP = 438 T_FUNC_DSTDEV = 774 T_FUNC_DSTDEVP = 775 T_FUNC_DSUM = 776 T_FUNC_DUPLICATE = 91 T_FUNC_DURATION = 777 T_FUNC_DVAR = 778 T_FUNC_DVARP = 779 T_FUNC_ECHO = 590 T_FUNC_ECMA_CEILING = 439 T_FUNC_EDATE = 780 T_FUNC_EDITBOX_PROPERTIES = 98 T_FUNC_EDITION_OPTIONS = 99 T_FUNC_EDIT_COLOR = 92 T_FUNC_EDIT_DELETE = 93 T_FUNC_EDIT_OBJECT = 94 T_FUNC_EDIT_REPEAT = 95 T_FUNC_EDIT_SERIES = 96 T_FUNC_EDIT_TOOL = 97 T_FUNC_EFFECT = 781 T_FUNC_ELSE = 591 T_FUNC_ELSE_IF = 592 T_FUNC_ENABLE_COMMAND = 593 T_FUNC_ENABLE_OBJECT = 100 T_FUNC_ENABLE_TIPWIZARD = 101 T_FUNC_ENABLE_TOOL = 594 T_FUNC_ENCODEURL = 440 T_FUNC_END_IF = 595 T_FUNC_ENTER_DATA = 102 T_FUNC_EOMONTH = 782 T_FUNC_ERF = 783 T_FUNC_ERFC = 784 T_FUNC_ERFC_PRECISE = 442 T_FUNC_ERF_PRECISE = 441 T_FUNC_ERROR = 596 T_FUNC_ERRORBAR_X = 103 T_FUNC_ERRORBAR_Y = 104 T_FUNC_ERROR_TYPE = 785 T_FUNC_EUROCONVERT = 443 T_FUNC_EVALUATE = 597 T_FUNC_EVEN = 786 T_FUNC_EXACT = 787 T_FUNC_EXEC = 598 T_FUNC_EXECUTE = 599 T_FUNC_EXP = 788 T_FUNC_EXPAND = 444 T_FUNC_EXPONDIST = 789 T_FUNC_EXPON_DIST = 445 T_FUNC_EXTEND_POLYGON = 105 T_FUNC_EXTRACT = 106 T_FUNC_FACT = 790 T_FUNC_FACTDOUBLE = 791 T_FUNC_FALSE = 792 T_FUNC_FCLOSE = 600 T_FUNC_FDIST = 793 T_FUNC_FIELDVALUE = 451 T_FUNC_FILES = 601 T_FUNC_FILE_CLOSE = 107 T_FUNC_FILE_DELETE = 108 T_FUNC_FILL_AUTO = 109 T_FUNC_FILL_DOWN = 110 T_FUNC_FILL_GROUP = 111 T_FUNC_FILL_LEFT = 112 T_FUNC_FILL_RIGHT = 113 T_FUNC_FILL_UP = 114 T_FUNC_FILTER = 1045 T_FUNC_FILTERXML = 452 T_FUNC_FILTER_ADVANCED = 115 T_FUNC_FILTER_SHOW_ALL = 116 T_FUNC_FIND = 794 T_FUNC_FINDB = 795 T_FUNC_FIND_FILE = 117 T_FUNC_FINV = 796 T_FUNC_FISHER = 797 T_FUNC_FISHERINV = 798 T_FUNC_FIXED = 799 T_FUNC_FLOOR = 800 T_FUNC_FLOOR_MATH = 453 T_FUNC_FLOOR_PRECISE = 454 T_FUNC_FONT = 118 T_FUNC_FONT_PROPERTIES = 119 T_FUNC_FOPEN = 602 T_FUNC_FOR = 603 T_FUNC_FORECAST = 801 T_FUNC_FORECAST_ETS = 455 T_FUNC_FORECAST_ETS_CONFINT = 456 T_FUNC_FORECAST_ETS_SEASONALITY = 457 T_FUNC_FORECAST_ETS_STAT = 458 T_FUNC_FORECAST_LINEAR = 459 T_FUNC_FORMAT_AUTO = 120 T_FUNC_FORMAT_CHART = 121 T_FUNC_FORMAT_CHARTTYPE = 122 T_FUNC_FORMAT_FONT = 123 T_FUNC_FORMAT_LEGEND = 124 T_FUNC_FORMAT_MAIN = 125 T_FUNC_FORMAT_MOVE = 126 T_FUNC_FORMAT_NUMBER = 127 T_FUNC_FORMAT_OVERLAY = 128 T_FUNC_FORMAT_SHAPE = 129 T_FUNC_FORMAT_SIZE = 130 T_FUNC_FORMAT_TEXT = 131 T_FUNC_FORMULA = 132 T_FUNC_FORMULATEXT = 460 T_FUNC_FORMULA_ARRAY = 133 T_FUNC_FORMULA_CONVERT = 605 T_FUNC_FORMULA_FILL = 134 T_FUNC_FORMULA_FIND = 135 T_FUNC_FORMULA_FIND_NEXT = 136 T_FUNC_FORMULA_FIND_PREV = 137 T_FUNC_FORMULA_GOTO = 138 T_FUNC_FORMULA_REPLACE = 139 T_FUNC_FOR_CELL = 604 T_FUNC_FPOS = 606 T_FUNC_FREAD = 607 T_FUNC_FREADLN = 608 T_FUNC_FREEZE_PANES = 140 T_FUNC_FREQUENCY = 802 T_FUNC_FSIZE = 609 T_FUNC_FTEST = 803 T_FUNC_FULL = 141 T_FUNC_FULL_SCREEN = 142 T_FUNC_FUNCTION_WIZARD = 143 T_FUNC_FV = 804 T_FUNC_FVSCHEDULE = 805 T_FUNC_FWRITE = 610 T_FUNC_FWRITELN = 611 T_FUNC_F_DIST = 446 T_FUNC_F_DIST_RT = 447 T_FUNC_F_INV = 448 T_FUNC_F_INV_RT = 449 T_FUNC_F_TEST = 450 T_FUNC_GALLERY_3D_AREA = 144 T_FUNC_GALLERY_3D_BAR = 145 T_FUNC_GALLERY_3D_COLUMN = 146 T_FUNC_GALLERY_3D_LINE = 147 T_FUNC_GALLERY_3D_PIE = 148 T_FUNC_GALLERY_3D_SURFACE = 149 T_FUNC_GALLERY_AREA = 150 T_FUNC_GALLERY_BAR = 151 T_FUNC_GALLERY_COLUMN = 152 T_FUNC_GALLERY_CUSTOM = 153 T_FUNC_GALLERY_DOUGHNUT = 154 T_FUNC_GALLERY_LINE = 155 T_FUNC_GALLERY_PIE = 156 T_FUNC_GALLERY_RADAR = 157 T_FUNC_GALLERY_SCATTER = 158 T_FUNC_GAMMA = 461 T_FUNC_GAMMADIST = 806 T_FUNC_GAMMAINV = 807 T_FUNC_GAMMALN = 808 T_FUNC_GAMMALN_PRECISE = 464 T_FUNC_GAMMA_DIST = 462 T_FUNC_GAMMA_INV = 463 T_FUNC_GAUSS = 465 T_FUNC_GCD = 809 T_FUNC_GEOMEAN = 810 T_FUNC_GESTEP = 811 T_FUNC_GETPIVOTDATA = 812 T_FUNC_GET_BAR = 612 T_FUNC_GET_CELL = 613 T_FUNC_GET_CHART_ITEM = 614 T_FUNC_GET_DEF = 615 T_FUNC_GET_DOCUMENT = 616 T_FUNC_GET_FORMULA = 617 T_FUNC_GET_LINK_INFO = 618 T_FUNC_GET_MOVIE = 619 T_FUNC_GET_NAME = 620 T_FUNC_GET_NOTE = 621 T_FUNC_GET_OBJECT = 622 T_FUNC_GET_TOOL = 623 T_FUNC_GET_TOOLBAR = 624 T_FUNC_GET_WINDOW = 625 T_FUNC_GET_WORKBOOK = 626 T_FUNC_GET_WORKSPACE = 627 T_FUNC_GOAL_SEEK = 159 T_FUNC_GOTO = 628 T_FUNC_GRIDLINES = 160 T_FUNC_GROUP = 629 T_FUNC_GROUPBY = 466 T_FUNC_GROWTH = 813 T_FUNC_HALT = 630 T_FUNC_HARMEAN = 814 T_FUNC_HELP = 631 T_FUNC_HEX2BIN = 815 T_FUNC_HEX2DEC = 816 T_FUNC_HEX2OCT = 817 T_FUNC_HIDE = 161 T_FUNC_HIDEALL_INKANNOTS = 164 T_FUNC_HIDEALL_NOTES = 165 T_FUNC_HIDECURR_NOTE = 166 T_FUNC_HIDE_DIALOG = 162 T_FUNC_HIDE_OBJECT = 163 T_FUNC_HLINE = 167 T_FUNC_HLOOKUP = 818 T_FUNC_HOUR = 819 T_FUNC_HPAGE = 168 T_FUNC_HSCROLL = 169 T_FUNC_HSTACK = 467 T_FUNC_HYPERLINK = 820 T_FUNC_HYPGEOMDIST = 821 T_FUNC_HYPGEOM_DIST = 468 T_FUNC_IF = 822 T_FUNC_IFERROR = 823 T_FUNC_IFNA = 470 T_FUNC_IFS = 824 T_FUNC_IMABS = 825 T_FUNC_IMAGE = 469 T_FUNC_IMAGINARY = 826 T_FUNC_IMARGUMENT = 827 T_FUNC_IMCONJUGATE = 828 T_FUNC_IMCOS = 829 T_FUNC_IMCOSH = 471 T_FUNC_IMCOT = 472 T_FUNC_IMCSC = 473 T_FUNC_IMCSCH = 474 T_FUNC_IMDIV = 830 T_FUNC_IMEXP = 831 T_FUNC_IMLN = 832 T_FUNC_IMLOG10 = 833 T_FUNC_IMLOG2 = 834 T_FUNC_IMPOWER = 835 T_FUNC_IMPRODUCT = 836 T_FUNC_IMREAL = 837 T_FUNC_IMSEC = 475 T_FUNC_IMSECH = 476 T_FUNC_IMSIN = 838 T_FUNC_IMSINH = 477 T_FUNC_IMSQRT = 839 T_FUNC_IMSUB = 840 T_FUNC_IMSUM = 841 T_FUNC_IMTAN = 478 T_FUNC_INDEX = 842 T_FUNC_INDIRECT = 843 T_FUNC_INFO = 844 T_FUNC_INITIATE = 632 T_FUNC_INPUT = 633 T_FUNC_INSERT = 170 T_FUNC_INSERTDATATABLE = 175 T_FUNC_INSERT_MAP_OBJECT = 171 T_FUNC_INSERT_OBJECT = 172 T_FUNC_INSERT_PICTURE = 173 T_FUNC_INSERT_TITLE = 174 T_FUNC_INT = 845 T_FUNC_INTERCEPT = 846 T_FUNC_INTRATE = 847 T_FUNC_IPMT = 848 T_FUNC_IRR = 849 T_FUNC_ISBLANK = 850 T_FUNC_ISERR = 851 T_FUNC_ISERROR = 852 T_FUNC_ISEVEN = 853 T_FUNC_ISFORMULA = 479 T_FUNC_ISLOGICAL = 854 T_FUNC_ISNA = 855 T_FUNC_ISNONTEXT = 856 T_FUNC_ISNUMBER = 857 T_FUNC_ISODD = 858 T_FUNC_ISOMITTED = 481 T_FUNC_ISOWEEKNUM = 482 T_FUNC_ISO_CEILING = 480 T_FUNC_ISPMT = 859 T_FUNC_ISREF = 860 T_FUNC_ISTEXT = 861 T_FUNC_ISTHAIDIGIT = 862 T_FUNC_JIS = 483 T_FUNC_JUSTIFY = 176 T_FUNC_KURT = 863 T_FUNC_LABEL_PROPERTIES = 177 T_FUNC_LAMBDA = 484 T_FUNC_LARGE = 864 T_FUNC_LAST_ERROR = 634 T_FUNC_LAYOUT = 178 T_FUNC_LCM = 865 T_FUNC_LEFT = 866 T_FUNC_LEFTB = 867 T_FUNC_LEGEND = 179 T_FUNC_LEN = 868 T_FUNC_LENB = 869 T_FUNC_LET = 485 T_FUNC_LINEST = 870 T_FUNC_LINE_PRINT = 180 T_FUNC_LINKS = 635 T_FUNC_LINK_COMBO = 181 T_FUNC_LINK_FORMAT = 182 T_FUNC_LISTBOX_PROPERTIES = 184 T_FUNC_LIST_NAMES = 183 T_FUNC_LN = 871 T_FUNC_LOG = 872 T_FUNC_LOG10 = 873 T_FUNC_LOGEST = 874 T_FUNC_LOGINV = 875 T_FUNC_LOGNORMDIST = 876 T_FUNC_LOGNORM_DIST = 486 T_FUNC_LOGNORM_INV = 487 T_FUNC_LOOKUP = 877 T_FUNC_LOWER = 878 T_FUNC_MACRO_OPTIONS = 185 T_FUNC_MAIL_ADD_MAILER = 186 T_FUNC_MAIL_DELETE_MAILER = 187 T_FUNC_MAIL_EDIT_MAILER = 188 T_FUNC_MAIL_FORWARD = 189 T_FUNC_MAIL_LOGOFF = 190 T_FUNC_MAIL_LOGON = 191 T_FUNC_MAIL_NEXT_LETTER = 192 T_FUNC_MAIL_REPLY = 193 T_FUNC_MAIL_REPLY_ALL = 194 T_FUNC_MAIL_SEND_MAILER = 195 T_FUNC_MAIN_CHART = 196 T_FUNC_MAIN_CHART_TYPE = 197 T_FUNC_MAKEARRAY = 488 T_FUNC_MAP = 489 T_FUNC_MATCH = 879 T_FUNC_MAX = 880 T_FUNC_MAXA = 881 T_FUNC_MAXIFS = 882 T_FUNC_MDETERM = 883 T_FUNC_MDURATION = 884 T_FUNC_MEDIAN = 885 T_FUNC_MENU_EDITOR = 198 T_FUNC_MERGE_STYLES = 199 T_FUNC_MESSAGE = 200 T_FUNC_MID = 886 T_FUNC_MIDB = 887 T_FUNC_MIN = 888 T_FUNC_MINA = 889 T_FUNC_MINIFS = 890 T_FUNC_MINUTE = 891 T_FUNC_MINVERSE = 892 T_FUNC_MIRR = 893 T_FUNC_MMULT = 894 T_FUNC_MOD = 895 T_FUNC_MODE = 896 T_FUNC_MODE_MULT = 490 T_FUNC_MODE_SNGL = 491 T_FUNC_MONTH = 897 T_FUNC_MOVE_BRK = 201 T_FUNC_MOVE_TOOL = 202 T_FUNC_MOVIE_COMMAND = 636 T_FUNC_MROUND = 898 T_FUNC_MULTINOMIAL = 899 T_FUNC_MUNIT = 492 T_FUNC_N = 900 T_FUNC_NA = 901 T_FUNC_NAMES = 637 T_FUNC_NEGBINOMDIST = 902 T_FUNC_NEGBINOM_DIST = 493 T_FUNC_NETWORKDAYS = 903 T_FUNC_NETWORKDAYS_INTL = 494 T_FUNC_NEW = 203 T_FUNC_NEWWEBQUERY = 205 T_FUNC_NEW_WINDOW = 204 T_FUNC_NEXT = 638 T_FUNC_NOMINAL = 904 T_FUNC_NORMAL = 206 T_FUNC_NORMDIST = 905 T_FUNC_NORMINV = 906 T_FUNC_NORMSDIST = 907 T_FUNC_NORMSINV = 908 T_FUNC_NORM_DIST = 495 T_FUNC_NORM_INV = 496 T_FUNC_NORM_S_DIST = 497 T_FUNC_NORM_S_INV = 498 T_FUNC_NOT = 909 T_FUNC_NOTE = 639 T_FUNC_NOW = 910 T_FUNC_NPER = 911 T_FUNC_NPV = 912 T_FUNC_NUMBERSTRING = 913 T_FUNC_NUMBERVALUE = 499 T_FUNC_OBJECT_PROPERTIES = 207 T_FUNC_OBJECT_PROTECTION = 208 T_FUNC_OCT2BIN = 914 T_FUNC_OCT2DEC = 915 T_FUNC_OCT2HEX = 916 T_FUNC_ODD = 917 T_FUNC_ODDFPRICE = 918 T_FUNC_ODDFYIELD = 919 T_FUNC_ODDLPRICE = 920 T_FUNC_ODDLYIELD = 921 T_FUNC_OFFSET = 922 T_FUNC_ON_DATA = 209 T_FUNC_ON_DOUBLECLICK = 210 T_FUNC_ON_ENTRY = 211 T_FUNC_ON_KEY = 212 T_FUNC_ON_RECALC = 213 T_FUNC_ON_SHEET = 214 T_FUNC_ON_TIME = 215 T_FUNC_ON_WINDOW = 216 T_FUNC_OPEN = 217 T_FUNC_OPEN_DIALOG = 640 T_FUNC_OPEN_LINKS = 218 T_FUNC_OPEN_MAIL = 219 T_FUNC_OPEN_TEXT = 220 T_FUNC_OPTIONS_CALCULATION = 221 T_FUNC_OPTIONS_CHART = 222 T_FUNC_OPTIONS_EDIT = 223 T_FUNC_OPTIONS_GENERAL = 224 T_FUNC_OPTIONS_LISTS_ADD = 225 T_FUNC_OPTIONS_LISTS_DELETE = 226 T_FUNC_OPTIONS_LISTS_GET = 641 T_FUNC_OPTIONS_ME = 227 T_FUNC_OPTIONS_MENONO = 228 T_FUNC_OPTIONS_SAVE = 229 T_FUNC_OPTIONS_SPELL = 230 T_FUNC_OPTIONS_TRANSITION = 231 T_FUNC_OPTIONS_VIEW = 232 T_FUNC_OR = 923 T_FUNC_OUTLINE = 233 T_FUNC_OVERLAY = 234 T_FUNC_OVERLAY_CHART_TYPE = 235 T_FUNC_PAGE_SETUP = 236 T_FUNC_PARSE = 237 T_FUNC_PASTE = 238 T_FUNC_PASTE_LINK = 239 T_FUNC_PASTE_PICTURE = 240 T_FUNC_PASTE_PICTURE_LINK = 241 T_FUNC_PASTE_SPECIAL = 242 T_FUNC_PASTE_TOOL = 243 T_FUNC_PATTERNS = 244 T_FUNC_PAUSE = 642 T_FUNC_PDURATION = 500 T_FUNC_PEARSON = 924 T_FUNC_PERCENTILE = 925 T_FUNC_PERCENTILE_EXC = 502 T_FUNC_PERCENTILE_INC = 503 T_FUNC_PERCENTOF = 501 T_FUNC_PERCENTRANK = 926 T_FUNC_PERCENTRANK_EXC = 504 T_FUNC_PERCENTRANK_INC = 505 T_FUNC_PERMUT = 927 T_FUNC_PERMUTATIONA = 506 T_FUNC_PHI = 507 T_FUNC_PHONETIC = 928 T_FUNC_PI = 929 T_FUNC_PICKLIST = 245 T_FUNC_PIVOTBY = 508 T_FUNC_PIVOT_ADD_FIELDS = 246 T_FUNC_PIVOT_FIELD = 247 T_FUNC_PIVOT_FIELD_GROUP = 248 T_FUNC_PIVOT_FIELD_PROPERTIES = 249 T_FUNC_PIVOT_FIELD_UNGROUP = 250 T_FUNC_PIVOT_ITEM = 251 T_FUNC_PIVOT_ITEM_PROPERTIES = 252 T_FUNC_PIVOT_REFRESH = 253 T_FUNC_PIVOT_SHOW_PAGES = 254 T_FUNC_PIVOT_TABLE_CHART = 255 T_FUNC_PIVOT_TABLE_WIZARD = 256 T_FUNC_PMT = 930 T_FUNC_POISSON = 931 T_FUNC_POISSON_DIST = 509 T_FUNC_POKE = 643 T_FUNC_POST_DOCUMENT = 257 T_FUNC_POWER = 932 T_FUNC_PPMT = 933 T_FUNC_PQSOURCE = 510 T_FUNC_PRECISION = 258 T_FUNC_PREFERRED = 259 T_FUNC_PRESS_TOOL = 644 T_FUNC_PRICE = 934 T_FUNC_PRICEDISC = 935 T_FUNC_PRICEMAT = 936 T_FUNC_PRINT = 260 T_FUNC_PRINTER_SETUP = 262 T_FUNC_PRINT_PREVIEW = 261 T_FUNC_PROB = 937 T_FUNC_PRODUCT = 938 T_FUNC_PROMOTE = 263 T_FUNC_PROPER = 939 T_FUNC_PROTECT_DOCUMENT = 264 T_FUNC_PROTECT_REVISIONS = 265 T_FUNC_PUSHBUTTON_PROPERTIES = 266 T_FUNC_PV = 940 T_FUNC_PY = 1046 T_FUNC_PYTHON_STR = 514 T_FUNC_PYTHON_TYPE = 515 T_FUNC_PYTHON_TYPENAME = 516 T_FUNC_QUARTILE = 941 T_FUNC_QUARTILE_EXC = 517 T_FUNC_QUARTILE_INC = 518 T_FUNC_QUERYSTRING = 519 T_FUNC_QUIT = 267 T_FUNC_QUOTIENT = 942 T_FUNC_RADIANS = 943 T_FUNC_RAND = 944 T_FUNC_RANDARRAY = 520 T_FUNC_RANDBETWEEN = 945 T_FUNC_RANK = 946 T_FUNC_RANK_AVG = 521 T_FUNC_RANK_EQ = 522 T_FUNC_RATE = 947 T_FUNC_RECEIVED = 948 T_FUNC_REDUCE = 523 T_FUNC_REFTEXT = 645 T_FUNC_REGEXEXTRACT = 511 T_FUNC_REGEXREPLACE = 512 T_FUNC_REGEXTEST = 513 T_FUNC_REGISTER = 646 T_FUNC_REGISTER_ID = 647 T_FUNC_RELREF = 648 T_FUNC_REMOVE_LIST_ITEM = 268 T_FUNC_REMOVE_PAGE_BREAK = 269 T_FUNC_RENAME_COMMAND = 649 T_FUNC_RENAME_OBJECT = 270 T_FUNC_REPLACE = 949 T_FUNC_REPLACEB = 950 T_FUNC_REPLACE_FONT = 271 T_FUNC_REPT = 951 T_FUNC_REQUEST = 650 T_FUNC_RESET_TOOL = 272 T_FUNC_RESET_TOOLBAR = 651 T_FUNC_RESTART = 652 T_FUNC_RESULT = 653 T_FUNC_RESUME = 654 T_FUNC_RETURN = 655 T_FUNC_RIGHT = 952 T_FUNC_RIGHTB = 953 T_FUNC_RM_PRINT_AREA = 273 T_FUNC_ROMAN = 954 T_FUNC_ROUND = 955 T_FUNC_ROUNDBAHTDOWN = 956 T_FUNC_ROUNDBAHTUP = 957 T_FUNC_ROUNDDOWN = 958 T_FUNC_ROUNDUP = 959 T_FUNC_ROUTE_DOCUMENT = 274 T_FUNC_ROUTING_SLIP = 275 T_FUNC_ROW = 960 T_FUNC_ROWS = 961 T_FUNC_ROW_HEIGHT = 276 T_FUNC_RRI = 524 T_FUNC_RSQ = 962 T_FUNC_RTD = 963 T_FUNC_RUN = 277 T_FUNC_SAVE = 278 T_FUNC_SAVE_AS = 279 T_FUNC_SAVE_COPY_AS = 280 T_FUNC_SAVE_DIALOG = 656 T_FUNC_SAVE_NEW_OBJECT = 281 T_FUNC_SAVE_TOOLBAR = 657 T_FUNC_SAVE_WORKBOOK = 282 T_FUNC_SAVE_WORKSPACE = 283 T_FUNC_SCALE = 284 T_FUNC_SCAN = 525 T_FUNC_SCENARIO_ADD = 285 T_FUNC_SCENARIO_CELLS = 286 T_FUNC_SCENARIO_DELETE = 287 T_FUNC_SCENARIO_EDIT = 288 T_FUNC_SCENARIO_GET = 658 T_FUNC_SCENARIO_MERGE = 289 T_FUNC_SCENARIO_SHOW = 290 T_FUNC_SCENARIO_SHOW_NEXT = 291 T_FUNC_SCENARIO_SUMMARY = 292 T_FUNC_SCROLLBAR_PROPERTIES = 293 T_FUNC_SEARCH = 964 T_FUNC_SEARCHB = 965 T_FUNC_SEC = 526 T_FUNC_SECH = 527 T_FUNC_SECOND = 966 T_FUNC_SELECT = 294 T_FUNC_SELECTION = 659 T_FUNC_SELECT_ALL = 295 T_FUNC_SELECT_CHART = 296 T_FUNC_SELECT_END = 297 T_FUNC_SELECT_LAST_CELL = 298 T_FUNC_SELECT_LIST_ITEM = 299 T_FUNC_SELECT_PLOT_AREA = 300 T_FUNC_SELECT_SPECIAL = 301 T_FUNC_SEND_KEYS = 302 T_FUNC_SEND_MAIL = 303 T_FUNC_SEND_TO_BACK = 304 T_FUNC_SEQUENCE = 528 T_FUNC_SERIES = 967 T_FUNC_SERIESSUM = 968 T_FUNC_SERIES_AXES = 305 T_FUNC_SERIES_ORDER = 306 T_FUNC_SERIES_X = 307 T_FUNC_SERIES_Y = 308 T_FUNC_SET_CONTROL_VALUE = 309 T_FUNC_SET_CRITERIA = 310 T_FUNC_SET_DATABASE = 311 T_FUNC_SET_DIALOG_DEFAULT = 312 T_FUNC_SET_DIALOG_FOCUS = 313 T_FUNC_SET_EXTRACT = 314 T_FUNC_SET_LIST_ITEM = 315 T_FUNC_SET_NAME = 660 T_FUNC_SET_PAGE_BREAK = 316 T_FUNC_SET_PREFERRED = 317 T_FUNC_SET_PRINT_AREA = 318 T_FUNC_SET_PRINT_TITLES = 319 T_FUNC_SET_UPDATE_STATUS = 320 T_FUNC_SET_VALUE = 661 T_FUNC_SHARE = 321 T_FUNC_SHARE_NAME = 322 T_FUNC_SHEET = 529 T_FUNC_SHEETS = 530 T_FUNC_SHEET_BACKGROUND = 323 T_FUNC_SHORT_MENUS = 324 T_FUNC_SHOW_ACTIVE_CELL = 325 T_FUNC_SHOW_BAR = 662 T_FUNC_SHOW_CLIPBOARD = 326 T_FUNC_SHOW_DETAIL = 327 T_FUNC_SHOW_DIALOG = 328 T_FUNC_SHOW_INFO = 329 T_FUNC_SHOW_LEVELS = 330 T_FUNC_SHOW_TOOLBAR = 331 T_FUNC_SIGN = 969 T_FUNC_SIN = 970 T_FUNC_SINH = 971 T_FUNC_SKEW = 972 T_FUNC_SKEW_P = 531 T_FUNC_SLN = 973 T_FUNC_SLOPE = 974 T_FUNC_SMALL = 975 T_FUNC_SORT = 1047 T_FUNC_SORTBY = 532 T_FUNC_SORT_SPECIAL = 332 T_FUNC_SOUND_NOTE = 333 T_FUNC_SOUND_PLAY = 334 T_FUNC_SPELLING = 335 T_FUNC_SPELLING_CHECK = 663 T_FUNC_SPLIT = 336 T_FUNC_SQRT = 976 T_FUNC_SQRTPI = 977 T_FUNC_STANDARDIZE = 978 T_FUNC_STANDARD_FONT = 337 T_FUNC_STANDARD_WIDTH = 338 T_FUNC_STDEV = 979 T_FUNC_STDEVA = 980 T_FUNC_STDEVP = 981 T_FUNC_STDEVPA = 982 T_FUNC_STDEV_P = 533 T_FUNC_STDEV_S = 534 T_FUNC_STEP = 664 T_FUNC_STEYX = 983 T_FUNC_STOCKHISTORY = 535 T_FUNC_STYLE = 339 T_FUNC_SUBSCRIBE_TO = 340 T_FUNC_SUBSTITUTE = 984 T_FUNC_SUBTOTAL = 985 T_FUNC_SUBTOTAL_CREATE = 341 T_FUNC_SUBTOTAL_REMOVE = 342 T_FUNC_SUM = 986 T_FUNC_SUMIF = 987 T_FUNC_SUMIFS = 988 T_FUNC_SUMMARY_INFO = 343 T_FUNC_SUMPRODUCT = 989 T_FUNC_SUMSQ = 990 T_FUNC_SUMX2MY2 = 991 T_FUNC_SUMX2PY2 = 992 T_FUNC_SUMXMY2 = 993 T_FUNC_SWITCH = 994 T_FUNC_SYD = 995 T_FUNC_T = 996 T_FUNC_TABLE = 345 T_FUNC_TAB_ORDER = 344 T_FUNC_TAKE = 542 T_FUNC_TAN = 997 T_FUNC_TANH = 998 T_FUNC_TBILLEQ = 999 T_FUNC_TBILLPRICE = 1000 T_FUNC_TBILLYIELD = 1001 T_FUNC_TDIST = 1002 T_FUNC_TERMINATE = 665 T_FUNC_TEXT = 1003 T_FUNC_TEXTAFTER = 543 T_FUNC_TEXTBEFORE = 544 T_FUNC_TEXTJOIN = 1004 T_FUNC_TEXTREF = 667 T_FUNC_TEXTSPLIT = 545 T_FUNC_TEXT_BOX = 666 T_FUNC_TEXT_TO_COLUMNS = 346 T_FUNC_THAIDAYOFWEEK = 1005 T_FUNC_THAIDIGIT = 1006 T_FUNC_THAIMONTHOFYEAR = 1007 T_FUNC_THAINUMSOUND = 1008 T_FUNC_THAINUMSTRING = 1009 T_FUNC_THAISTRINGLENGTH = 1010 T_FUNC_THAIYEAR = 1011 T_FUNC_TIME = 1012 T_FUNC_TIMEVALUE = 1013 T_FUNC_TINV = 1014 T_FUNC_TOCOL = 546 T_FUNC_TODAY = 1015 T_FUNC_TOROW = 547 T_FUNC_TRACER_CLEAR = 347 T_FUNC_TRACER_DISPLAY = 348 T_FUNC_TRACER_ERROR = 349 T_FUNC_TRACER_NAVIGATE = 350 T_FUNC_TRANSLATE = 548 T_FUNC_TRANSPOSE = 1016 T_FUNC_TRAVERSE_NOTES = 351 T_FUNC_TREND = 1017 T_FUNC_TRIM = 1018 T_FUNC_TRIMMEAN = 1019 T_FUNC_TRIMRANGE = 549 T_FUNC_TRUE = 1020 T_FUNC_TRUNC = 1021 T_FUNC_TTEST = 1022 T_FUNC_TYPE = 1023 T_FUNC_T_DIST = 536 T_FUNC_T_DIST_2T = 537 T_FUNC_T_DIST_RT = 538 T_FUNC_T_INV = 539 T_FUNC_T_INV_2T = 540 T_FUNC_T_TEST = 541 T_FUNC_UNDO = 352 T_FUNC_UNGROUP = 353 T_FUNC_UNGROUP_SHEETS = 354 T_FUNC_UNHIDE = 355 T_FUNC_UNICHAR = 550 T_FUNC_UNICODE = 551 T_FUNC_UNIQUE = 552 T_FUNC_UNLOCKED_NEXT = 356 T_FUNC_UNLOCKED_PREV = 357 T_FUNC_UNPROTECT_REVISIONS = 358 T_FUNC_UNREGISTER = 668 T_FUNC_UPDATE_LINK = 359 T_FUNC_UPPER = 1024 T_FUNC_USDOLLAR = 1025 T_FUNC_VALUE = 1026 T_FUNC_VALUETOTEXT = 553 T_FUNC_VAR = 1027 T_FUNC_VARA = 1028 T_FUNC_VARP = 1029 T_FUNC_VARPA = 1030 T_FUNC_VAR_P = 554 T_FUNC_VAR_S = 555 T_FUNC_VBAACTIVATE = 363 T_FUNC_VBA_INSERT_FILE = 360 T_FUNC_VBA_MAKE_ADDIN = 361 T_FUNC_VBA_PROCEDURE_DEFINITION = 362 T_FUNC_VDB = 1031 T_FUNC_VIEW_3D = 364 T_FUNC_VIEW_DEFINE = 365 T_FUNC_VIEW_DELETE = 366 T_FUNC_VIEW_GET = 669 T_FUNC_VIEW_SHOW = 367 T_FUNC_VLINE = 368 T_FUNC_VLOOKUP = 1032 T_FUNC_VOLATILE = 670 T_FUNC_VPAGE = 369 T_FUNC_VSCROLL = 370 T_FUNC_VSTACK = 556 T_FUNC_WAIT = 371 T_FUNC_WEBSERVICE = 557 T_FUNC_WEB_PUBLISH = 372 T_FUNC_WEEKDAY = 1033 T_FUNC_WEEKNUM = 1034 T_FUNC_WEIBULL = 1035 T_FUNC_WEIBULL_DIST = 558 T_FUNC_WHILE = 671 T_FUNC_WINDOWS = 673 T_FUNC_WINDOW_MAXIMIZE = 373 T_FUNC_WINDOW_MINIMIZE = 374 T_FUNC_WINDOW_MOVE = 375 T_FUNC_WINDOW_RESTORE = 376 T_FUNC_WINDOW_SIZE = 377 T_FUNC_WINDOW_TITLE = 672 T_FUNC_WORKBOOK_ACTIVATE = 378 T_FUNC_WORKBOOK_ADD = 379 T_FUNC_WORKBOOK_COPY = 380 T_FUNC_WORKBOOK_DELETE = 381 T_FUNC_WORKBOOK_HIDE = 382 T_FUNC_WORKBOOK_INSERT = 383 T_FUNC_WORKBOOK_MOVE = 384 T_FUNC_WORKBOOK_NAME = 385 T_FUNC_WORKBOOK_NEW = 386 T_FUNC_WORKBOOK_NEXT = 387 T_FUNC_WORKBOOK_OPTIONS = 388 T_FUNC_WORKBOOK_PREV = 389 T_FUNC_WORKBOOK_PROTECT = 390 T_FUNC_WORKBOOK_SCROLL = 391 T_FUNC_WORKBOOK_SELECT = 392 T_FUNC_WORKBOOK_TAB_SPLIT = 393 T_FUNC_WORKBOOK_UNHIDE = 394 T_FUNC_WORKDAY = 1036 T_FUNC_WORKDAY_INTL = 559 T_FUNC_WORKGROUP = 395 T_FUNC_WORKGROUP_OPTIONS = 396 T_FUNC_WORKSPACE = 397 T_FUNC_WRAPCOLS = 560 T_FUNC_WRAPROWS = 561 T_FUNC_XIRR = 1037 T_FUNC_XLOOKUP = 562 T_FUNC_XMATCH = 563 T_FUNC_XNPV = 1038 T_FUNC_XOR = 564 T_FUNC_YEAR = 1039 T_FUNC_YEARFRAC = 1040 T_FUNC_YIELD = 1041 T_FUNC_YIELDDISC = 1042 T_FUNC_YIELDMAT = 1043 T_FUNC_ZOOM = 398 T_FUNC_ZTEST = 1044 T_FUNC_Z_TEST = 565 T_GE = 1106 T_GETTING_DATA_ERROR = 1076 T_GT = 1105 T_HASH = 1100 T_IDENTIFIER = 1065 T_INTEGER_CONSTANT = 1054 T_INTERSECTION = 1062 T_LBRACE = 1109 T_LBRACK = 1088 T_LE = 1104 T_LPAREN = 1107 T_LT = 1103 T_MINUS = 1094 T_NAME_ERROR = 1072 T_NA_ERROR = 1071 T_NE = 1102 T_NEWLINE = 1063 T_NULL_ERROR = 1073 T_NUM_ERROR = 1074 T_PERCENT = 1099 T_PLUS = 1093 T_PYTHON_ERROR = 1086 T_QUESTION_MARK = 1092 T_QUOTED_IDENTIFIER = 1067 T_R1C1_COLUMN = 1056 T_R1C1_ROW = 1055 T_RBRACE = 1110 T_RBRACK = 1089 T_REF_ERROR = 1077 T_RPAREN = 1108 T_SEMICOLON = 1113 T_SINGLE_QUOTE = 1068 T_SLASH = 1096 T_SPILL_ERROR = 1078 T_SR_ALL = 1115 T_SR_DATA = 1116 T_SR_HEADERS = 1117 T_SR_THIS_ROW = 1064 T_SR_TOTALS = 1118 T_STRING_CONSTANT = 1066 T_STRUCTURED_REFERENCE = 1069 T_UNKNOWN_CHAR = 1059 T_UNKNOWN_ERROR = 1087 T_VALUE_ERROR = 1075 T_WB_LBRACK = 1090 T_WB_RBRACK = 1091 T_XLFN = 1049 T_XLOP = 1051 T_XLPM = 1050 T_XLWS = 1048 UMINUS = 1119 error = 2"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Generated.ValueType.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Generated.ValueType.html",
    "title": "Struct ValueType | OpenLanguage Documentation",
    "summary": "Struct ValueType Namespace OpenLanguage.SpreadsheetML.Formula.Generated Assembly OpenLanguage.dll public struct ValueType Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Fields A1AbsoluteColumnVal public A1AbsoluteColumnNode A1AbsoluteColumnVal Field Value A1AbsoluteColumnNode A1AbsoluteRowVal public A1AbsoluteRowNode A1AbsoluteRowVal Field Value A1AbsoluteRowNode A1CellVal public A1CellNode A1CellVal Field Value A1CellNode A1ColumnOnlyVal public A1ColumnNode A1ColumnOnlyVal Field Value A1ColumnNode A1ColumnVal public A1ColumnNode A1ColumnVal Field Value A1ColumnNode A1RelativeColumnVal public A1RelativeColumnNode A1RelativeColumnVal Field Value A1RelativeColumnNode A1RelativeRowVal public A1RelativeRowNode A1RelativeRowVal Field Value A1RelativeRowNode A1RowOnlyVal public A1RowNode A1RowOnlyVal Field Value A1RowNode A1RowVal public A1RowNode A1RowVal Field Value A1RowNode R1C1AbsoluteColumnVal public R1C1AbsoluteColumnNode R1C1AbsoluteColumnVal Field Value R1C1AbsoluteColumnNode R1C1AbsoluteRowVal public R1C1AbsoluteRowNode R1C1AbsoluteRowVal Field Value R1C1AbsoluteRowNode R1C1CellVal public R1C1CellNode R1C1CellVal Field Value R1C1CellNode R1C1ColumnVal public R1C1ColumnNode R1C1ColumnVal Field Value R1C1ColumnNode R1C1RelativeColumnVal public R1C1RelativeColumnNode R1C1RelativeColumnVal Field Value R1C1RelativeColumnNode R1C1RelativeRowVal public R1C1RelativeRowNode R1C1RelativeRowVal Field Value R1C1RelativeRowNode R1C1RowVal public R1C1RowNode R1C1RowVal Field Value R1C1RowNode bangReferenceVal public BangReferenceNode bangReferenceVal Field Value BangReferenceNode bangVal public BangNode bangVal Field Value BangNode boolVal public bool boolVal Field Value bool commandFunctionVal public CommandFunctionNode commandFunctionVal Field Value CommandFunctionNode doubleVal public double doubleVal Field Value double expressionListVal public List<ExpressionNode> expressionListVal Field Value List<ExpressionNode> expressionVal public ExpressionNode expressionVal Field Value ExpressionNode floatingPointNodeVal public NumericLiteralNode<double> floatingPointNodeVal Field Value NumericLiteralNode<double> futureFunctionVal public FutureFunctionNode futureFunctionVal Field Value FutureFunctionNode integerNodeVal public NumericLiteralNode<long> integerNodeVal Field Value NumericLiteralNode<long> integerVal public int integerVal Field Value int longVal public long longVal Field Value long macroFunctionVal public MacroFunctionNode macroFunctionVal Field Value MacroFunctionNode nameVal public NameNode nameVal Field Value NameNode nodeListVal public List<Node> nodeListVal Field Value List<Node> nodeVal public Node nodeVal Field Value Node pyWorksheetFunctionVal public PyFunctionNode pyWorksheetFunctionVal Field Value PyFunctionNode rowsVal public List<List<ExpressionNode>> rowsVal Field Value List<List<ExpressionNode>> standardFunctionVal public StandardFunctionNode standardFunctionVal Field Value StandardFunctionNode stringVal public string stringVal Field Value string structureAllVal public StructureAllReferenceNode structureAllVal Field Value StructureAllReferenceNode structureColumnRangeVal public StructureColumnRange structureColumnRangeVal Field Value StructureColumnRange structureDataVal public StructureDataReferenceNode structureDataVal Field Value StructureDataReferenceNode structureHeadersVal public StructureHeadersReferenceNode structureHeadersVal Field Value StructureHeadersReferenceNode structureThisRowColumnVal public StructureThisRowColumnReferenceNode structureThisRowColumnVal Field Value StructureThisRowColumnReferenceNode structureThisRowVal public StructureThisRowReferenceNode structureThisRowVal Field Value StructureThisRowReferenceNode structureTotalsVal public StructureTotalsReferenceNode structureTotalsVal Field Value StructureTotalsReferenceNode ulongVal public ulong ulongVal Field Value ulong workbookIndexVal public WorkbookReferenceNode workbookIndexVal Field Value WorkbookReferenceNode worksheetFunctionVal public WorksheetFunctionNode worksheetFunctionVal Field Value WorksheetFunctionNode xlfnVal public XlfnFunctionPrefixNode xlfnVal Field Value XlfnFunctionPrefixNode xlopVal public XlopPrefixNode xlopVal Field Value XlopPrefixNode xlpmVal public XlpmFunctionPrefixNode xlpmVal Field Value XlpmFunctionPrefixNode xlwsVal public XlwsFunctionPrefixNode xlwsVal Field Value XlwsFunctionPrefixNode"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.Generated.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.Generated.html",
    "title": "Namespace OpenLanguage.SpreadsheetML.Formula.Generated | OpenLanguage Documentation",
    "summary": "Namespace OpenLanguage.SpreadsheetML.Formula.Generated Classes CodePageHandling Parser ScanBase ScanObj Structs ValueType Enums Tokens"
  },
  "api/OpenLanguage.SpreadsheetML.Formula.html": {
    "href": "api/OpenLanguage.SpreadsheetML.Formula.html",
    "title": "Namespace OpenLanguage.SpreadsheetML.Formula | OpenLanguage Documentation",
    "summary": "Namespace OpenLanguage.SpreadsheetML.Formula Classes FormulaParser A parser for Excel-like formulas using the GPLEX/GPPG toolchain."
  },
  "api/OpenLanguage.Utils.AlphabeticHexevigesimalProvider.html": {
    "href": "api/OpenLanguage.Utils.AlphabeticHexevigesimalProvider.html",
    "title": "Class AlphabeticHexevigesimalProvider | OpenLanguage Documentation",
    "summary": "Class AlphabeticHexevigesimalProvider Namespace OpenLanguage.Utils Assembly OpenLanguage.dll Provides formatting services to convert a UInt64 to and from an Excel-style alphabetic column string (e.g., 1 -> \"A\", 27 -> \"AA\"). Usage for formatting: UInt64 value = 27; string formatted = value.ToString(\"AH\", new AlphabeticHexevigesimalProvider()); // \"AA\" Usage for parsing: string column = \"AA\"; UInt64 parsed = AlphabeticHexevigesimalProvider.Parse<UInt64>(column); // 27 public class AlphabeticHexevigesimalProvider : IFormatProvider, ICustomFormatter Inheritance object AlphabeticHexevigesimalProvider Implements IFormatProvider ICustomFormatter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Format(string?, object?, IFormatProvider?) Converts the value of a specified object to an equivalent string representation using specified format and culture-specific formatting information. public string Format(string? format, object? arg, IFormatProvider? formatProvider = null) Parameters format string arg object formatProvider IFormatProvider Returns string Format<N>(string?, N?, IFormatProvider?) Converts the value of a specified object to an equivalent string representation using specified format and culture-specific formatting information. public string Format<N>(string? format, N? arg, IFormatProvider? formatProvider = null) where N : INumber<N>, IBinaryNumber<N>, INumberBase<N>, IParsable<N>, IFormattable, IMinMaxValue<N> Parameters format string arg N formatProvider IFormatProvider Returns string Type Parameters N GetFormat(Type?) Returns an object that provides formatting services for the specified type. public object? GetFormat(Type? formatType) Parameters formatType Type Returns object Parse<N>(string?) Converts the Excel-style alphabetic string to its numeric equivalent. public static N Parse<N>(string? s) where N : INumber<N>, IBinaryNumber<N>, INumberBase<N>, IParsable<N>, IFormattable, IMinMaxValue<N> Parameters s string A string containing the alphabetic number to convert (e.g., \"A\", \"AZ\"). Returns N The numeric equivalent of the number contained in s. Type Parameters N Exceptions ArgumentException s is null, empty, whitespace, or contains invalid characters. OverflowException s represents a number larger than the specified type can hold. TryParse<N>(string?, out N) Tries to convert the Excel-style alphabetic string to its numeric equivalent. public static bool TryParse<N>(string? s, out N result) where N : INumber<N>, IBinaryNumber<N>, INumberBase<N>, IParsable<N>, IFormattable, IMinMaxValue<N> Parameters s string A string containing the alphabetic number to convert. result N When this method returns, contains the numeric equivalent, if the conversion succeeded. Returns bool true if s was converted successfully; otherwise, false. Type Parameters N"
  },
  "api/OpenLanguage.Utils.NumericUtils.html": {
    "href": "api/OpenLanguage.Utils.NumericUtils.html",
    "title": "Class NumericUtils | OpenLanguage Documentation",
    "summary": "Class NumericUtils Namespace OpenLanguage.Utils Assembly OpenLanguage.dll public static class NumericUtils Inheritance object NumericUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsIntegerType<T>() public static bool IsIntegerType<T>() where T : IConvertible Returns bool Type Parameters T"
  },
  "api/OpenLanguage.Utils.html": {
    "href": "api/OpenLanguage.Utils.html",
    "title": "Namespace OpenLanguage.Utils | OpenLanguage Documentation",
    "summary": "Namespace OpenLanguage.Utils Classes AlphabeticHexevigesimalProvider Provides formatting services to convert a UInt64 to and from an Excel-style alphabetic column string (e.g., 1 -> \"A\", 27 -> \"AA\"). Usage for formatting: UInt64 value = 27; string formatted = value.ToString(\"AH\", new AlphabeticHexevigesimalProvider()); // \"AA\" Usage for parsing: string column = \"AA\"; UInt64 parsed = AlphabeticHexevigesimalProvider.Parse<UInt64>(column); // 27 NumericUtils"
  },
  "api/OpenLanguage.WordprocessingML.Expression.Expression.html": {
    "href": "api/OpenLanguage.WordprocessingML.Expression.Expression.html",
    "title": "Class Expression | OpenLanguage Documentation",
    "summary": "Class Expression Namespace OpenLanguage.WordprocessingML.Expression Assembly OpenLanguage.dll Represents a parsed expression. public class Expression Inheritance object Expression Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Expression() Default constructor. public Expression() Expression(string?) Constructor for creating a expression from raw text. public Expression(string? rawText) Parameters rawText string Expression(string?, ComparisonOperator, string?) Constructor for creating a binary expression. public Expression(string? leftOperand, ComparisonOperator op, string? rightOperand) Parameters leftOperand string op ComparisonOperator rightOperand string Properties ContainsMergeFields Whether this expression contains merge field references. public bool ContainsMergeFields { get; } Property Value bool IsLiteral Whether this expression is a literal value. public bool IsLiteral { get; } Property Value bool LeftOperand The left operand for binary expressions. public string? LeftOperand { get; set; } Property Value string Operator The operator for binary expressions. public ComparisonOperator? Operator { get; set; } Property Value ComparisonOperator? RawText The raw expression text. public string RawText { get; set; } Property Value string RightOperand The right operand for binary expressions. public string? RightOperand { get; set; } Property Value string Tokens The parsed tokens from the expression. public List<ExpressionToken> Tokens { get; set; } Property Value List<ExpressionToken> Methods ToString() Returns a string representation of this expression. public override string ToString() Returns string"
  },
  "api/OpenLanguage.WordprocessingML.Expression.ExpressionLexer.html": {
    "href": "api/OpenLanguage.WordprocessingML.Expression.ExpressionLexer.html",
    "title": "Class ExpressionLexer | OpenLanguage Documentation",
    "summary": "Class ExpressionLexer Namespace OpenLanguage.WordprocessingML.Expression Assembly OpenLanguage.dll Lexer for parsing expressions. public static class ExpressionLexer Inheritance object ExpressionLexer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Parse(string) Parses a expression string into a Expression object. public static Expression Parse(string expressionText) Parameters expressionText string The expression text to parse. Returns Expression A parsed Expression object. ParseExpression(string?) Parses a expression string into a Expression object. public static Expression ParseExpression(string? expressionText) Parameters expressionText string The expression text to parse. Returns Expression A parsed Expression object. TokenizeExpression(string?) Tokenizes an expression string into individual tokens using a character-by-character state machine. public static List<ExpressionToken> TokenizeExpression(string? text) Parameters text string The text to tokenize. Returns List<ExpressionToken> A list of expression tokens."
  },
  "api/OpenLanguage.WordprocessingML.Expression.ExpressionToken.html": {
    "href": "api/OpenLanguage.WordprocessingML.Expression.ExpressionToken.html",
    "title": "Class ExpressionToken | OpenLanguage Documentation",
    "summary": "Class ExpressionToken Namespace OpenLanguage.WordprocessingML.Expression Assembly OpenLanguage.dll Represents a token within a expression. public class ExpressionToken Inheritance object ExpressionToken Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Position The original position in the source text. public int Position { get; set; } Property Value int Type The type of token. public ExpressionTokenType Type { get; set; } Property Value ExpressionTokenType Value The token value. public string Value { get; set; } Property Value string"
  },
  "api/OpenLanguage.WordprocessingML.Expression.ExpressionTokenType.html": {
    "href": "api/OpenLanguage.WordprocessingML.Expression.ExpressionTokenType.html",
    "title": "Enum ExpressionTokenType | OpenLanguage Documentation",
    "summary": "Enum ExpressionTokenType Namespace OpenLanguage.WordprocessingML.Expression Assembly OpenLanguage.dll Types of tokens that can appear in expressions. public enum ExpressionTokenType Fields Identifier = 4 An identifier or field name. MergeField = 2 A merge field reference. Number = 1 A numeric literal. Operator = 3 A comparison operator. String = 0 A string literal (quoted text). Unknown = 6 Unknown or unrecognized token. Whitespace = 5 Whitespace."
  },
  "api/OpenLanguage.WordprocessingML.Expression.html": {
    "href": "api/OpenLanguage.WordprocessingML.Expression.html",
    "title": "Namespace OpenLanguage.WordprocessingML.Expression | OpenLanguage Documentation",
    "summary": "Namespace OpenLanguage.WordprocessingML.Expression Classes Expression Represents a parsed expression. ExpressionLexer Lexer for parsing expressions. ExpressionToken Represents a token within a expression. Enums ExpressionTokenType Types of tokens that can appear in expressions."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.CountryRegion.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.CountryRegion.html",
    "title": "Enum CountryRegion | OpenLanguage Documentation",
    "summary": "Enum CountryRegion Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Represents ISO 3166-1 country and region codes for international addressing. public enum CountryRegion Fields Afghanistan = 0 Afghanistan - AF Albania = 1 Albania - AL Algeria = 2 Algeria - DZ AmericanSamoa = 3 American Samoa - AS Andorra = 4 Andorra - AD Angola = 5 Angola - AO Anguilla = 6 Anguilla - AI Antarctica = 7 Antarctica - AQ AntiguaAndBarbuda = 8 Antigua and Barbuda - AG Argentina = 9 Argentina - AR Armenia = 10 Armenia - AM Aruba = 11 Aruba - AW Australia = 12 Australia - AU Austria = 13 Austria - AT Azerbaijan = 14 Azerbaijan - AZ Bahamas = 15 Bahamas - BS Bahrain = 16 Bahrain - BH Bangladesh = 17 Bangladesh - BD Barbados = 18 Barbados - BB Belarus = 19 Belarus - BY Belgium = 20 Belgium - BE Belize = 21 Belize - BZ Benin = 22 Benin - BJ Bermuda = 23 Bermuda - BM Bhutan = 24 Bhutan - BT Bolivia = 25 Bolivia - BO BosniaAndHerzegovina = 26 Bosnia and Herzegovina - BA Botswana = 27 Botswana - BW BouvetIsland = 28 Bouvet Island - BV Brazil = 29 Brazil - BR BritishIndianOceanTerritory = 30 British Indian Ocean Territory - IO BruneiDarussalam = 31 Brunei Darussalam - BN Bulgaria = 32 Bulgaria - BG BurkinaFaso = 33 Burkina Faso - BF Burundi = 34 Burundi - BI Cambodia = 35 Cambodia - KH Cameroon = 36 Cameroon - CM Canada = 37 Canada - CA CapeVerde = 38 Cape Verde - CV CaymanIslands = 39 Cayman Islands - KY CentralAfricanRepublic = 40 Central African Republic - CF Chad = 41 Chad - TD Chile = 42 Chile - CL China = 43 China - CN ChristmasIsland = 44 Christmas Island - CX CocosKeelingIslands = 45 Cocos (Keeling) Islands - CC Colombia = 46 Colombia - CO Comoros = 47 Comoros - KM Congo = 48 Congo - CG CongoDemocraticRepublic = 49 Congo, Democratic Republic - CD CookIslands = 50 Cook Islands - CK CostaRica = 51 Costa Rica - CR CoteDIvoire = 52 Côte d'Ivoire - CI Croatia = 53 Croatia - HR Cuba = 54 Cuba - CU Cyprus = 55 Cyprus - CY CzechRepublic = 56 Czech Republic - CZ Denmark = 57 Denmark - DK Djibouti = 58 Djibouti - DJ Dominica = 59 Dominica - DM DominicanRepublic = 60 Dominican Republic - DO Ecuador = 61 Ecuador - EC Egypt = 62 Egypt - EG ElSalvador = 63 El Salvador - SV EquatorialGuinea = 64 Equatorial Guinea - GQ Eritrea = 65 Eritrea - ER Estonia = 66 Estonia - EE Ethiopia = 67 Ethiopia - ET FalklandIslands = 68 Falkland Islands - FK FaroeIslands = 69 Faroe Islands - FO Fiji = 70 Fiji - FJ Finland = 71 Finland - FI France = 72 France - FR FrenchGuiana = 73 French Guiana - GF FrenchPolynesia = 74 French Polynesia - PF FrenchSouthernTerritories = 75 French Southern Territories - TF Gabon = 76 Gabon - GA Gambia = 77 Gambia - GM Georgia = 78 Georgia - GE Germany = 79 Germany - DE Ghana = 80 Ghana - GH Gibraltar = 81 Gibraltar - GI Greece = 82 Greece - GR Greenland = 83 Greenland - GL Grenada = 84 Grenada - GD Guadeloupe = 85 Guadeloupe - GP Guam = 86 Guam - GU Guatemala = 87 Guatemala - GT Guernsey = 88 Guernsey - GG Guinea = 89 Guinea - GN GuineaBissau = 90 Guinea-Bissau - GW Guyana = 91 Guyana - GY Haiti = 92 Haiti - HT HeardIslandAndMcDonaldIslands = 93 Heard Island and McDonald Islands - HM HolySeeVaticanCityState = 94 Holy See (Vatican City State) - VA Honduras = 95 Honduras - HN HongKong = 96 Hong Kong - HK Hungary = 97 Hungary - HU Iceland = 98 Iceland - IS India = 99 India - IN Indonesia = 100 Indonesia - ID Iran = 101 Iran - IR Iraq = 102 Iraq - IQ Ireland = 103 Ireland - IE IsleOfMan = 104 Isle of Man - IM Israel = 105 Israel - IL Italy = 106 Italy - IT Jamaica = 107 Jamaica - JM Japan = 108 Japan - JP Jersey = 109 Jersey - JE Jordan = 110 Jordan - JO Kazakhstan = 111 Kazakhstan - KZ Kenya = 112 Kenya - KE Kiribati = 113 Kiribati - KI KoreaDemocraticPeoplesRepublic = 114 Korea, Democratic People's Republic - KP KoreaRepublicOf = 115 Korea, Republic of - KR Kuwait = 116 Kuwait - KW Kyrgyzstan = 117 Kyrgyzstan - KG LaoPeoplesDemocraticRepublic = 118 Lao People's Democratic Republic - LA Latvia = 119 Latvia - LV Lebanon = 120 Lebanon - LB Lesotho = 121 Lesotho - LS Liberia = 122 Liberia - LR Libya = 123 Libya - LY Liechtenstein = 124 Liechtenstein - LI Lithuania = 125 Lithuania - LT Luxembourg = 126 Luxembourg - LU Macao = 127 Macao - MO Madagascar = 128 Madagascar - MG Malawi = 129 Malawi - MW Malaysia = 130 Malaysia - MY Maldives = 131 Maldives - MV Mali = 132 Mali - ML Malta = 133 Malta - MT MarshallIslands = 134 Marshall Islands - MH Martinique = 135 Martinique - MQ Mauritania = 136 Mauritania - MR Mauritius = 137 Mauritius - MU Mayotte = 138 Mayotte - YT Mexico = 139 Mexico - MX Micronesia = 140 Micronesia - FM Moldova = 141 Moldova - MD Monaco = 142 Monaco - MC Mongolia = 143 Mongolia - MN Montenegro = 144 Montenegro - ME Montserrat = 145 Montserrat - MS Morocco = 146 Morocco - MA Mozambique = 147 Mozambique - MZ Myanmar = 148 Myanmar - MM Namibia = 149 Namibia - NA Nauru = 150 Nauru - NR Nepal = 151 Nepal - NP Netherlands = 152 Netherlands - NL NewCaledonia = 153 New Caledonia - NC NewZealand = 154 New Zealand - NZ Nicaragua = 155 Nicaragua - NI Niger = 156 Niger - NE Nigeria = 157 Nigeria - NG Niue = 158 Niue - NU NorfolkIsland = 159 Norfolk Island - NF NorthMacedonia = 160 North Macedonia - MK NorthernMarianaIslands = 161 Northern Mariana Islands - MP Norway = 162 Norway - NO Oman = 163 Oman - OM Pakistan = 164 Pakistan - PK Palau = 165 Palau - PW PalestinianTerritory = 166 Palestinian Territory - PS Panama = 167 Panama - PA PapuaNewGuinea = 168 Papua New Guinea - PG Paraguay = 169 Paraguay - PY Peru = 170 Peru - PE Philippines = 171 Philippines - PH Pitcairn = 172 Pitcairn - PN Poland = 173 Poland - PL Portugal = 174 Portugal - PT PuertoRico = 175 Puerto Rico - PR Qatar = 176 Qatar - QA Reunion = 177 Réunion - RE Romania = 178 Romania - RO RussianFederation = 179 Russian Federation - RU Rwanda = 180 Rwanda - RW SaintBarthelemy = 181 Saint Barthélemy - BL SaintHelena = 182 Saint Helena - SH SaintKittsAndNevis = 183 Saint Kitts and Nevis - KN SaintLucia = 184 Saint Lucia - LC SaintMartin = 185 Saint Martin - MF SaintPierreAndMiquelon = 186 Saint Pierre and Miquelon - PM SaintVincentAndTheGrenadines = 187 Saint Vincent and the Grenadines - VC Samoa = 188 Samoa - WS SanMarino = 189 San Marino - SM SaoTomeAndPrincipe = 190 Sao Tome and Principe - ST SaudiArabia = 191 Saudi Arabia - SA Senegal = 192 Senegal - SN Serbia = 193 Serbia - RS Seychelles = 194 Seychelles - SC SierraLeone = 195 Sierra Leone - SL Singapore = 196 Singapore - SG SintMaarten = 197 Sint Maarten - SX Slovakia = 198 Slovakia - SK Slovenia = 199 Slovenia - SI SolomonIslands = 200 Solomon Islands - SB Somalia = 201 Somalia - SO SouthAfrica = 202 South Africa - ZA SouthGeorgiaAndTheSouthSandwichIslands = 203 South Georgia and the South Sandwich Islands - GS SouthSudan = 204 South Sudan - SS Spain = 205 Spain - ES SriLanka = 206 Sri Lanka - LK Sudan = 207 Sudan - SD Suriname = 208 Suriname - SR SvalbardAndJanMayen = 209 Svalbard and Jan Mayen - SJ Swaziland = 210 Swaziland - SZ Sweden = 211 Sweden - SE Switzerland = 212 Switzerland - CH SyrianArabRepublic = 213 Syrian Arab Republic - SY Taiwan = 214 Taiwan - TW Tajikistan = 215 Tajikistan - TJ Tanzania = 216 Tanzania - TZ Thailand = 217 Thailand - TH TimorLeste = 218 Timor-Leste - TL Togo = 219 Togo - TG Tokelau = 220 Tokelau - TK Tonga = 221 Tonga - TO TrinidadAndTobago = 222 Trinidad and Tobago - TT Tunisia = 223 Tunisia - TN Turkey = 224 Turkey - TR Turkmenistan = 225 Turkmenistan - TM TurksAndCaicosIslands = 226 Turks and Caicos Islands - TC Tuvalu = 227 Tuvalu - TV Uganda = 228 Uganda - UG Ukraine = 229 Ukraine - UA UnitedArabEmirates = 230 United Arab Emirates - AE UnitedKingdom = 231 United Kingdom - GB UnitedStates = 232 United States - US UnitedStatesMinorOutlyingIslands = 233 United States Minor Outlying Islands - UM Uruguay = 234 Uruguay - UY Uzbekistan = 235 Uzbekistan - UZ Vanuatu = 236 Vanuatu - VU Venezuela = 237 Venezuela - VE VietNam = 238 Viet Nam - VN VirginIslandsBritish = 239 Virgin Islands, British - VG VirginIslandsUS = 240 Virgin Islands, U.S. - VI WallisAndFutuna = 241 Wallis and Futuna - WF WesternSahara = 242 Western Sahara - EH Yemen = 243 Yemen - YE Zambia = 244 Zambia - ZM Zimbabwe = 245 Zimbabwe - ZW"
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.CountryRegionInclusion.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.CountryRegionInclusion.html",
    "title": "Enum CountryRegionInclusion | OpenLanguage Documentation",
    "summary": "Enum CountryRegionInclusion Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Represents country/region inclusion options for ADDRESSBLOCK field instructions. public enum CountryRegionInclusion Fields Include = 1 Include the country/region in the address block. IncludeIfDifferent = 2 Include the country/region only if it is different from the excluded country/region. Omit = 0 Omit the country/region from the address block."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.DatabaseOptimizationFlag.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.DatabaseOptimizationFlag.html",
    "title": "Enum DatabaseOptimizationFlag | OpenLanguage Documentation",
    "summary": "Enum DatabaseOptimizationFlag Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Represents optimization flag options for DATABASE field instructions. public enum DatabaseOptimizationFlag Fields CacheResults = 2 Cache results for improved performance. None = 0 No optimization - query runs for each record. OptimizeForLargeData = 4 Optimize for large datasets. OptimizeForSmallData = 5 Optimize for small datasets. QueryOnce = 1 Query once at beginning of merge operation. UseConnectionPooling = 3 Use connection pooling."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.DatabaseTableAttributes.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.DatabaseTableAttributes.html",
    "title": "Enum DatabaseTableAttributes | OpenLanguage Documentation",
    "summary": "Enum DatabaseTableAttributes Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Represents table formatting attributes for DATABASE field instructions. Values can be combined using bitwise OR operations. [Flags] public enum DatabaseTableAttributes Fields AutoFit = 16 Apply AutoFit to the table (16). Borders = 1 Apply borders to the table (1). Color = 8 Apply color formatting to the table (8). FirstColumn = 128 Apply special formatting to the first column (128). Font = 4 Apply font formatting to the table (4). HeadingRows = 32 Apply special formatting to heading rows (32). LastColumn = 256 Apply special formatting to the last column (256). LastRow = 64 Apply special formatting to the last row (64). None = 0 No formatting attributes (0). Shading = 2 Apply shading to the table (2)."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.DatabaseTableFormat.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.DatabaseTableFormat.html",
    "title": "Enum DatabaseTableFormat | OpenLanguage Documentation",
    "summary": "Enum DatabaseTableFormat Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Represents table format options for DATABASE field instructions. Word supports 42 pre-formatted table styles numbered 0-41. public enum DatabaseTableFormat Fields Classic1 = 4 Format 4 - Classic 1 Classic2 = 5 Format 5 - Classic 2 Classic3 = 6 Format 6 - Classic 3 Classic4 = 7 Format 7 - Classic 4 Colorful1 = 8 Format 8 - Colorful 1 Colorful2 = 9 Format 9 - Colorful 2 Colorful3 = 10 Format 10 - Colorful 3 Columns1 = 11 Format 11 - Columns 1 Columns2 = 12 Format 12 - Columns 2 Columns3 = 13 Format 13 - Columns 3 Columns4 = 14 Format 14 - Columns 4 Columns5 = 15 Format 15 - Columns 5 Contemporary = 35 Format 35 - Contemporary Elegant = 36 Format 36 - Elegant Grid1 = 16 Format 16 - Grid 1 Grid2 = 17 Format 17 - Grid 2 Grid3 = 18 Format 18 - Grid 3 Grid4 = 19 Format 19 - Grid 4 Grid5 = 20 Format 20 - Grid 5 Grid6 = 21 Format 21 - Grid 6 Grid7 = 22 Format 22 - Grid 7 Grid8 = 23 Format 23 - Grid 8 List1 = 24 Format 24 - List 1 List2 = 25 Format 25 - List 2 List3 = 26 Format 26 - List 3 List4 = 27 Format 27 - List 4 List5 = 28 Format 28 - List 5 List6 = 29 Format 29 - List 6 List7 = 30 Format 30 - List 7 List8 = 31 Format 31 - List 8 None = 0 Format 0 - None/Default Professional = 37 Format 37 - Professional Simple1 = 1 Format 1 - Simple 1 Simple2 = 2 Format 2 - Simple 2 Simple3 = 3 Format 3 - Simple 3 Subtle1 = 38 Format 38 - Subtle 1 Subtle2 = 39 Format 39 - Subtle 2 ThreeDEffects1 = 32 Format 32 - 3D Effects 1 ThreeDEffects2 = 33 Format 33 - 3D Effects 2 ThreeDEffects3 = 34 Format 34 - 3D Effects 3 Web1 = 40 Format 40 - Web 1 Web2 = 41 Format 41 - Web 2"
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.DocumentPropertyCategory.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.DocumentPropertyCategory.html",
    "title": "Enum DocumentPropertyCategory | OpenLanguage Documentation",
    "summary": "Enum DocumentPropertyCategory Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Represents document property categories used in DOCPROPERTY field instructions. public enum DocumentPropertyCategory Fields Author = 0 AUTHOR - Document author information. Bytes = 1 BYTES - Document file size in bytes. Category = 2 CATEGORY - Document category from Core File Properties. Characters = 3 CHARACTERS - Number of characters in the document. CharactersWithSpaces = 4 CHARACTERSWITHSPACES - Number of characters including spaces. Comments = 5 COMMENTS - Document comments. Company = 6 COMPANY - Company name from Application-Defined File Properties. CreateTime = 7 CREATETIME - Document creation time. HyperlinkBase = 8 HYPERLINKBASE - Hyperlink base from Application-Defined File Properties. Keywords = 9 KEYWORDS - Document keywords from Core File Properties. LastPrinted = 10 LASTPRINTED - Last printed date. LastSavedBy = 11 LASTSAVEDBY - Last saved by user. LastSavedTime = 12 LASTSAVEDTIME - Last saved time. Lines = 13 LINES - Number of lines from Application-Defined File Properties. Manager = 14 MANAGER - Manager name from Application-Defined File Properties. NameOfApplication = 15 NAMEOFAPPLICATION - Application name from Application-Defined File Properties. OdmaDocId = 16 ODMADOCID - ODMA document ID. Pages = 17 PAGES - Number of pages in the document. Paragraphs = 18 PARAGRAPHS - Number of paragraphs from Application-Defined File Properties. RevisionNumber = 19 REVISIONNUMBER - Document revision number. Security = 20 SECURITY - Document security level from Application-Defined File Properties. Subject = 21 SUBJECT - Document subject. Template = 22 TEMPLATE - Document template. Title = 23 TITLE - Document title. TotalEditingTime = 24 TOTALEDITINGTIME - Total editing time. Words = 25 WORDS - Number of words from Application-Defined File Properties."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.FacingIdentificationMarkType.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.FacingIdentificationMarkType.html",
    "title": "Enum FacingIdentificationMarkType | OpenLanguage Documentation",
    "summary": "Enum FacingIdentificationMarkType Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Represents the type of Facing Identification Mark (FIM) for BARCODE field instructions. public enum FacingIdentificationMarkType Fields BusinessReply = 1 C - Business reply mark. CourtesyReply = 0 A - Courtesy reply mark."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.FieldArgument.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.FieldArgument.html",
    "title": "Class FieldArgument | OpenLanguage Documentation",
    "summary": "Class FieldArgument Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Represents a single argument for a field instruction. An argument has a type and a value. The value can be a string or another FieldInstruction for nested fields. public class FieldArgument Inheritance object FieldArgument Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FieldArgument(FieldArgumentType, object?) public FieldArgument(FieldArgumentType type, object? value) Parameters type FieldArgumentType value object Properties Type The type of the argument. public FieldArgumentType Type { get; } Property Value FieldArgumentType Value The value of the argument. This is a string for simple types and a FieldInstruction object for the NestedField type. public object? Value { get; } Property Value object Methods ToString() Recompiles the argument back into its valid field code string representation. public override string ToString() Returns string A string representing the argument as it would appear in a field code."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.FieldArgumentType.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.FieldArgumentType.html",
    "title": "Enum FieldArgumentType | OpenLanguage Documentation",
    "summary": "Enum FieldArgumentType Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Defines the type of a parsed argument within a field instruction. public enum FieldArgumentType Fields Identifier = 0 An identifier or a simple value (e.g., a bookmark name, a number). NestedField = 3 A complete, nested field instruction enclosed in braces. Number = 5 A numeric value. StringLiteral = 1 A string literal enclosed in double quotes. Switch = 2 A field switch, which always begins with a backslash (e.g., \\h, @, \\b). Text = 4 A text value."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.FieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.FieldInstruction.html",
    "title": "Class FieldInstruction | OpenLanguage Documentation",
    "summary": "Class FieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Represents a fully parsed Word field instruction, including its main instruction keyword (e.g., \"MERGEFIELD\") and a list of its arguments. This object can be modified and recompiled back into a field code string. public class FieldInstruction Inheritance object FieldInstruction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FieldInstruction(string) public FieldInstruction(string instruction) Parameters instruction string FieldInstruction(string, List<FieldArgument>) public FieldInstruction(string instruction, List<FieldArgument> arguments) Parameters instruction string arguments List<FieldArgument> Properties Arguments A list of arguments that belong to this instruction. You can directly manipulate this list (add, remove, replace arguments) before recompiling the instruction to a string. public List<FieldArgument> Arguments { get; } Property Value List<FieldArgument> Instruction The primary keyword of the field (e.g., IF, REF, HYPERLINK). public string Instruction { get; set; } Property Value string Methods ToString() Recompiles the entire FieldInstruction object back into a valid, standards-compliant field code string. public override string ToString() Returns string The reconstructed field code string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.FieldLexer.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.FieldLexer.html",
    "title": "Class FieldLexer | OpenLanguage Documentation",
    "summary": "Class FieldLexer Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll A lexer for tokenizing Word field codes into a stream of tokens. public static class FieldLexer Inheritance object FieldLexer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Tokenize(string) public static IEnumerable<FieldToken> Tokenize(string fieldCode) Parameters fieldCode string Returns IEnumerable<FieldToken>"
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.FieldParser.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.FieldParser.html",
    "title": "Class FieldParser | OpenLanguage Documentation",
    "summary": "Class FieldParser Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll A recursive descent parser that builds a structured FieldInstruction object from a stream of tokens provided by the FieldLexer. public class FieldParser Inheritance object FieldParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Parse(string) public FieldInstruction Parse(string fieldCode) Parameters fieldCode string Returns FieldInstruction TryParse(string) public FieldInstruction? TryParse(string fieldCode) Parameters fieldCode string Returns FieldInstruction TryParseFiltered(string, HashSet<string>) public FieldInstruction? TryParseFiltered(string fieldCode, HashSet<string> keywordFilter) Parameters fieldCode string keywordFilter HashSet<string> Returns FieldInstruction"
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.FieldToken.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.FieldToken.html",
    "title": "Class FieldToken | OpenLanguage Documentation",
    "summary": "Class FieldToken Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Represents a token extracted from a field code string by the lexer. public class FieldToken Inheritance object FieldToken Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FieldToken(FieldTokenType, string, int) public FieldToken(FieldTokenType type, string value, int startIndex) Parameters type FieldTokenType value string startIndex int Properties StartIndex public int StartIndex { get; } Property Value int Type public FieldTokenType Type { get; } Property Value FieldTokenType Value public string Value { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.FieldTokenType.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.FieldTokenType.html",
    "title": "Enum FieldTokenType | OpenLanguage Documentation",
    "summary": "Enum FieldTokenType Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Defines the types of tokens that can be found in a Word field code. public enum FieldTokenType Fields EndOfField = 8 Identifier = 2 Keyword = 1 LeftBrace = 6 RightBrace = 7 StringLiteral = 3 Switch = 4 Unknown = 0 Whitespace = 5"
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.FrameTarget.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.FrameTarget.html",
    "title": "Enum FrameTarget | OpenLanguage Documentation",
    "summary": "Enum FrameTarget Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll public enum FrameTarget Fields Blank = 2 Parent = 3 Self = 1 Top = 0"
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.FrameTargetUtils.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.FrameTargetUtils.html",
    "title": "Class FrameTargetUtils | OpenLanguage Documentation",
    "summary": "Class FrameTargetUtils Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll public static class FrameTargetUtils Inheritance object FrameTargetUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FrameTargetText(FrameTarget) Converts a frame target enumeration to text. public static string FrameTargetText(FrameTarget frameTarget) Parameters frameTarget FrameTarget The frame target enumeration to convert. Returns string The converted string. ParseFrameTarget(string) Parses a frame target from text. public static FrameTarget ParseFrameTarget(string frameTargetText) Parameters frameTargetText string The operator text to parse. Returns FrameTarget The parsed FrameTarget."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.NameFormat.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.NameFormat.html",
    "title": "Enum NameFormat | OpenLanguage Documentation",
    "summary": "Enum NameFormat Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Represents the format options for names in mail merge fields like GREETINGLINE and ADDRESSBLOCK. public enum NameFormat Fields FirstLastName = 2 First name followed by last name (e.g., \"John Smith\"). FirstName = 0 First name only (e.g., \"John\"). FullFormalName = 5 Full formal name including title, first name, and last name (e.g., \"Mr. John Smith\"). LastFirstName = 3 Last name followed by first name (e.g., \"Smith, John\"). LastName = 1 Last name only (e.g., \"Smith\"). TitleLastName = 4 Title followed by last name (e.g., \"Mr. Smith\")."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.NamespaceDeclaration.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.NamespaceDeclaration.html",
    "title": "Class NamespaceDeclaration | OpenLanguage Documentation",
    "summary": "Class NamespaceDeclaration Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Represents a validated XML namespace declaration in the format xmlns:prefix=\"URI\". public class NamespaceDeclaration Inheritance object NamespaceDeclaration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NamespaceDeclaration(string) public NamespaceDeclaration(string declaration) Parameters declaration string Properties Declaration Gets the original declaration string. public string Declaration { get; } Property Value string Namespace Gets the validated XNamespace object. public XNamespace Namespace { get; } Property Value XNamespace Prefix Gets the namespace prefix (the part after xmlns:). public string Prefix { get; } Property Value string Uri Gets the namespace URI. public string Uri { get; } Property Value string Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object. Operators implicit operator string(NamespaceDeclaration) public static implicit operator string(NamespaceDeclaration namespaceDeclaration) Parameters namespaceDeclaration NamespaceDeclaration Returns string implicit operator NamespaceDeclaration(string) public static implicit operator NamespaceDeclaration(string declaration) Parameters declaration string Returns NamespaceDeclaration"
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.PostalData.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.PostalData.html",
    "title": "Class PostalData | OpenLanguage Documentation",
    "summary": "Class PostalData Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Represents postal data that must be either a 5-digit or 9-digit ZIP code. public class PostalData Inheritance object PostalData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PostalData(string) Initializes a new instance of the PostalData class. public PostalData(string value) Parameters value string The ZIP code value. Properties Value The postal ZIP code value. public string Value { get; set; } Property Value string Methods ToString() Returns the string representation of the postal data. public override string ToString() Returns string Operators implicit operator string(PostalData) Implicit conversion from PostalData to string. public static implicit operator string(PostalData postalData) Parameters postalData PostalData Returns string implicit operator PostalData(string) Implicit conversion from string to PostalData. public static implicit operator PostalData(string value) Parameters value string Returns PostalData"
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.PtsMeasurementValue-1.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.PtsMeasurementValue-1.html",
    "title": "Struct PtsMeasurementValue<T> | OpenLanguage Documentation",
    "summary": "Struct PtsMeasurementValue<T> Namespace OpenLanguage.WordprocessingML.FieldInstruction Assembly OpenLanguage.dll Represents a measurement value in points, bounded from -31 to 31. Used for positioning and spacing measurements in field instructions. public struct PtsMeasurementValue<T> where T : struct, IBinaryNumber<T>, ISignedNumber<T>, IComparable<T> Type Parameters T Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Constructors PtsMeasurementValue(T) Initializes a new instance of the PtsMeasurementValue class. public PtsMeasurementValue(T value) Parameters value T The measurement value in points (-31 to 31). Fields MaxValue public static readonly T MaxValue Field Value T MinValue public static readonly T MinValue Field Value T Properties Value The measurement value in points. public T Value { get; set; } Property Value T Methods ToString() Returns the string representation of the measurement value. public override string ToString() Returns string Operators implicit operator T(PtsMeasurementValue<T>) Implicit conversion from PtsMeasurementValue to T. public static implicit operator T(PtsMeasurementValue<T> measurement) Parameters measurement PtsMeasurementValue<T> Returns T implicit operator PtsMeasurementValue<T>(T) Implicit conversion from T to PtsMeasurementValue. public static implicit operator PtsMeasurementValue<T>(T value) Parameters value T Returns PtsMeasurementValue<T>"
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AddressBlockFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AddressBlockFieldInstruction.html",
    "title": "Class AddressBlockFieldInstruction | OpenLanguage Documentation",
    "summary": "Class AddressBlockFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed ADDRESSBLOCK field instruction. The ADDRESSBLOCK field inserts a mail merge address block. public class AddressBlockFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction AddressBlockFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AddressBlockFieldInstruction() Creates a new ADDRESSBLOCK field instruction with default values. public AddressBlockFieldInstruction() AddressBlockFieldInstruction(FieldInstruction) public AddressBlockFieldInstruction(FieldInstruction source) Parameters source FieldInstruction Properties CountryRegionInclusionSetting Switch: \\c field-argument Specifies whether to include the country/region in the address block. public CountryRegionInclusion? CountryRegionInclusionSetting { get; set; } Property Value CountryRegionInclusion? ExcludedCountriesRegions Gets the list of countries/regions to exclude from the address block. Multiple exclusions are supported. public List<string> ExcludedCountriesRegions { get; } Property Value List<string> FormatByRecipientCountry Gets or sets whether the address should be formatted according to the recipient's country/region. If false or null, addresses are formatted according to implementation-specific preference. public bool FormatByRecipientCountry { get; set; } Property Value bool FormatTemplate Switch: \\f field-argument Name and address format template using merge-field placeholders. public List<MergeFieldPlaceholder>? FormatTemplate { get; set; } Property Value List<MergeFieldPlaceholder> LanguageId Gets or sets the language ID used to format the address. If null, uses the language ID of the first character of the document. public LanguageIdentifier? LanguageId { get; set; } Property Value LanguageIdentifier? Methods IsValid() Validates the current field instruction configuration. public bool IsValid() Returns bool True if the configuration is valid, false otherwise. RebuildArguments() Rebuilds the field instruction arguments from the current property values. public void RebuildArguments() ToString() Gets a string representation of the field instruction. public override string ToString() Returns string The field instruction as a string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AdvanceFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AdvanceFieldInstruction.html",
    "title": "Class AdvanceFieldInstruction | OpenLanguage Documentation",
    "summary": "Class AdvanceFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed ADVANCE field instruction. Moves the starting point of text that follows the field to the right or left, up or down, or to a specific horizontal or vertical position. The switches used by this field can cause text to overlap. Text will not display if it is moved to the previous or next page, or beyond the print margins of the current page. public class AdvanceFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction AdvanceFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AdvanceFieldInstruction(FieldInstruction) Initializes a new instance of the AdvanceFieldInstruction class. public AdvanceFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties HorizontalPosition Switch: \\x field-argument Set horizontal position from left edge of column/frame/text box in points. public PtsMeasurementValue<sbyte>? HorizontalPosition { get; set; } Property Value PtsMeasurementValue<sbyte>? MoveDown Switch: \\d field-argument Move text down by the specified number of points. public PtsMeasurementValue<sbyte>? MoveDown { get; set; } Property Value PtsMeasurementValue<sbyte>? MoveLeft Switch: \\l field-argument Move text left by the specified number of points. public PtsMeasurementValue<sbyte>? MoveLeft { get; set; } Property Value PtsMeasurementValue<sbyte>? MoveRight Switch: \\r field-argument Move text right by the specified number of points. public PtsMeasurementValue<sbyte>? MoveRight { get; set; } Property Value PtsMeasurementValue<sbyte>? MoveUp Switch: \\u field-argument Move text up by the specified number of points. public PtsMeasurementValue<sbyte>? MoveUp { get; set; } Property Value PtsMeasurementValue<sbyte>? VerticalPosition Switch: \\y field-argument Set vertical position relative to page in points (entire line is moved). Ignored if outside page margins or inside table/text box/footnote/endnote/annotation/header/footer. public PtsMeasurementValue<sbyte>? VerticalPosition { get; set; } Property Value PtsMeasurementValue<sbyte>? Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AskFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AskFieldInstruction.html",
    "title": "Class AskFieldInstruction | OpenLanguage Documentation",
    "summary": "Class AskFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed ASK field instruction. Prompts the user to enter information and assigns it to a bookmark. public class AskFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction AskFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AskFieldInstruction(FieldInstruction) Initializes a new instance of the AskFieldInstruction class. public AskFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties BookmarkName The bookmark name to assign the user's response to (field-argument-1). public string BookmarkName { get; set; } Property Value string DefaultResponse Switch: \\d field-argument Default response if none is entered. public string? DefaultResponse { get; set; } Property Value string PromptOnce Switch: \\o Display prompt once per mail merge instead of for each record. public bool PromptOnce { get; set; } Property Value bool PromptText The prompt text to display to the user (field-argument-2). public string PromptText { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AuthorFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AuthorFieldInstruction.html",
    "title": "Class AuthorFieldInstruction | OpenLanguage Documentation",
    "summary": "Class AuthorFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed AUTHOR field instruction. Retrieves and optionally sets the document author's name. public class AuthorFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction AuthorFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AuthorFieldInstruction(FieldInstruction) Initializes a new instance of the AuthorFieldInstruction class. public AuthorFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties NewAuthorName Optional field argument to set the author's name. If present, changes the document's Creator property to this value. public string? NewAuthorName { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AutoNumFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AutoNumFieldInstruction.html",
    "title": "Class AutoNumFieldInstruction | OpenLanguage Documentation",
    "summary": "Class AutoNumFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed AUTONUM field instruction. In paragraphs formatted with one of the nine built-in heading styles, paragraph numbering restarts at 1 in each successive heading level. If headings that contain AUTONUM fields are followed by body text paragraphs that also contain AUTONUM fields, the paragraph numbering of the body text is restarted at 1 after each heading. If the headings don't contain AUTONUM fields, body text paragraphs that contain AUTONUM fields are numbered in a continuous, sequential series throughout the document. Note: This field is supported for legacy reasons, It is recommended that LISTNUM be used instead. The XML generated for a complex field implementation shall not have the optional field value stored. public class AutoNumFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction AutoNumFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AutoNumFieldInstruction(FieldInstruction) Initializes a new instance of the AutoNumFieldInstruction class. public AutoNumFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties SeparatorCharacter Switch: \\s field-argument Specifies the separator character to use (default is period). public char? SeparatorCharacter { get; set; } Property Value char? Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AutoNumLglFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AutoNumLglFieldInstruction.html",
    "title": "Class AutoNumLglFieldInstruction | OpenLanguage Documentation",
    "summary": "Class AutoNumLglFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed AUTONUMLGL field instruction. For legal and technical publications, use the nine built-in heading styles to format headings in the document, and then insert an AUTONUMLGL field at the beginning of each heading paragraph. The numbers reflect the heading levels that correspond to the heading styles. If an AUTONUMLGL field is inserted in paragraphs of body text paragraphs not formatted with built-in heading styles, the number of the preceding heading is included in the paragraph number. Note: This field is supported for legacy reasons, It is recommended that LISTNUM be used instead. This field only makes sense in terms of multi-level headings. Given the following headings: Heading 1Heading 2Heading 2Heading 1 This field allows 1. Heading 11.1. Heading 21.2. Heading 22. Heading 1 At each level, the numbering sequence does two things—it increments specific to that level, and it includes the value from the previous level. The XML generated for a complex field implementation shall not have the optional field value stored. public class AutoNumLglFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction AutoNumLglFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AutoNumLglFieldInstruction(FieldInstruction) Initializes a new instance of the AutoNumLglFieldInstruction class. public AutoNumLglFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties RemoveTrailingSeparator Switch: \\e Removes the trailing separator (default period). public bool RemoveTrailingSeparator { get; set; } Property Value bool SeparatorCharacter Switch: \\s field-argument Specifies the separator character to use (default is period). public char? SeparatorCharacter { get; set; } Property Value char? Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AutoNumOutFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AutoNumOutFieldInstruction.html",
    "title": "Class AutoNumOutFieldInstruction | OpenLanguage Documentation",
    "summary": "Class AutoNumOutFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed AUTONUMOUT field instruction. Provides automatic numbering for headings using built-in heading styles. Legacy field - LISTNUM is recommended instead. public class AutoNumOutFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction AutoNumOutFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AutoNumOutFieldInstruction(FieldInstruction) Initializes a new instance of the AutoNumOutFieldInstruction class. public AutoNumOutFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AutoTextFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AutoTextFieldInstruction.html",
    "title": "Class AutoTextFieldInstruction | OpenLanguage Documentation",
    "summary": "Class AutoTextFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed AUTOTEXT field instruction. Inserts the AutoText entry whose name is specified by text in field-argument. Regarding XML generation, the field result is the value of the autotext. ##### Note This can be arbitrarily complex and involve VML public class AutoTextFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction AutoTextFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AutoTextFieldInstruction(FieldInstruction) Initializes a new instance of the AutoTextFieldInstruction class. public AutoTextFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties AutoTextEntryName The name of the AutoText entry to insert. public string AutoTextEntryName { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AutoTextListFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.AutoTextListFieldInstruction.html",
    "title": "Class AutoTextListFieldInstruction | OpenLanguage Documentation",
    "summary": "Class AutoTextListFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed AUTOTEXTLIST field instruction. Creates a shortcut menu based on AutoText entries in the active template. public class AutoTextListFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction AutoTextListFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors AutoTextListFieldInstruction(FieldInstruction) Initializes a new instance of the AutoTextListFieldInstruction class. public AutoTextListFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties DisplayText The display text to show in the document (required field argument). public string DisplayText { get; set; } Property Value string ScreenTipText Switch: \\t field-argument Text to show in the ScreenTip. public string? ScreenTipText { get; set; } Property Value string StyleName Switch: \\s field-argument Specifies the style name for filtering AutoText entries. Can be paragraph style or character style. public string? StyleName { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.BarcodeFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.BarcodeFieldInstruction.html",
    "title": "Class BarcodeFieldInstruction | OpenLanguage Documentation",
    "summary": "Class BarcodeFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed BARCODE field instruction. Produces a U.S. Postal Service barcode in POSTNET or FIM format. public class BarcodeFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction BarcodeFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BarcodeFieldInstruction(FieldInstruction) Initializes a new instance of the BarcodeFieldInstruction class. public BarcodeFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties BarcodeData The postal address or bookmark name for the barcode. For postal addresses, only 5-digit or 9-digit ZIP code is needed. public string BarcodeData { get; set; } Property Value string FacingIdentificationMark Switch: \\f field-argument Inserts a Facing Identification Mark (FIM). public FacingIdentificationMarkType? FacingIdentificationMark { get; set; } Property Value FacingIdentificationMarkType? IsBookmarkReference Switch: \\b Indicates that the field argument is a bookmark name. public bool IsBookmarkReference { get; set; } Property Value bool IsPostalAddress Switch: \\u Indicates that the field argument is a postal address. public bool IsPostalAddress { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.BibliographyFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.BibliographyFieldInstruction.html",
    "title": "Class BibliographyFieldInstruction | OpenLanguage Documentation",
    "summary": "Class BibliographyFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed BIBLIOGRAPHY field instruction. Retrieves and displays the contents of the document's Bibliography part in the bibliographic style specified. public class BibliographyFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction BibliographyFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors BibliographyFieldInstruction(FieldInstruction) Initializes a new instance of the BibliographyFieldInstruction class. public BibliographyFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties FilterLanguageId Switch: \\f field-argument Specifies the locale used to filter bibliographic data to only sources matching this LCID. public LanguageIdentifier? FilterLanguageId { get; set; } Property Value LanguageIdentifier? FormattingLanguageId Switch: \\l field-argument Specifies the locale used to format bibliographic sources that do not specify a locale. public LanguageIdentifier? FormattingLanguageId { get; set; } Property Value LanguageIdentifier? SourceTagFilter Switch: \\m field-argument Specifies that only the source with a Tag element value matching this argument shall be displayed. public string? SourceTagFilter { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.CitationFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.CitationFieldInstruction.html",
    "title": "Class CitationFieldInstruction | OpenLanguage Documentation",
    "summary": "Class CitationFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed CITATION field instruction. Displays bibliography source contents using the specified bibliographic style. public class CitationFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction CitationFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CitationFieldInstruction(FieldInstruction) Initializes a new instance of the CitationFieldInstruction class. public CitationFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties AdditionalSourceTag Switch: \\m field-argument Additional source tag to include in this citation's field result. public string? AdditionalSourceTag { get; set; } Property Value string LocaleId Switch: \\l field-argument Locale used with bibliographic style to format the citation. public LanguageIdentifier? LocaleId { get; set; } Property Value LanguageIdentifier? PageNumber Switch: \\p field-argument Page number associated with the citation (can include ranges like \"123-125\" or prefixes like \"pp. 123\"). public string? PageNumber { get; set; } Property Value string Prefix Switch: \\f field-argument Prefix to prepend to the citation. public string? Prefix { get; set; } Property Value string SourceTag The source tag identifying the bibliography source to display. public string SourceTag { get; set; } Property Value string Suffix Switch: \\s field-argument Suffix to append to the citation. public string? Suffix { get; set; } Property Value string SuppressAuthor Switch: \\n Suppress author information from the citation. public bool SuppressAuthor { get; set; } Property Value bool SuppressTitle Switch: \\t Suppress title information from the citation. public bool SuppressTitle { get; set; } Property Value bool SuppressYear Switch: \\y Suppress year information from the citation. public bool SuppressYear { get; set; } Property Value bool VolumeNumber Switch: \\v field-argument Volume number associated with the citation (can include letters like \"2A\" or prefixes like \"vol. 2\"). public string? VolumeNumber { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.CommentsFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.CommentsFieldInstruction.html",
    "title": "Class CommentsFieldInstruction | OpenLanguage Documentation",
    "summary": "Class CommentsFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed COMMENTS field instruction. Retrieves, and optionally sets, the comments relating to the current document, as recorded in the <Description> element of the Core File Properties part or, if field-argument is present, the comments specified by text in field-argument. Specifying a field-argument shall change <Description> to text. public class CommentsFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction CommentsFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CommentsFieldInstruction(FieldInstruction) Initializes a new instance of the CommentsFieldInstruction class. public CommentsFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.CompareFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.CompareFieldInstruction.html",
    "title": "Class CompareFieldInstruction | OpenLanguage Documentation",
    "summary": "Class CompareFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed COMPARE field instruction. Compares two expressions using a relational or equality operator. Returns 1 if comparison is true, 0 if false. public class CompareFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction CompareFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CompareFieldInstruction(FieldInstruction) Initializes a new instance of the CompareFieldInstruction class. public CompareFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties Expression1 The first expression to compare. public Expression? Expression1 { get; set; } Property Value Expression Expression2 The second expression to compare. public Expression? Expression2 { get; set; } Property Value Expression Operator The comparison operator to use. public ComparisonOperator? Operator { get; set; } Property Value ComparisonOperator? Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.CreateDateFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.CreateDateFieldInstruction.html",
    "title": "Class CreateDateFieldInstruction | OpenLanguage Documentation",
    "summary": "Class CreateDateFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed CREATEDATE field instruction. Retrieves the date and time at which the document was created, as recorded in the <DateCreated> element of the Core File Properties part. By default, the Gregorian calendar is used and the date-and-time-formatting-switch used is implementation-defined. public class CreateDateFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction CreateDateFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CreateDateFieldInstruction(FieldInstruction) Initializes a new instance of the CreateDateFieldInstruction class. public CreateDateFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties UseGregorianCalendar Whether to use the Gregorian calendar (default behavior when no calendar switches are specified). This is true by default and becomes false when \\h or \\s switches are used. public bool UseGregorianCalendar { get; } Property Value bool UseHijriCalendar Switch: \\h Use the Hijri/Lunar calendar instead of the default Gregorian calendar. public bool UseHijriCalendar { get; set; } Property Value bool UseSakaCalendar Switch: \\s Use the Saka Era calendar instead of the default Gregorian calendar. public bool UseSakaCalendar { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.DatabaseFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.DatabaseFieldInstruction.html",
    "title": "Class DatabaseFieldInstruction | OpenLanguage Documentation",
    "summary": "Class DatabaseFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed DATABASE field instruction. Inserts the results of a database query into a WordprocessingML table. public class DatabaseFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction DatabaseFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DatabaseFieldInstruction(FieldInstruction) Initializes a new instance of the DatabaseFieldInstruction class. public DatabaseFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties Command The complete ODBC command built from the connection string and query. This is automatically constructed when both ConnectionStringBuilder and DatabaseQueryInstruction are available. public OdbcCommand? Command { get; set; } Property Value OdbcCommand ConnectionStringBuilder Switch: \\c field-argument Specifies the database connection string. public OdbcConnectionStringBuilder? ConnectionStringBuilder { get; set; } Property Value OdbcConnectionStringBuilder DatabasePath Switch: \\d field-argument Specifies the complete path and file name of the database. Used for all database queries except SQL database queries using ODBC. public string? DatabasePath { get; set; } Property Value string DatabaseQueryInstruction Switch: \\s field-argument Specifies database query instructions (SQL, QBE, Excel ranges, etc.). Quotation marks in instructions must be preceded by backslash (). public string? DatabaseQueryInstruction { get; set; } Property Value string FirstRecord Switch: \\f field-argument Specifies the integral record number of the first data record to insert. public int? FirstRecord { get; set; } Property Value int? IncludeHeaders Switch: \\h Inserts field names from the database as column headings in the resulting table. public bool IncludeHeaders { get; set; } Property Value bool LastRecord Switch: \\t field-argument Specifies the integral record number of the last data record to insert. public int? LastRecord { get; set; } Property Value int? OptimizationFlag Switch: \\o field-argument Performance optimization - gets data at beginning of merge instead of once per record. Only use when database field doesn't rely on record-specific information. public DatabaseOptimizationFlag? OptimizationFlag { get; set; } Property Value DatabaseOptimizationFlag? TableAttributes Switch: \\b field-argument Specifies table formatting attributes using bitwise combination of DatabaseTableAttributes values. Default is AutoFit (16) if \\l switch is blank. public DatabaseTableAttributes? TableAttributes { get; set; } Property Value DatabaseTableAttributes? TableFormat Switch: \\l field-argument Specifies the format to be applied to the result of the database query. If used without \\b switch, an unformatted table is inserted. public DatabaseTableFormat? TableFormat { get; set; } Property Value DatabaseTableFormat? Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.DateFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.DateFieldInstruction.html",
    "title": "Class DateFieldInstruction | OpenLanguage Documentation",
    "summary": "Class DateFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed DATE field instruction. Retrieves the current date and time. By default, the Gregorian calendar is used, and the date-and-time-formatting-switch used is implementation-defined. public class DateFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction DateFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DateFieldInstruction(FieldInstruction) Initializes a new instance of the DateFieldInstruction class. public DateFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties UseGregorianCalendar Whether to use the Gregorian calendar (default behavior when no calendar switches are specified). This is true by default and becomes false when \\h or \\s switches are used. public bool UseGregorianCalendar { get; } Property Value bool UseHijriCalendar Switch: \\h Use the Hijri/Lunar calendar instead of the default Gregorian calendar. public bool UseHijriCalendar { get; set; } Property Value bool UseLastUsedFormat Switch: \\l If no date-and-time-formatting-switch is used, the date shall use the date format last used by the hosting application when inserting a new DATE field. public bool UseLastUsedFormat { get; set; } Property Value bool UseSakaCalendar Switch: \\s Use the Saka Era calendar instead of the default Gregorian calendar. public bool UseSakaCalendar { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.DocPropertyFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.DocPropertyFieldInstruction.html",
    "title": "Class DocPropertyFieldInstruction | OpenLanguage Documentation",
    "summary": "Class DocPropertyFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed DOCPROPERTY field instruction. Retrieves the indicated document information. For some combinations of DOCPROPERTY and docprop-category, there is an equivalent field, in which case, the description for the combination can be obtained from that field. For those combinations not having an equivalent field, the description is shown directly. When used directly, some of the equivalent fields allow the value of the designated property to be changed. However, when the corresponding DOCPROPERTY field is used, such values shall not be changed. This is indicated in the following table by \"Read-only operation.\" Docprop-category Corresponding Field Description AUTHOR AUTHOR (AUTHOR) Read-only operation. BYTES FILESIZE (FILESIZE) CATEGORY No equivalent The contents of the <Category> element of the Core File Properties part. CHARACTERS NUMCHARS (NUMCHARS) CHARACTERSWITHSPACES No equivalent Like NUMCHARS, but includes all white space characters as well. COMMENTS COMMENTS (BIBLIOGRAPHYBIBLIOGR) Read-only operation. COMPANY No equivalent The contents of the <Company> element of the Application-Defined File Properties part. CREATETIME CREATEDATE (CREATEDATE) HYPERLINKBASE No equivalent The contents of the <HyperlinkBase> element of the Application-Defined File Properties part. KEYWORDS No equivalent The contents of the <Keywords> element of the Core File Properties part. LASTPRINTED PRINTDATE (PRINTDATE) LASTSAVEDBY LASTSAVEDBY (LASTSAVEDBYLASTSAVED) LASTSAVEDTIME SAVEDATE (SAVEDATE) LINES No equivalent The contents of the <Lines> element of the Application-Defined File Properties part. MANAGER No equivalent The contents of the <Manager> element of the Application-Defined File Properties part. NAMEOFAPPLICATION No equivalent The contents of the <Application> element of the Application-Defined File Properties part. ODMADOCID PAGES NUMPAGES (NUMPAGES) PARAGRAPHS No equivalent The contents of the <Paragraphs> element of the Application-Defined File Properties part. REVISIONNUMBER REVNUM (REVNUM) SECURITY No equivalent The contents of the <DocSecurity> element of the Application-Defined File Properties part. SUBJECT SUBJECT (SUBJECT) Read-only operation. TEMPLATE TEMPLATE (TEMPLATE) TITLE TITLE (TITLE) Read-only operation. TOTALEDITINGTIME EDITTIME (EDITTIME) WORDS No equivalent The contents of the <Words> element of the Application-Defined File Properties part. public class DocPropertyFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction DocPropertyFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DocPropertyFieldInstruction(FieldInstruction) Initializes a new instance of the DocPropertyFieldInstruction class. public DocPropertyFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties PropertyCategoryArgument Optional field argument for the property (used with some categories) public string? PropertyCategoryArgument { get; set; } Property Value string PropertyName The document property name to retrieve public string? PropertyName { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.DocVariableFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.DocVariableFieldInstruction.html",
    "title": "Class DocVariableFieldInstruction | OpenLanguage Documentation",
    "summary": "Class DocVariableFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed DOCVARIABLE field instruction. Inserts the string assigned to the document variable designated by text in field-argument. Each WordprocessingML document has a collection of variables. This field is used to access and display the contents of <docVar> elements in the Document Settings part. public class DocVariableFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction DocVariableFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors DocVariableFieldInstruction(FieldInstruction) Initializes a new instance of the DocVariableFieldInstruction class. public DocVariableFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties VariableName The name of the document variable public string? VariableName { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.EditTimeFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.EditTimeFieldInstruction.html",
    "title": "Class EditTimeFieldInstruction | OpenLanguage Documentation",
    "summary": "Class EditTimeFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed EDITTIME field instruction. Retrieves the total editing time, in minutes, since the document was created, as recorded in the <TotalTime> element of the Application-Defined File Properties part. By default, the numeric-formatting-switch or general-formatting-switch used is implementation-defined. public class EditTimeFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction EditTimeFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EditTimeFieldInstruction(FieldInstruction) Initializes a new instance of the EditTimeFieldInstruction class. public EditTimeFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.EqArrayAlignment.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.EqArrayAlignment.html",
    "title": "Enum EqArrayAlignment | OpenLanguage Documentation",
    "summary": "Enum EqArrayAlignment Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents alignment options for array columns. public enum EqArrayAlignment Fields Center = 0 \\ac - Centered alignment in each array column. Left = 1 \\al - Left alignment in each array column. Right = 2 \\ar - Right alignment in each array column."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.EqFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.EqFieldInstruction.html",
    "title": "Class EqFieldInstruction | OpenLanguage Documentation",
    "summary": "Class EqFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed EQ field instruction. Computes the specified mathematical equation. public class EqFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction EqFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EqFieldInstruction(FieldInstruction) Initializes a new instance of the EqFieldInstruction class. public EqFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties ArgumentList The equation argument list (comma or semicolon separated). public List<string> ArgumentList { get; set; } Property Value List<string> ArrayAlignment Switch: \\ac, \\al, \\ar Alignment in each array column. public EqArrayAlignment? ArrayAlignment { get; set; } Property Value EqArrayAlignment? BackwardDisplacement Switch: \\ba field-argument Backward displacement in points. public int? BackwardDisplacement { get; set; } Property Value int? BorderBottom Switch: \\bo Draw horizontal border below argument. public bool BorderBottom { get; set; } Property Value bool BorderLeft Switch: \\le Draw vertical border to the left of argument. public bool BorderLeft { get; set; } Property Value bool BorderRight Switch: \\ri Draw vertical border to the right of argument. public bool BorderRight { get; set; } Property Value bool BorderTop Switch: \\to Draw horizontal border above argument. public bool BorderTop { get; set; } Property Value bool BothBracketCharacter Switch: \\bc \\ char Both left and right bracket character. public char? BothBracketCharacter { get; set; } Property Value char? ColumnCount Switch: \\co field-argument Number of columns in the array (default is 1). public int? ColumnCount { get; set; } Property Value int? FixedHeightCharacter Switch: \\fc \\ char Fixed-height character for the symbol. public char? FixedHeightCharacter { get; set; } Property Value char? ForwardDisplacement Switch: \\fo field-argument Forward displacement in points. public int? ForwardDisplacement { get; set; } Property Value int? HorizontalSpacing Switch: \\hs field-argument Horizontal spacing between columns in points. public int? HorizontalSpacing { get; set; } Property Value int? InlineFormat Switch: \\in Inline format with limits to the right instead of above/below. public bool InlineFormat { get; set; } Property Value bool IntegralSymbol Switch: \\pr, \\su, or default Type of integral symbol to use. public EqIntegralSymbol? IntegralSymbol { get; set; } Property Value EqIntegralSymbol? LeftBracketCharacter Switch: \\lc \\ char Left bracket character. public char? LeftBracketCharacter { get; set; } Property Value char? MoveDown Switch: \\do field-argument Move argument below adjacent text by points (default 2). public int? MoveDown { get; set; } Property Value int? MoveUp Switch: \\up field-argument Move argument above adjacent text by points. public int? MoveUp { get; set; } Property Value int? OverlayAlignment Switch: \\ac, \\al, \\ar Alignment for overlay character boxes. public EqOverlayAlignment? OverlayAlignment { get; set; } Property Value EqOverlayAlignment? PrimarySwitch The primary switch that determines the equation type. public EqPrimarySwitch PrimarySwitch { get; set; } Property Value EqPrimarySwitch RightBracketCharacter Switch: \\rc \\ char Right bracket character. public char? RightBracketCharacter { get; set; } Property Value char? SpaceAboveLine Switch: \\ai field-argument Space above line in points (default 2). public int? SpaceAboveLine { get; set; } Property Value int? SpaceBelowLine Switch: \\di field-argument Space below line in points. public int? SpaceBelowLine { get; set; } Property Value int? UnderlineSpace Switch: \\li Underlines the space up to the next character. public bool UnderlineSpace { get; set; } Property Value bool VariableHeightCharacter Switch: \\vc \\ char Variable-height character for the symbol. public char? VariableHeightCharacter { get; set; } Property Value char? VerticalSpacing Switch: \\vs field-argument Vertical spacing between lines in points. public int? VerticalSpacing { get; set; } Property Value int? Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.EqIntegralSymbol.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.EqIntegralSymbol.html",
    "title": "Enum EqIntegralSymbol | OpenLanguage Documentation",
    "summary": "Enum EqIntegralSymbol Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents integral symbol types. public enum EqIntegralSymbol Fields Default = 0 Default integral symbol. Product = 1 \\pr - Product symbol (Capital Pi). Summation = 2 \\su - Summation symbol (Capital Sigma)."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.EqOverlayAlignment.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.EqOverlayAlignment.html",
    "title": "Enum EqOverlayAlignment | OpenLanguage Documentation",
    "summary": "Enum EqOverlayAlignment Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents overlay alignment options. public enum EqOverlayAlignment Fields Center = 0 \\ac - Character box center alignment (default). Left = 1 \\al - Character box left alignment. Right = 2 \\ar - Character box right alignment."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.EqPrimarySwitch.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.EqPrimarySwitch.html",
    "title": "Enum EqPrimarySwitch | OpenLanguage Documentation",
    "summary": "Enum EqPrimarySwitch Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents the primary switch types for EQ field instructions. public enum EqPrimarySwitch Fields Array = 0 \\a - Produces an array using the argument values. Box = 9 \\x - Creates border segments around argument. Bracket = 1 \\b - Brackets the single element in appropriate size. Displacement = 2 \\d - Controls displacement of the next character. Fraction = 3 \\f - Creates a fraction with numerator and denominator. Integral = 4 \\i - Creates an integral using specified symbol and elements. List = 5 \\l - Creates a list from arbitrary number of arguments. Overlay = 6 \\o - Displays arguments on top of each other. Radical = 7 \\r - Creates a radical (square root or nth root). Script = 8 \\s - Creates subscript or superscript."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.FileNameFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.FileNameFieldInstruction.html",
    "title": "Class FileNameFieldInstruction | OpenLanguage Documentation",
    "summary": "Class FileNameFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed FILENAME field instruction. Retrieves the name of the current document as stored on disk. public class FileNameFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction FileNameFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FileNameFieldInstruction(FieldInstruction) Initializes a new instance of the FileNameFieldInstruction class. public FileNameFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties IncludeFullPath Switch: \\p Include the full file path name. public bool IncludeFullPath { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.FileSizeFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.FileSizeFieldInstruction.html",
    "title": "Class FileSizeFieldInstruction | OpenLanguage Documentation",
    "summary": "Class FileSizeFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed FILESIZE field instruction. Retrieves the size of the current document in bytes. ##### Note This information is not stored inside the document's XML. It needs to be obtained from the file system. public class FileSizeFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction FileSizeFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FileSizeFieldInstruction(FieldInstruction) Initializes a new instance of the FileSizeFieldInstruction class. public FileSizeFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties InKilobytes Switch: \\k Display in kilobytes public bool InKilobytes { get; set; } Property Value bool InMegabytes Switch: \\m Display in megabytes public bool InMegabytes { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.FillInFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.FillInFieldInstruction.html",
    "title": "Class FillInFieldInstruction | OpenLanguage Documentation",
    "summary": "Class FillInFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed FILLIN field instruction. Prompts the user to enter text. text in field-argument contains the prompt. The prompt is displayed each time the field is updated. When a new document is created based on a template containing FILLIN fields, those fields are updated automatically. public class FillInFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction FillInFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FillInFieldInstruction(FieldInstruction) Initializes a new instance of the FillInFieldInstruction class. public FillInFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties DefaultText Switch: \\d field-argument Default text public string? DefaultText { get; set; } Property Value string PromptOnce Switch: \\o Prompt only once per mail merge public bool PromptOnce { get; set; } Property Value bool PromptText The prompt text to display to the user public string? PromptText { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.FormCheckBoxFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.FormCheckBoxFieldInstruction.html",
    "title": "Class FormCheckBoxFieldInstruction | OpenLanguage Documentation",
    "summary": "Class FormCheckBoxFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed FORMCHECKBOX field instruction. Inserts a check box style form field which, when the editing of form fields is enabled using the <documentProtection> element, can be checked and unchecked. An instance of this field shall be accompanied by a use of the <ffData> element which contains the form field's properties. public class FormCheckBoxFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction FormCheckBoxFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormCheckBoxFieldInstruction(FieldInstruction) Initializes a new instance of the FormCheckBoxFieldInstruction class. public FormCheckBoxFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.FormDropDownFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.FormDropDownFieldInstruction.html",
    "title": "Class FormDropDownFieldInstruction | OpenLanguage Documentation",
    "summary": "Class FormDropDownFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed FORMDROPDOWN field instruction. Inserts a drop-down list style form field which, when the editing of form fields is enabled using the <documentProtection> element, can be used to select an entry in the list. An instance of this field shall be accompanied by a use of the <ffData> element which contains the form field's properties. public class FormDropDownFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction FormDropDownFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormDropDownFieldInstruction(FieldInstruction) Initializes a new instance of the FormDropDownFieldInstruction class. public FormDropDownFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.FormTextFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.FormTextFieldInstruction.html",
    "title": "Class FormTextFieldInstruction | OpenLanguage Documentation",
    "summary": "Class FormTextFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed FORMTEXT field instruction. Inserts a text box style form field which, when the editing of form fields is enabled using the <documentProtection> element, can be typed into. An instance of this field shall be accompanied by a use of the <ffData> element which contains the form field's properties. public class FormTextFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction FormTextFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors FormTextFieldInstruction(FieldInstruction) Initializes a new instance of the FormTextFieldInstruction class. public FormTextFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.GoToButtonFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.GoToButtonFieldInstruction.html",
    "title": "Class GoToButtonFieldInstruction | OpenLanguage Documentation",
    "summary": "Class GoToButtonFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed GOTOBUTTON field instruction. Inserts a jump command that moves the insertion point to a specified location when activated. public class GoToButtonFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction GoToButtonFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GoToButtonFieldInstruction(FieldInstruction) Initializes a new instance of the GoToButtonFieldInstruction class. public GoToButtonFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties ButtonDisplayContent The text or graphic \"button\" that appears in the document (field-argument-2, required). public Expression? ButtonDisplayContent { get; set; } Property Value Expression TargetLocation The location to jump to (field-argument-1, required). public Expression? TargetLocation { get; set; } Property Value Expression Methods ParseTargetLocation(string) Parses the target location to determine its type and value. public (GoToButtonTargetType Type, int? Number) ParseTargetLocation(string targetLocation) Parameters targetLocation string The target location text to parse. Returns (GoToButtonTargetType Type, int? Number) A tuple containing the target type and numeric value (if applicable). ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.GoToButtonTargetType.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.GoToButtonTargetType.html",
    "title": "Enum GoToButtonTargetType | OpenLanguage Documentation",
    "summary": "Enum GoToButtonTargetType Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents the type of location target for a GOTOBUTTON field. public enum GoToButtonTargetType Fields Annotation = 1 An annotation (A n). Bookmark = 0 A bookmark name. Footnote = 2 A footnote (F n). Line = 3 A line (L n). Page = 4 A page (P n). Section = 5 A section (S n)."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.GreetingLineFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.GreetingLineFieldInstruction.html",
    "title": "Class GreetingLineFieldInstruction | OpenLanguage Documentation",
    "summary": "Class GreetingLineFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed GREETINGLINE field instruction. Inserts a mail merge greeting line. public class GreetingLineFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction GreetingLineFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors GreetingLineFieldInstruction(FieldInstruction) Initializes a new instance of the GreetingLineFieldInstruction class. public GreetingLineFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties BlankNameText Switch: \\c field-argument Specifies the text to include in the merge field if the name field in the data source is blank. public string? BlankNameText { get; set; } Property Value string Format Switch: \\f field-argument Specifies the format of the name included in the field. public NameFormat? Format { get; set; } Property Value NameFormat? LanguageId Switch: \\l field-argument Specifies the language ID used to format the name. Defaults to the language ID of the first character of the document. public LanguageIdentifier? LanguageId { get; set; } Property Value LanguageIdentifier? Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.HyperlinkFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.HyperlinkFieldInstruction.html",
    "title": "Class HyperlinkFieldInstruction | OpenLanguage Documentation",
    "summary": "Class HyperlinkFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed HYPERLINK field instruction. When selected, causes control to jump to the location specified by text in field-argument. That location can be a bookmark or a URL. public class HyperlinkFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction HyperlinkFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors HyperlinkFieldInstruction(FieldInstruction) Initializes a new instance of the HyperlinkFieldInstruction class. public HyperlinkFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties ArbLocation Undocumented in OOXML, documented for Word 2003 Used internally by Word for internally labelled, non-exported location names Left here for the sake of completeness, and also to not forget that this exists, where it's undocumented Switch: \\s arbLocation public string? ArbLocation { get; set; } Property Value string InstrFrameTarget Switch: \\t field-argument Target frame public FrameTarget? InstrFrameTarget { get; set; } Property Value FrameTarget? InternalLocation Switch: \\L text in this switch's field-argument specifies a location in the file, such as a bookmark, where this hyperlink will jump. Target frame public string? InternalLocation { get; set; } Property Value string NewWindow Switch: \\n Open in new window public bool NewWindow { get; set; } Property Value bool ScreenTipText Switch: \\o text text in this switch's field-argument specifies the ScreenTip text for the hyperlink. ScreenTip: A short description that appears when the user holds the mouse pointer over an object, such as a button or hyperlink. public string? ScreenTipText { get; set; } Property Value string ServerSideImageMapAppendCoordinates Switch: \\m coordinates Appends coordinates to a hyperlink for a server-side image map server-side image map: A graphic containing sensitive regions, or \"hot spots,\" that a user can click to follow a hyperlink. A server-side image map requires a script on a Web server that identifies the sensitive regions and their corresponding hyperlinks public List<float>? ServerSideImageMapAppendCoordinates { get; set; } Property Value List<float> Uri The URL or path for the hyperlink public Uri? Uri { get; set; } Property Value Uri Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.IfFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.IfFieldInstruction.html",
    "title": "Class IfFieldInstruction | OpenLanguage Documentation",
    "summary": "Class IfFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed IF field instruction. Compares the values designated by Expression-1 and Expression-2 using the operator designated by Operator. public class IfFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction IfFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IfFieldInstruction(FieldInstruction) Initializes a new instance of the IfFieldInstruction class. public IfFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties FalseExpression The expression to return if the comparison is false (field-argument-2, required). public Expression FalseExpression { get; set; } Property Value Expression FirstExpression The first expression in the comparison (Expression-1, required). public Expression FirstExpression { get; set; } Property Value Expression Operator The comparison operator (required). public ComparisonOperator Operator { get; set; } Property Value ComparisonOperator SecondExpression The second expression in the comparison (Expression-2, required). public Expression SecondExpression { get; set; } Property Value Expression TrueExpression The expression to return if the comparison is true (field-argument-1, required). public Expression TrueExpression { get; set; } Property Value Expression Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.IncludePictureFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.IncludePictureFieldInstruction.html",
    "title": "Class IncludePictureFieldInstruction | OpenLanguage Documentation",
    "summary": "Class IncludePictureFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed INCLUDEPICTURE field instruction. Retrieves the picture contained in the document named by field-argument. If field-argument contains white space, it shall be enclosed in double quotes. If field-argument contains any backslash characters, each one shall be preceded directly by another backslash character. public class IncludePictureFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction IncludePictureFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IncludePictureFieldInstruction(FieldInstruction) Initializes a new instance of the IncludePictureFieldInstruction class. public IncludePictureFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties GraphicsFilterName Switch: \\c field-argument Identifies the graphics filter to be used. public string? GraphicsFilterName { get; set; } Property Value string PictureFilePath The path to the picture file (field-argument, required). public string PictureFilePath { get; set; } Property Value string ReduceFileSize Switch: \\d Reduces the file size by not storing graphics data with the document. public bool ReduceFileSize { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.IncludeTextFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.IncludeTextFieldInstruction.html",
    "title": "Class IncludeTextFieldInstruction | OpenLanguage Documentation",
    "summary": "Class IncludeTextFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed INCLUDETEXT field instruction. Inserts all or part of the text and graphics contained in the document named by field-argument-1. If the document is a WordprocessingML document, the portion marked by the optional bookmark field-argument-2 is inserted. If no such bookmark is specified here, the whole document is inserted. If the document is an XML file, the fragment referred to by an XPath expression in the \\x switch is inserted. If no such switch is specified, the whole XML file is inserted. If field-argument-1 contains white space, it shall be enclosed in double quotes. If field-argument-1 contains any backslash characters, each one shall be preceded directly by another backslash character. public class IncludeTextFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction IncludeTextFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IncludeTextFieldInstruction(FieldInstruction) Initializes a new instance of the IncludeTextFieldInstruction class. public IncludeTextFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties BookmarkName The optional bookmark name for WordprocessingML documents (field-argument-2, optional). public string? BookmarkName { get; set; } Property Value string DocumentFilterName Switch: \\c field-argument Specifies that the file shall be processed by a document filter whose name matches the field-argument value. public string? DocumentFilterName { get; set; } Property Value string DocumentName The document name or path to include (field-argument-1, required). public string DocumentName { get; set; } Property Value string NamespaceMapping Switch: \\n field-argument The namespace mapping for XPath queries. Required if the \\x switch refers to an element by name in an XML file that declares a namespace. Format: xmlns:prefix=\"URI\" public NamespaceDeclaration? NamespaceMapping { get; set; } Property Value NamespaceDeclaration PreventUpdateUnlessFieldsUpdated Switch: ! Prevents this field from being updated unless all fields in the inserted text are first updated in their original document. public bool PreventUpdateUnlessFieldsUpdated { get; set; } Property Value bool XPathExpression Switch: \\x field-argument Specifies the XPath for returning a fragment of data in an XML file. public XPathExpression? XPathExpression { get; set; } Property Value XPathExpression XsltPath Switch: \\t field-argument Specifies an XSLT for formatting XML data. public string? XsltPath { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.IndexFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.IndexFieldInstruction.html",
    "title": "Class IndexFieldInstruction | OpenLanguage Documentation",
    "summary": "Class IndexFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed INDEX field instruction. Builds an index using the index entries specified by XE fields, and inserts that index at this place in the document. Each index entry and subentry is a separate paragraph unless the \\r switch is used. public class IndexFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction IndexFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IndexFieldInstruction(FieldInstruction) Initializes a new instance of the IndexFieldInstruction class. public IndexFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties BookmarkName Switch: \\b field-argument Builds an index for the portion of the document marked by the bookmark indicated by this field argument. public string? BookmarkName { get; set; } Property Value string CrossReferenceSeparator Switch: \\k field-argument Specifies a sequence of characters that is used to separate an index entry and its cross reference. Used for cross references produced by XE entries having a \\t switch. By default, a period (.) and space sequence is used. public string? CrossReferenceSeparator { get; set; } Property Value string EnableYomiText Switch: \\y Enables the use of yomi text for index entries. Yomi text is used for phonetic sorting in East Asian languages. public bool EnableYomiText { get; set; } Property Value bool EntryPageSeparator Switch: \\e field-argument Specifies a sequence of characters that is used to separate an index entry and its first page number. By default, a comma (,) and space sequence is used. If text contains a horizontal tab character, the page number list is right justified in the column. public string? EntryPageSeparator { get; set; } Property Value string EntryTypeFilter Switch: \\f field-argument Builds an index using only those entries having the entry type (XE) specified by this field argument. Without this switch, all entries are included. public string? EntryTypeFilter { get; set; } Property Value string IndexHeadingText Switch: \\h field-argument Builds an index such that this field argument occurs as a heading—formatted with the Index Heading style—at the start of each set of entries for any given letter. If the first letter in text is A or a, that letter is replaced with the corresponding letter for each letter set. To replace the default heading with a blank line, use a space as text. public string? IndexHeadingText { get; set; } Property Value string LanguageId Switch: \\z field-argument Uses the language ID specified by this field argument to generate the index. This affects sorting and formatting of the index. public LanguageIdentifier? LanguageId { get; set; } Property Value LanguageIdentifier? LetterRange Switch: \\p field-argument Builds an index using only those entries whose first letter falls within the range specified by this field argument. Format is \"startLetter-endLetter\". If startLetter is \"!\", entries whose first character is not a letter are included, along with letters starting from A. The letters in the range can be either upper- or lowercase. public string? LetterRange { get; set; } Property Value string NumberOfColumns Switch: \\c field-argument Builds an index having the number of columns per page specified by this field argument. That number can be 1–4. Without this switch, the number of columns is 1. public int? NumberOfColumns { get; set; } Property Value int? PageNumberSeparator Switch: \\l field-argument Specifies a sequence of characters that is used to separate two page numbers in a page number list. By default, a comma (,) and space sequence is used. public string? PageNumberSeparator { get; set; } Property Value string PageRangeSeparator Switch: \\g field-argument Specifies a sequence of characters that is used to separate the start and end of a page range. By default, an en dash is used. public string? PageRangeSeparator { get; set; } Property Value string SequenceName Switch: \\s field-argument Includes with each page number the sequence number of the sequence name specified by this field argument. The sequence number is included along with the page number, separated by a hyphen (-) by default, or by the character specified in \\d switch. public string? SequenceName { get; set; } Property Value string SequencePageSeparator Switch: \\d field-argument Specifies a sequence of characters that is used to separate sequence numbers and page numbers when the \\s switch is used. By default, a hyphen (-) is used. public string? SequencePageSeparator { get; set; } Property Value string UseRunInFormat Switch: \\r Runs subentries into the same line as the main entry. Colons (:) separate main entries from subentries; semicolons (;) separate subentries. public bool UseRunInFormat { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.InfoFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.InfoFieldInstruction.html",
    "title": "Class InfoFieldInstruction | OpenLanguage Documentation",
    "summary": "Class InfoFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed INFO field instruction. A field of this kind is treated as if INFO was omitted and info-category was a field-type name. public class InfoFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction InfoFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors InfoFieldInstruction(FieldInstruction) Initializes a new instance of the InfoFieldInstruction class. public InfoFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties FieldArgument Optional field argument for the info category. public string? FieldArgument { get; set; } Property Value string InformationCategory The information category to retrieve (required). public InfoType InformationCategory { get; set; } Property Value InfoType Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.InfoType.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.InfoType.html",
    "title": "Enum InfoType | OpenLanguage Documentation",
    "summary": "Enum InfoType Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents the information categories available for INFO field instructions. public enum InfoType Fields Author = 0 AUTHOR - Document author information. Comments = 1 COMMENTS - Document comments. CreateDate = 2 CREATEDATE - Document creation date. EditTime = 3 EDITTIME - Total editing time. FileName = 4 FILENAME - Document filename. FileSize = 5 FILESIZE - Document file size. Keywords = 6 KEYWORDS - Document keywords. LastSavedBy = 7 LASTSAVEDBY - Last saved by information. NumChars = 8 NUMCHARS - Number of characters in document. NumPages = 9 NUMPAGES - Number of pages in document. NumWords = 10 NUMWORDS - Number of words in document. PrintDate = 11 PRINTDATE - Document print date. RevNum = 12 REVNUM - Document revision number. SaveDate = 13 SAVEDATE - Document save date. Subject = 14 SUBJECT - Document subject. Template = 15 TEMPLATE - Template name. Title = 16 TITLE - Document title."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.KeywordsFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.KeywordsFieldInstruction.html",
    "title": "Class KeywordsFieldInstruction | OpenLanguage Documentation",
    "summary": "Class KeywordsFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed KEYWORDS field instruction. Retrieves, and optionally sets, the document's keywords, as recorded in the <Keywords> element of the Core File Properties part or, if field-argument is present, the subject specified by text in field-argument. Specifying a field-argument shall change <Keywords> to text. The <Keywords> element contains a string of text whose format and semantics is unspecified by this Office Open XML Standard. public class KeywordsFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction KeywordsFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors KeywordsFieldInstruction(FieldInstruction) Initializes a new instance of the KeywordsFieldInstruction class. public KeywordsFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.LastSavedByFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.LastSavedByFieldInstruction.html",
    "title": "Class LastSavedByFieldInstruction | OpenLanguage Documentation",
    "summary": "Class LastSavedByFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed LASTSAVEDBY field instruction. Retrieves the name of the user who last modified and saved the current document, as recorded in the <LastModifiedBy> element of the Core File Properties part. public class LastSavedByFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction LastSavedByFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LastSavedByFieldInstruction(FieldInstruction) Initializes a new instance of the LastSavedByFieldInstruction class. public LastSavedByFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.LinkFieldInstruction.LinkFormattingMode.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.LinkFieldInstruction.LinkFormattingMode.html",
    "title": "Enum LinkFieldInstruction.LinkFormattingMode | OpenLanguage Documentation",
    "summary": "Enum LinkFieldInstruction.LinkFormattingMode Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Enum for the formatting mode of a LINK field. public enum LinkFieldInstruction.LinkFormattingMode Fields MaintainSourceFormatting = 0 MaintainSourceFormattingSpreadsheet = 4 MatchDestinationFormatting = 2 MatchDestinationFormattingSpreadsheet = 5 NotSupportedOne = 1 NotSupportedThree = 3"
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.LinkFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.LinkFieldInstruction.html",
    "title": "Class LinkFieldInstruction | OpenLanguage Documentation",
    "summary": "Class LinkFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed LINK field instruction. For information copied from another application, this field links that information to its original source file using OLE. public class LinkFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction LinkFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors LinkFieldInstruction(FieldInstruction) Initializes a new instance of the LinkFieldInstruction class. public LinkFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties ApplicationType The application type of the link information (field-argument-1). For example: \"Excel.Sheet.8\" public string ApplicationType { get; set; } Property Value string AutomaticallyUpdate Switch: \\a Causes this field to be updated automatically. public bool AutomaticallyUpdate { get; set; } Property Value bool DontStoreGraphicData Switch: \\d Don't store the graphic data with the document, thus reducing the file size. public bool DontStoreGraphicData { get; set; } Property Value bool FormattingMode Switch: \\f field-argument Causes the linked object to update its formatting in a particular way. public LinkFieldInstruction.LinkFormattingMode? FormattingMode { get; set; } Property Value LinkFieldInstruction.LinkFormattingMode? InsertAsBitmap Switch: \\b Inserts the linked object as a bitmap. public bool InsertAsBitmap { get; set; } Property Value bool InsertAsHtml Switch: \\h Inserts the linked object as HTML format text. public bool InsertAsHtml { get; set; } Property Value bool InsertAsPicture Switch: \\p Inserts the linked object as a picture. public bool InsertAsPicture { get; set; } Property Value bool InsertAsRtf Switch: \\r Inserts the linked object in rich-text format (RTF). public bool InsertAsRtf { get; set; } Property Value bool InsertAsTextOnly Switch: \\t Inserts the linked object in text-only format. public bool InsertAsTextOnly { get; set; } Property Value bool InsertAsUnicodeText Switch: \\u Inserts the linked object as Unicode text. public bool InsertAsUnicodeText { get; set; } Property Value bool SourceFileLocation The name and location of the source file (field-argument-2). public string SourceFileLocation { get; set; } Property Value string SourceFilePortion The portion of the source file being linked (field-argument-3, optional). For example: cell reference, named range, bookmark. public string? SourceFilePortion { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.ListNumFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.ListNumFieldInstruction.html",
    "title": "Class ListNumFieldInstruction | OpenLanguage Documentation",
    "summary": "Class ListNumFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed LISTNUM field instruction. Computes the next integral number from the current or a specific series, or a specific number from the next or specific series. This field can be used anywhere in a paragraph, not just at its start. A LISTNUM field can be incorporated into numbering from a simple or outline-numbered list. text in field-argument is used to associates a LISTNUM field with a specific list. To emulate the behavior of the AUTONUM, AUTONUMLGL, and AUTONUMOUT fields, use the list names NumberDefault, LegalDefault, and OutlineDefault names, respectively. By default, the NumberFormat list is used. The XML generated for a complex field implementation shall not have the optional field value stored. There are nine levels of list, and, assuming \\s 1 for each, the result style used for each is as follows: 1 1) 4 (1) 7 1. 2 A) 5 (a) 8 A. 3 Iii) 6 (iii) 9 Iii. public class ListNumFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction ListNumFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ListNumFieldInstruction(FieldInstruction) Initializes a new instance of the ListNumFieldInstruction class. public ListNumFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties Level Switch: \\l field-argument List level public string? Level { get; set; } Property Value string ListName The name of the list public string? ListName { get; set; } Property Value string StartingNumber Switch: \\s field-argument Starting number public string? StartingNumber { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.MacroButtonFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.MacroButtonFieldInstruction.html",
    "title": "Class MacroButtonFieldInstruction | OpenLanguage Documentation",
    "summary": "Class MacroButtonFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed MACROBUTTON field instruction. Allows the macro or command designated by text in field-argument-1 to be run. text in field-argument-2 designates the text or graphic to appear as the \"button\" that is selected to run the macro or command. public class MacroButtonFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction MacroButtonFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MacroButtonFieldInstruction(FieldInstruction) Initializes a new instance of the MacroButtonFieldInstruction class. public MacroButtonFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties ButtonText The text or graphic to appear as the button (field-argument-2). This is also the field value that gets displayed. public string ButtonText { get; set; } Property Value string MacroName The name of the macro or command to run (field-argument-1). public string MacroName { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.MergeFieldFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.MergeFieldFieldInstruction.html",
    "title": "Class MergeFieldFieldInstruction | OpenLanguage Documentation",
    "summary": "Class MergeFieldFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed MERGEFIELD field instruction. Retrieves the name of a data field designated by text in field-argument within the merge characters in a mail merge main document. When the main document is merged with the selected data source, information from the specified data field is inserted in place of the merge field. The name designated by text shall match exactly the field name in the header record. Syntax: MERGEFIELD field-argument [ switch ] Field Value: The name of a data field designated by text in field-argument. Switches: \\b field-argument: The text in this switch's field-argument specifies the text to be inserted before the MERGEFIELD field if the field is not blank \\f field-argument: The text in this switch's field-argument specifies the text to be inserted after the MERGEFIELD field if the field is not blank \\m: Specifies that the MERGEFIELD field is a mapped field \\v: Enables character conversion for vertical formatting public class MergeFieldFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction MergeFieldFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MergeFieldFieldInstruction(FieldInstruction) Initializes a new instance of the MergeFieldFieldInstruction class. public MergeFieldFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties FieldName The name of the merge field public string? FieldName { get; set; } Property Value string IsMapped Switch: \\m Specifies that the MERGEFIELD field is a mapped field. public bool IsMapped { get; set; } Property Value bool TextAfter Switch: \\f field-argument The text in this switch's field-argument specifies the text to be inserted after the MERGEFIELD field if the field is not blank. public string? TextAfter { get; set; } Property Value string TextBefore Switch: \\b field-argument The text in this switch's field-argument specifies the text to be inserted before the MERGEFIELD field if the field is not blank. public string? TextBefore { get; set; } Property Value string VerticalFormatting Switch: \\v Enables character conversion for vertical formatting. public bool VerticalFormatting { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.MergeRecFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.MergeRecFieldInstruction.html",
    "title": "Class MergeRecFieldInstruction | OpenLanguage Documentation",
    "summary": "Class MergeRecFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed MERGEREC field instruction. Results in «MERGEREC». Use this in a mail merge to print the number of the corresponding merged data record in each resulting merged document. The number reflects the sequential order of the data records that were selected and possibly sorted for merging with the active main document. It does not indicate the actual order of the records as they occur in the physical data source. ##### Note A personnel database might contain thousands of records. However, to send a form letter to employees who've reached their five-year anniversary with your company, you'd select as your data source only the records of those five-year employees, a much smaller set of records. To print a physical record number, you must include a record number field in the data source and insert the corresponding merge field in the main document. public class MergeRecFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction MergeRecFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MergeRecFieldInstruction(FieldInstruction) Initializes a new instance of the MergeRecFieldInstruction class. public MergeRecFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.MergeSeqFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.MergeSeqFieldInstruction.html",
    "title": "Class MergeSeqFieldInstruction | OpenLanguage Documentation",
    "summary": "Class MergeSeqFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed MERGESEQ field instruction. Counts the number of data records that were successfully merged with the main document. Merged records are numbered starting from 1 each time documents are merged. ##### Note The number might be different from the value inserted by the MERGEREC field. public class MergeSeqFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction MergeSeqFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MergeSeqFieldInstruction(FieldInstruction) Initializes a new instance of the MergeSeqFieldInstruction class. public MergeSeqFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.NextFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.NextFieldInstruction.html",
    "title": "Class NextFieldInstruction | OpenLanguage Documentation",
    "summary": "Class NextFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed NEXT field instruction. Merges the next data record into the current resulting merged document, rather than starting a new merged document. ##### Note This field is used when setting up a mailing label and envelope main document during a mail merge. public class NextFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction NextFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NextFieldInstruction(FieldInstruction) Initializes a new instance of the NextFieldInstruction class. public NextFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.NextIfFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.NextIfFieldInstruction.html",
    "title": "Class NextIfFieldInstruction | OpenLanguage Documentation",
    "summary": "Class NextIfFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed NEXTIF field instruction. Compares the values designated by Expression-1 and Expression-2 using the operator designated by Operator. If the comparison is true, the next data record is merged into the current merge document. (Merge fields that follow the NEXTIF in the main document are replaced by values from the next data record rather than the current data record.) If the comparison is false, the next data record is merged into a new merge document. Operator can be any one of the six relational and equality operators. Fields shall NOT be used in a footnote, an endnote, annotation, a header, a footer, or a data source. A NEXTIF field shall NOT be nested within any field. public class NextIfFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction NextIfFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NextIfFieldInstruction(FieldInstruction) Initializes a new instance of the NextIfFieldInstruction class. public NextIfFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties LeftExpression The first expression to compare. public Expression? LeftExpression { get; set; } Property Value Expression Operator The comparison operator. public ComparisonOperator Operator { get; set; } Property Value ComparisonOperator RightExpression The second expression to compare. public Expression? RightExpression { get; set; } Property Value Expression Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.NoteRefFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.NoteRefFieldInstruction.html",
    "title": "Class NoteRefFieldInstruction | OpenLanguage Documentation",
    "summary": "Class NoteRefFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed NOTEREF field instruction. Inserts the mark of the footnote or endnote that is marked by the bookmark specified by text in field-argument. public class NoteRefFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction NoteRefFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NoteRefFieldInstruction(FieldInstruction) Initializes a new instance of the NoteRefFieldInstruction class. public NoteRefFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties BookmarkName The bookmark name for the note reference. public string? BookmarkName { get; set; } Property Value string FootnoteFormat Switch: \\f For a footnote, inserts the reference mark with the same character formatting as the Footnote Reference style. For an endnote, inserts the reference mark with the same character formatting as the Endnote Reference style. public bool FootnoteFormat { get; set; } Property Value bool Hyperlink Switch: \\h Inserts a hyperlink to the bookmarked endnote or footnote. public bool Hyperlink { get; set; } Property Value bool RelativePosition Switch: \\p Inserts the relative position of the footnote or endnote. If the NOTEREF field occurs before the bookmark, the result is \"below\". If the NOTEREF field occurs after the bookmark, the result is \"above\". public bool RelativePosition { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.NumCharsFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.NumCharsFieldInstruction.html",
    "title": "Class NumCharsFieldInstruction | OpenLanguage Documentation",
    "summary": "Class NumCharsFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed NUMCHARS field instruction. Retrieves the number of characters in the current document, as recorded in the <Characters> element of the Application-Defined File Properties part. public class NumCharsFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction NumCharsFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NumCharsFieldInstruction(FieldInstruction) Initializes a new instance of the NumCharsFieldInstruction class. public NumCharsFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.NumPagesFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.NumPagesFieldInstruction.html",
    "title": "Class NumPagesFieldInstruction | OpenLanguage Documentation",
    "summary": "Class NumPagesFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed NUMPAGES field instruction. Retrieves the number of pages in the current document, as recorded in the <Pages> element of the Application-Defined File Properties part. public class NumPagesFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction NumPagesFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NumPagesFieldInstruction(FieldInstruction) Initializes a new instance of the NumPagesFieldInstruction class. public NumPagesFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.NumWordsFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.NumWordsFieldInstruction.html",
    "title": "Class NumWordsFieldInstruction | OpenLanguage Documentation",
    "summary": "Class NumWordsFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed NUMWORDS field instruction. Retrieves the number of words in the current document, as recorded in the <Words> element of the Application-Defined File Properties part. public class NumWordsFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction NumWordsFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors NumWordsFieldInstruction(FieldInstruction) Initializes a new instance of the NumWordsFieldInstruction class. public NumWordsFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.PageFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.PageFieldInstruction.html",
    "title": "Class PageFieldInstruction | OpenLanguage Documentation",
    "summary": "Class PageFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed PAGE field instruction. Retrieves the number of the current page. public class PageFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction PageFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PageFieldInstruction(FieldInstruction) Initializes a new instance of the PageFieldInstruction class. public PageFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.PageRefFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.PageRefFieldInstruction.html",
    "title": "Class PageRefFieldInstruction | OpenLanguage Documentation",
    "summary": "Class PageRefFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed PAGEREF field instruction. Inserts the number of the page containing the bookmark specified by text in field-argument for a cross-reference. public class PageRefFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction PageRefFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PageRefFieldInstruction(FieldInstruction) Initializes a new instance of the PageRefFieldInstruction class. public PageRefFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties BookmarkName The bookmark name for the page reference. public string? BookmarkName { get; set; } Property Value string Hyperlink Switch: \\h Creates a hyperlink to the bookmarked paragraph. public bool Hyperlink { get; set; } Property Value bool RelativePosition Switch: \\p Causes the field to display its position relative to the source bookmark. If the PAGEREF field is on the same page as the bookmark, it omits \"on page #\" and returns \"above\" or \"below\" only. If the PAGEREF field is not on the same page as the bookmark, the string \"on page #\" is used. public bool RelativePosition { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.PrintDateFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.PrintDateFieldInstruction.html",
    "title": "Class PrintDateFieldInstruction | OpenLanguage Documentation",
    "summary": "Class PrintDateFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed PRINTDATE field instruction. Retrieves the date and time on which the document was last printed, as recorded in the <LastPrinted> element of the Core File Properties part. By default, the Gregorian calendar is used and the date-and-time-formatting-switch used is implementation-defined. For a document that has never been printed, the date and time corresponds to 0000-00-00T00:00:00 local time and each text component is XXX. public class PrintDateFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction PrintDateFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PrintDateFieldInstruction(FieldInstruction) Initializes a new instance of the PrintDateFieldInstruction class. public PrintDateFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties UseGregorianCalendar Whether to use the Gregorian calendar (default behavior when no calendar switches are specified). This is true by default and becomes false when \\h or \\s switches are used. public bool UseGregorianCalendar { get; } Property Value bool UseHijriCalendar Switch: \\h Use the Hijri/Lunar calendar instead of the default Gregorian calendar. public bool UseHijriCalendar { get; set; } Property Value bool UseSakaCalendar Switch: \\s Use the Saka Era calendar instead of the default Gregorian calendar. public bool UseSakaCalendar { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.PrintFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.PrintFieldInstruction.html",
    "title": "Class PrintFieldInstruction | OpenLanguage Documentation",
    "summary": "Class PrintFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed PRINT field instruction. Sends the printer-specific control code characters specified by text in field-argument to the selected printer. public class PrintFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction PrintFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PrintFieldInstruction(FieldInstruction) Initializes a new instance of the PrintFieldInstruction class. public PrintFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties PostScriptDrawingRectangle The drawing rectangle definition for PostScript commands (field-argument-1 of \\p switch). Defines the drawing rectangle on which the subsequent PostScript instructions operate. public string? PostScriptDrawingRectangle { get; set; } Property Value string PostScriptInstructions The PostScript instructions to execute (field-argument-2 of \\p switch). Contains the actual PostScript commands to be executed. public string? PostScriptInstructions { get; set; } Property Value string PrinterControlCodes The printer-specific control code characters to send to the printer. public string PrinterControlCodes { get; set; } Property Value string UsePostScript Switch: \\p Allows PostScript strings to be sent to the printer as native PostScript codes. public bool UsePostScript { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.QuoteFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.QuoteFieldInstruction.html",
    "title": "Class QuoteFieldInstruction | OpenLanguage Documentation",
    "summary": "Class QuoteFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed QUOTE field instruction. Retrieves the text specified by text in field-argument. This text can include any other fields except AUTONUM, AUTONUMLGL, AUTONUMOUT, and SYMBOL. public class QuoteFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction QuoteFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors QuoteFieldInstruction(FieldInstruction) Initializes a new instance of the QuoteFieldInstruction class. public QuoteFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties ContainsSubFields Whether this quote contains sub-field instructions. public bool ContainsSubFields { get; } Property Value bool QuoteText The raw text content that may contain sub-field instructions. public string QuoteText { get; set; } Property Value string SubFields List of sub-field instructions found within the quote text. public List<FieldInstruction> SubFields { get; set; } Property Value List<FieldInstruction> Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.RdFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.RdFieldInstruction.html",
    "title": "Class RdFieldInstruction | OpenLanguage Documentation",
    "summary": "Class RdFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed RD field instruction. field-argument identifies a file to include when creating a table of contents, a table of authorities, or an index using a TOC, TOA, or INDEX field. RD fields that reference a series of files must be in the same order as the files in the final document. If the location includes a long file name containing spaces, field-argument shall contain delimiting quotes. A single backslash in the file path shall be preceded directly by a backslash. For a complex field implementation in XML the optional field-value storage is not needed. public class RdFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction RdFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RdFieldInstruction(FieldInstruction) Initializes a new instance of the RdFieldInstruction class. public RdFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties FilePath The path to the referenced document file. public string FilePath { get; set; } Property Value string IsRelativePath Switch: \\p Indicates that the path is relative to the current document. public bool IsRelativePath { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.RefFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.RefFieldInstruction.html",
    "title": "Class RefFieldInstruction | OpenLanguage Documentation",
    "summary": "Class RefFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed REF field instruction. Inserts the text or graphics represented by the bookmark specified by text in field-argument. The bookmark shall be defined in the current document. public class RefFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction RefFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RefFieldInstruction(FieldInstruction) Initializes a new instance of the RefFieldInstruction class. public RefFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties BookmarkName The bookmark name to reference. public string? BookmarkName { get; set; } Property Value string CreateHyperlink Switch: \\h Creates a hyperlink to the bookmarked paragraph. public bool CreateHyperlink { get; set; } Property Value bool FullContextParagraphNumber Switch: \\w Inserts the paragraph number of the bookmarked paragraph in full context from anywhere in the document. public bool FullContextParagraphNumber { get; set; } Property Value bool IncrementFootnote Switch: \\f Increments footnote, endnote, and annotation numbers that are marked by the bookmark, and inserts the corresponding footnote, endnote, and comment text. public bool IncrementFootnote { get; set; } Property Value bool InsertParagraphNumber Switch: \\n For a referenced paragraph, causes the field result to have the entire paragraph number without trailing periods. public bool InsertParagraphNumber { get; set; } Property Value bool InsertParagraphNumberRelative Switch: \\r Inserts the entire paragraph number of the bookmarked paragraph in relative context. public bool InsertParagraphNumberRelative { get; set; } Property Value bool RelativePosition Switch: \\p Causes the field result to contain the position relative to the source bookmark using the word \"above\" or \"below\". public bool RelativePosition { get; set; } Property Value bool SeparatorSequence Switch: \\d field-argument Specifies the character sequence that is used to separate sequence numbers and page numbers. public string? SeparatorSequence { get; set; } Property Value string SuppressText Switch: \\t Causes the REF field to suppress non-delimiter or non-numerical text when used in conjunction with the \\n, \\r, or \\w switch. public bool SuppressText { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.RefInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.RefInstruction.html",
    "title": "Class RefInstruction | OpenLanguage Documentation",
    "summary": "Class RefInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed REF field. public class RefInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction RefInstruction Inherited Members TypedFieldInstruction.Source TypedFieldInstruction.ToString() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RefInstruction(FieldInstruction) public RefInstruction(FieldInstruction source) Parameters source FieldInstruction Properties BookmarkName public string BookmarkName { get; set; } Property Value string FormattingSwitch public FieldArgument? FormattingSwitch { get; set; } Property Value FieldArgument"
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.RevNumFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.RevNumFieldInstruction.html",
    "title": "Class RevNumFieldInstruction | OpenLanguage Documentation",
    "summary": "Class RevNumFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed REVNUM field instruction. Retrieves the document's revision number (which indicates the number of times the document has been saved), as recorded in the <Revision> element of the Core File Properties part. public class RevNumFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction RevNumFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors RevNumFieldInstruction(FieldInstruction) Initializes a new instance of the RevNumFieldInstruction class. public RevNumFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SaveDateFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SaveDateFieldInstruction.html",
    "title": "Class SaveDateFieldInstruction | OpenLanguage Documentation",
    "summary": "Class SaveDateFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed SAVEDATE field instruction. Retrieves the date and time on which the document was last saved, as recorded in the <DateModified> element of the Core File Properties part. By default, the Gregorian calendar is used and the date-and-time-formatting-switch used is implementation-defined. For a document that has never been saved, the date and time corresponds to 0000-00-00T00:00:00 local time and each text component is XXX. public class SaveDateFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction SaveDateFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SaveDateFieldInstruction(FieldInstruction) Initializes a new instance of the SaveDateFieldInstruction class. public SaveDateFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties UseHijriCalendar Switch: \\h Use Hijri/Lunar calendar public bool UseHijriCalendar { get; set; } Property Value bool UseSakaCalendar Switch: \\s Use Saka Era calendar public bool UseSakaCalendar { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SectionFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SectionFieldInstruction.html",
    "title": "Class SectionFieldInstruction | OpenLanguage Documentation",
    "summary": "Class SectionFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed SECTION field instruction. Retrieves the number of the current section. public class SectionFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction SectionFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SectionFieldInstruction(FieldInstruction) Initializes a new instance of the SectionFieldInstruction class. public SectionFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SectionPagesFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SectionPagesFieldInstruction.html",
    "title": "Class SectionPagesFieldInstruction | OpenLanguage Documentation",
    "summary": "Class SectionPagesFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed SECTIONPAGES field instruction. Retrieves the number of the current page within the current section. public class SectionPagesFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction SectionPagesFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SectionPagesFieldInstruction(FieldInstruction) Initializes a new instance of the SectionPagesFieldInstruction class. public SectionPagesFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SeqFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SeqFieldInstruction.html",
    "title": "Class SeqFieldInstruction | OpenLanguage Documentation",
    "summary": "Class SeqFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed SEQ field instruction. Sequentially numbers chapters, tables, figures, and other user-defined lists of items in a document. If an item and its SEQ field are added, deleted, or moved, updating the remaining SEQ fields in the document reflects the new sequence. A SEQ field in a header, footer, annotation, or footnote shall NOT affect the sequence numbering that results from SEQ fields in the document text. Syntax: SEQ identifier [ field-argument ] [ switches ] The identifier is the name assigned to the series of items that are to be numbered (e.g., Equation, Figure, Table, Thing). The identifier shall start with a Latin letter and shall consist of no more than 40 Latin letters, Arabic digits, and underscores. The optional field-argument specifies a bookmark name that refers to an item elsewhere in the document rather than in the current location. Field Value: The next number in the sequence. If no numeric-formatting-switch is present, * Arabic is used. Switches: \\c: Repeats the closest preceding sequence number (useful for inserting chapter numbers in headers or footers) \\h: Hides the field result unless a general-formatting-switch is also present (useful for cross-references) \\n: Inserts the next sequence number for the specified item (this is the default behavior) \\r field-argument: Resets the sequence number to the integer number specified by the field-argument \\s field-argument: Resets the sequence number to the built-in (integer) heading level specified by the field-argument public class SeqFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction SeqFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SeqFieldInstruction(FieldInstruction) Initializes a new instance of the SeqFieldInstruction class. public SeqFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties BookmarkName Optional field-argument specifying a bookmark name that refers to an item elsewhere in the document rather than in the current location. public string? BookmarkName { get; set; } Property Value string Hide Switch: \\h Hides the field result unless a general-formatting-switch is also present. This switch can be used to refer to a SEQ field in a cross-reference without printing the number. public bool Hide { get; set; } Property Value bool InsertNext Switch: \\n Inserts the next sequence number for the specified item. This is the default behavior. public bool InsertNext { get; set; } Property Value bool RepeatPreviousNumber Switch: \\c Repeats the closest preceding sequence number. This is useful for inserting chapter numbers in headers or footers. public bool RepeatPreviousNumber { get; set; } Property Value bool ResetToHeadingLevel Switch: \\s field-argument Resets the sequence number to the built-in (integer) heading level specified by text in this switch's field-argument. public int? ResetToHeadingLevel { get; set; } Property Value int? ResetToNumber Switch: \\r field-argument Resets the sequence number to the integer number specified by text in this switch's field-argument. public int? ResetToNumber { get; set; } Property Value int? SequenceName The identifier - name assigned to the series of items that are to be numbered. Must start with a Latin letter and consist of no more than 40 Latin letters, Arabic digits, and underscores. Examples: Equation, Figure, Table, Thing public string? SequenceName { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SetFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SetFieldInstruction.html",
    "title": "Class SetFieldInstruction | OpenLanguage Documentation",
    "summary": "Class SetFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed SET field instruction. Defines the bookmark name specified by field-argument-1 to represent the information specified by field-argument-2. public class SetFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction SetFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SetFieldInstruction(FieldInstruction) Initializes a new instance of the SetFieldInstruction class. public SetFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties BookmarkName The bookmark name to set public string? BookmarkName { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SkipIfFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SkipIfFieldInstruction.html",
    "title": "Class SkipIfFieldInstruction | OpenLanguage Documentation",
    "summary": "Class SkipIfFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed SKIPIF field instruction. Compares the values designated by Expression-1 and Expression-2 using the operator designated by Operator. If the comparison is true, SKIPIF cancels the current merge document, moves to the next in the data source, and starts a new merge document. If the comparison is false, the current merge document is continued. Operator can be any one of the six relational and equality operators specified for operator (§2.16.3.3). public class SkipIfFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction SkipIfFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SkipIfFieldInstruction(FieldInstruction) Initializes a new instance of the SkipIfFieldInstruction class. public SkipIfFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties ComparisonOperator The comparison operator. public ComparisonOperator ComparisonOperator { get; set; } Property Value ComparisonOperator LeftExpression The first expression to compare. public Expression? LeftExpression { get; set; } Property Value Expression RightExpression The second expression to compare. public Expression? RightExpression { get; set; } Property Value Expression Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.StyleRefFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.StyleRefFieldInstruction.html",
    "title": "Class StyleRefFieldInstruction | OpenLanguage Documentation",
    "summary": "Class StyleRefFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed STYLEREF field instruction. Inserts the nearest piece of text prior to this field that is formatted by the style whose name is specified by text in field-argument. The style can be a paragraph style or a character style. public class StyleRefFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction StyleRefFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors StyleRefFieldInstruction(FieldInstruction) Initializes a new instance of the StyleRefFieldInstruction class. public StyleRefFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties InsertNearestTextFollowing Switch: \\l Inserts the nearest text following the field. public bool InsertNearestTextFollowing { get; set; } Property Value bool InsertParagraphNumber Switch: \\n Inserts the paragraph number of the referenced paragraph exactly as it appears in the document. public bool InsertParagraphNumber { get; set; } Property Value bool InsertParagraphNumberFull Switch: \\w Inserts the paragraph number of the referenced paragraph in full context, from anywhere in the document. public bool InsertParagraphNumberFull { get; set; } Property Value bool InsertParagraphNumberRelative Switch: \\r Inserts the paragraph number of the referenced paragraph exactly in relative context. public bool InsertParagraphNumberRelative { get; set; } Property Value bool InsertRelativePosition Switch: \\p Inserts the relative position of the referenced paragraph as being \"above\" or \"below\". public bool InsertRelativePosition { get; set; } Property Value bool StyleName The name of the style to reference. public string? StyleName { get; set; } Property Value string SuppressNonDelimiter Switch: \\t When used with the \\n, \\r, or \\w switch, causes non-delimiter and non-numerical text to be suppressed. public bool SuppressNonDelimiter { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SubjectFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SubjectFieldInstruction.html",
    "title": "Class SubjectFieldInstruction | OpenLanguage Documentation",
    "summary": "Class SubjectFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed SUBJECT field instruction. Retrieves, and optionally sets, the document's subject, as recorded in the <Subject> element of the Core File Properties part or, if field-argument is present, the subject specified by text in field-argument. Specifying a field-argument shall change <Subject> to text. public class SubjectFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction SubjectFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SubjectFieldInstruction(FieldInstruction) Initializes a new instance of the SubjectFieldInstruction class. public SubjectFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties SubjectText Optional field argument that specifies the text to set as the document's subject. If present, this will change the document's Subject property to this value. public string SubjectText { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SymbolFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.SymbolFieldInstruction.html",
    "title": "Class SymbolFieldInstruction | OpenLanguage Documentation",
    "summary": "Class SymbolFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed SYMBOL field instruction. Retrieves the character whose code point value is specified in decimal or hexadecimal (by using a leading 0x or 0X) by text in field-argument. The formatting switches over ride any formatting applied directly to the result. The XML generated for a complex field implementation shall not have the optional field value stored. public class SymbolFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction SymbolFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SymbolFieldInstruction(FieldInstruction) Initializes a new instance of the SymbolFieldInstruction class. public SymbolFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties Ansi Switch: \\a ANSI character public bool Ansi { get; set; } Property Value bool CharacterCode The character code of the symbol public int? CharacterCode { get; set; } Property Value int? FontSizeHalfPoints Switch: \\h Font size in half-points public bool FontSizeHalfPoints { get; set; } Property Value bool FontSizePoints Switch: \\s field-argument Font size in points public FontSize? FontSizePoints { get; set; } Property Value FontSize Unicode Switch: \\u Unicode character public bool Unicode { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TaFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TaFieldInstruction.html",
    "title": "Class TaFieldInstruction | OpenLanguage Documentation",
    "summary": "Class TaFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed TA field instruction. Defines the text and page number for a table of authorities entry, which is used by a TOA field. public class TaFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction TaFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TaFieldInstruction(FieldInstruction) Initializes a new instance of the TaFieldInstruction class. public TaFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties ApplyBoldFormatting Switch: \\b Applies bold formatting to the page number for the entry. If the table of authorities style for the entry already has bold formatting, \\b removes it. public bool ApplyBoldFormatting { get; set; } Property Value bool ApplyItalicFormatting Switch: \\i Applies italic formatting to the page number for the entry. If the table of authorities' style for the entry already has italic formatting, \\i removes it. public bool ApplyItalicFormatting { get; set; } Property Value bool BookmarkName Switch: \\r field-argument Inserts as the entry's page number the range of pages marked by the bookmark specified by text in this switch's field-argument. public string? BookmarkName { get; set; } Property Value string CategoryNumber Switch: \\c field-argument Text in this switch's field-argument specifies the integral entry category, which is a number that corresponds to the order of categories. The number determines how citations are grouped in tables of authorities. If \\c is omitted, category 1 is the default. public string? CategoryNumber { get; set; } Property Value string EntryText The text for the table of authorities entry public string? EntryText { get; set; } Property Value string LongCitation Switch: \\l field-argument Text in this switch's field-argument defines the long citation for the entry. public string? LongCitation { get; set; } Property Value string ShortCitation Switch: \\s field-argument Text in this switch's field-argument defines the short citation for the entry. public string? ShortCitation { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TcFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TcFieldInstruction.html",
    "title": "Class TcFieldInstruction | OpenLanguage Documentation",
    "summary": "Class TcFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed TC field instruction. Defines the text and page number for a table of contents (including a table of figures) entry, which is used by a TOC field. The text of the entry is text in field-argument. public class TcFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction TcFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TcFieldInstruction(FieldInstruction) Initializes a new instance of the TcFieldInstruction class. public TcFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties EntryText The text for the table of contents entry public string? EntryText { get; set; } Property Value string Level Switch: \\l field-argument The level of the TC entry. If no level is specified, level 1 is assumed. public string? Level { get; set; } Property Value string OmitPageNumber Switch: \\n Omits the page number for the entry. public bool OmitPageNumber { get; set; } Property Value bool TableId Switch: \\f field-argument Table identifier public string? TableId { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TemplateFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TemplateFieldInstruction.html",
    "title": "Class TemplateFieldInstruction | OpenLanguage Documentation",
    "summary": "Class TemplateFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed TEMPLATE field instruction. Retrieves the disk file name of the template used by the current document. public class TemplateFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction TemplateFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TemplateFieldInstruction(FieldInstruction) Initializes a new instance of the TemplateFieldInstruction class. public TemplateFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties IncludeFullPath Switch: \\p Include the full file path name. public bool IncludeFullPath { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TimeFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TimeFieldInstruction.html",
    "title": "Class TimeFieldInstruction | OpenLanguage Documentation",
    "summary": "Class TimeFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed TIME field instruction. Retrieves the current date and time. The Gregorian calendar is always used. By default, the date-and-time-formatting-switch used is implementation-defined. public class TimeFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction TimeFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TimeFieldInstruction(FieldInstruction) Initializes a new instance of the TimeFieldInstruction class. public TimeFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TitleFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TitleFieldInstruction.html",
    "title": "Class TitleFieldInstruction | OpenLanguage Documentation",
    "summary": "Class TitleFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed TITLE field instruction. Retrieves, and optionally sets, the document's title, as recorded in the <Title> element of the Core File Properties part or, if field-argument is present, the name specified by text in field-argument. Specifying a field-argument shall change <Title> to text. public class TitleFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction TitleFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TitleFieldInstruction(FieldInstruction) Initializes a new instance of the TitleFieldInstruction class. public TitleFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.ToaFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.ToaFieldInstruction.html",
    "title": "Class ToaFieldInstruction | OpenLanguage Documentation",
    "summary": "Class ToaFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed TOA field instruction. Builds a table of authorities (that is, a list of the references in a legal document, such as references to cases, statutes, and rules, along with the numbers of the pages on which the references appear) using the entries specified by TA fields. public class ToaFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction ToaFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ToaFieldInstruction(FieldInstruction) Initializes a new instance of the ToaFieldInstruction class. public ToaFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties BookmarkName Switch: \\b field-argument Bookmark name public string? BookmarkName { get; set; } Property Value string Category The category for the table of authorities public string? Category { get; set; } Property Value string CategoryNumber Switch: \\c field-argument Includes the entries whose integral category is that specified by text in this switch's field-argument. public string? CategoryNumber { get; set; } Property Value string EntryPageSeparator Switch: \\e field-argument Text in this switch's field-argument specifies the character sequence that separates a table of authorities entry and its page number. If \\e is not specified, a tab stop with leader dots is used. public string? EntryPageSeparator { get; set; } Property Value string IncludeCategoryHeading Switch: \\h Includes the category heading for the entries in a table of authorities. public bool IncludeCategoryHeading { get; set; } Property Value bool MultiplePageSeparator Switch: \\l field-argument Text in this switch's field-argument specifies the character sequence that separates multiple page references. If \\l is omitted, a comma (,) and space are used. public string? MultiplePageSeparator { get; set; } Property Value string PageRangeSeparator Switch: \\g field-argument Text in this switch's field-argument specifies the character sequence that separates the pages in a page range. If \\g is omitted, an en dash (–) is used. public string? PageRangeSeparator { get; set; } Property Value string RemoveFormatting Switch: \\f Remove formatting from entries public bool RemoveFormatting { get; set; } Property Value bool SequenceIdentifier Switch: \\s field-argument Includes a case or section number before the page number. The entry shall be numbered with a SEQ field, and text in this switch's field-argument shall match the identifier in the SEQ field. public string? SequenceIdentifier { get; set; } Property Value string SequencePageSeparator Switch: \\d field-argument Used in conjunction with \\s to specify the character sequence that separates the sequence numbers and page numbers. If \\d is omitted, a hyphen (-) is used. public string? SequencePageSeparator { get; set; } Property Value string UsePassim Switch: \\p Replaces five or more different page references to the same authority with \"passim\", which is used to indicate that a word or passage occurs frequently in the work cited. public bool UsePassim { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TocFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TocFieldInstruction.html",
    "title": "Class TocFieldInstruction | OpenLanguage Documentation",
    "summary": "Class TocFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed TOC field instruction. Builds a table of contents (which can also be a table of figures) using the entries specified by TC fields, their heading levels, and specified styles, and inserts that table at this place in the document. Each table entry is a separate paragraph. public class TocFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction TocFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TocFieldInstruction(FieldInstruction) Initializes a new instance of the TocFieldInstruction class. public TocFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties BookmarkName Switch: \\b field-argument Includes entries only from the portion of the document marked by the bookmark named by text in this switch's field-argument. public string? BookmarkName { get; set; } Property Value string CaptionIdentifier Switch: \\a field-argument Includes captioned items, but omits caption labels and numbers. The identifier designated by text in this switch's field-argument corresponds to the caption label. Use \\c to build a table of captions with labels and numbers. public string? CaptionIdentifier { get; set; } Property Value string CreateHyperlinks Switch: \\h Makes the table of contents entries hyperlinks. public bool CreateHyperlinks { get; set; } Property Value bool CustomStyles Switch: \\t field-argument Uses paragraphs formatted with styles other than the built-in heading styles. Text in this switch's field-argument specifies those styles as a set of comma-separated doublets, with each doublet being a comma-separated set of style name and table of content level. \\t can be combined with \\o. public string? CustomStyles { get; set; } Property Value string HeadingStyleRange Switch: \\o field-argument Uses paragraphs formatted with all or the specified range of built-in heading styles. Headings in a style range are specified by text in this switch's field-argument using the notation specified as for \\l, where each integer corresponds to the style with a style ID of HeadingX (e.g. 1 corresponds to Heading1). If no heading range is specified, all heading levels used in the document are listed. public string? HeadingStyleRange { get; set; } Property Value string HideTabLeaderInWebView Switch: \\z Hides tab leader and page numbers in Web layout view. public bool HideTabLeaderInWebView { get; set; } Property Value bool OmitPageNumbers Switch: \\n field-argument Without field-argument, omits page numbers from the table of contents. Page numbers are omitted from all levels unless a range of entry levels is specified by text in this switch's field-argument. A range is specified as for \\l. public string? OmitPageNumbers { get; set; } Property Value string PageNumberSeparator Switch: \\p field-argument Text in this switch's field-argument specifies a sequence of characters that separate an entry and its page number. The default is a tab with leader dots. public string? PageNumberSeparator { get; set; } Property Value string PreserveNewlines Switch: \\x Preserves newline characters within table entries. public bool PreserveNewlines { get; set; } Property Value bool PreserveTabEntries Switch: \\w Preserves tab entries within table entries. public bool PreserveTabEntries { get; set; } Property Value bool SeqFieldIdentifier Switch: \\s field-argument For entries numbered with a SEQ field, adds a prefix to the page number. The prefix depends on the type of entry. Text in this switch's field-argument shall match the identifier in the SEQ field. public string? SeqFieldIdentifier { get; set; } Property Value string SequenceIdentifier Switch: \\c field-argument Includes figures, tables, charts, and other items that are numbered by a SEQ field. The sequence identifier designated by text in this switch's field-argument, which corresponds to the caption label, shall match the identifier in the corresponding SEQ field. public string? SequenceIdentifier { get; set; } Property Value string SequenceSeparator Switch: \\d field-argument When used with \\s, the text in this switch's field-argument defines the separator between sequence and page numbers. The default separator is a hyphen (-). public string? SequenceSeparator { get; set; } Property Value string TcFieldIdentifier Switch: \\f field-argument Includes only those TC fields whose identifier exactly matches the text in this switch's field-argument (which is typically a letter). public string? TcFieldIdentifier { get; set; } Property Value string TcFieldLevels Switch: \\l field-argument Includes TC fields that assign entries to one of the levels specified by text in this switch's field-argument as a range having the form startLevel-endLevel, where startLevel and endLevel are integers, and startLevel has a value equal-to or less-than endLevel. TC fields that assign entries to lower levels are skipped. public string? TcFieldLevels { get; set; } Property Value string UseOutlineLevels Switch: \\u Uses the applied paragraph outline level. public bool UseOutlineLevels { get; set; } Property Value bool Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TypedFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TypedFieldInstruction.html",
    "title": "Class TypedFieldInstruction | OpenLanguage Documentation",
    "summary": "Class TypedFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll A base for all strongly-typed field instructions. public class TypedFieldInstruction Inheritance object TypedFieldInstruction Derived AddressBlockFieldInstruction AdvanceFieldInstruction AskFieldInstruction AuthorFieldInstruction AutoNumFieldInstruction AutoNumLglFieldInstruction AutoNumOutFieldInstruction AutoTextFieldInstruction AutoTextListFieldInstruction BarcodeFieldInstruction BibliographyFieldInstruction CitationFieldInstruction CommentsFieldInstruction CompareFieldInstruction CreateDateFieldInstruction DatabaseFieldInstruction DateFieldInstruction DocPropertyFieldInstruction DocVariableFieldInstruction EditTimeFieldInstruction EqFieldInstruction FileNameFieldInstruction FileSizeFieldInstruction FillInFieldInstruction FormCheckBoxFieldInstruction FormDropDownFieldInstruction FormTextFieldInstruction GoToButtonFieldInstruction GreetingLineFieldInstruction HyperlinkFieldInstruction IfFieldInstruction IncludePictureFieldInstruction IncludeTextFieldInstruction IndexFieldInstruction InfoFieldInstruction KeywordsFieldInstruction LastSavedByFieldInstruction LinkFieldInstruction ListNumFieldInstruction MacroButtonFieldInstruction MergeFieldFieldInstruction MergeRecFieldInstruction MergeSeqFieldInstruction NextFieldInstruction NextIfFieldInstruction NoteRefFieldInstruction NumCharsFieldInstruction NumPagesFieldInstruction NumWordsFieldInstruction PageFieldInstruction PageRefFieldInstruction PrintDateFieldInstruction PrintFieldInstruction QuoteFieldInstruction RdFieldInstruction RefFieldInstruction RefInstruction RevNumFieldInstruction SaveDateFieldInstruction SectionFieldInstruction SectionPagesFieldInstruction SeqFieldInstruction SetFieldInstruction SkipIfFieldInstruction StyleRefFieldInstruction SubjectFieldInstruction SymbolFieldInstruction TaFieldInstruction TcFieldInstruction TemplateFieldInstruction TimeFieldInstruction TitleFieldInstruction ToaFieldInstruction TocFieldInstruction UserAddressFieldInstruction UserInitialsFieldInstruction UserNameFieldInstruction XeFieldInstruction Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors TypedFieldInstruction(FieldInstruction) protected TypedFieldInstruction(FieldInstruction source) Parameters source FieldInstruction Properties Source public FieldInstruction Source { get; } Property Value FieldInstruction Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TypedFieldInstructionFactory.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.TypedFieldInstructionFactory.html",
    "title": "Class TypedFieldInstructionFactory | OpenLanguage Documentation",
    "summary": "Class TypedFieldInstructionFactory Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Factory for creating strongly-typed field instructions. public static class TypedFieldInstructionFactory Inheritance object TypedFieldInstructionFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Create(FieldInstruction?) Creates a strongly-typed field instruction from a generic FieldInstruction. public static TypedFieldInstruction? Create(FieldInstruction? genericInstruction) Parameters genericInstruction FieldInstruction The generic field instruction to convert. Returns TypedFieldInstruction A strongly-typed field instruction, or null if the type is not supported."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.UserAddressFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.UserAddressFieldInstruction.html",
    "title": "Class UserAddressFieldInstruction | OpenLanguage Documentation",
    "summary": "Class UserAddressFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed USERADDRESS field instruction. Retrieves the current user's postal address or, if field-argument is present, the address specified by text in field-argument. Specifying a field-argument shall not change the address of the current user. public class UserAddressFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction UserAddressFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UserAddressFieldInstruction(FieldInstruction) Initializes a new instance of the UserAddressFieldInstruction class. public UserAddressFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.UserInitialsFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.UserInitialsFieldInstruction.html",
    "title": "Class UserInitialsFieldInstruction | OpenLanguage Documentation",
    "summary": "Class UserInitialsFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed USERINITIALS field instruction. Retrieves the current user's initials or, if field-argument is present, the initials specified by text in field-argument. Specifying a field-argument shall not change the initials of the current user. public class UserInitialsFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction UserInitialsFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UserInitialsFieldInstruction(FieldInstruction) Initializes a new instance of the UserInitialsFieldInstruction class. public UserInitialsFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.UserNameFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.UserNameFieldInstruction.html",
    "title": "Class UserNameFieldInstruction | OpenLanguage Documentation",
    "summary": "Class UserNameFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed USERNAME field instruction. Retrieves the current user's name or, if field-argument is present, the name specified by text in field-argument. Specifying a field-argument shall not change the name of the current user. public class UserNameFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction UserNameFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UserNameFieldInstruction(FieldInstruction) Initializes a new instance of the UserNameFieldInstruction class. public UserNameFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.XeFieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.XeFieldInstruction.html",
    "title": "Class XeFieldInstruction | OpenLanguage Documentation",
    "summary": "Class XeFieldInstruction Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Assembly OpenLanguage.dll Represents a strongly-typed XE field instruction. Defines the text and page number for an index entry, which is used by an INDEX field. The text of the entry is specified in the field argument. To indicate a subentry, the main entry text and the subentry text shall be separated by a colon (:). Subentries beyond one level are permitted. public class XeFieldInstruction : TypedFieldInstruction Inheritance object TypedFieldInstruction XeFieldInstruction Inherited Members TypedFieldInstruction.Source object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors XeFieldInstruction(FieldInstruction) Initializes a new instance of the XeFieldInstruction class. public XeFieldInstruction(FieldInstruction source) Parameters source FieldInstruction The source FieldInstruction to parse. Properties ApplyBoldFormatting Switch: \\b Applies bold formatting to the entry's page number. However, if the index style for that entry is already bold, this switch removes that formatting for that entry. public bool ApplyBoldFormatting { get; set; } Property Value bool ApplyItalicFormatting Switch: \\i Applies italic formatting to the entry's page number. However, if the index style for that entry is already italic, this switch removes that formatting for that entry. public bool ApplyItalicFormatting { get; set; } Property Value bool BookmarkName Switch: \\r field-argument Instead of the entry's page number, uses the range of pages marked by the bookmark specified by this field argument. public string? BookmarkName { get; set; } Property Value string CrossReferenceText Switch: \\t field-argument Uses text from this field argument in place of a page number. Useful for \"See …\" or \"See also …\" entries. public string? CrossReferenceText { get; set; } Property Value string EntryText The text for the index entry (field-argument). Required. To indicate a subentry, separate main entry and subentry text with a colon (:). public string EntryText { get; set; } Property Value string EntryType Switch: \\f field-argument Defines an index entry type. If an INDEX field has the same \\f switch and field-argument, this entry is included in the resulting index; otherwise, it is excluded. public string? EntryType { get; set; } Property Value string YomiText Switch: \\y field-argument Specifies that the text from this field argument defines the yomi (first phonetic character for sorting indexes) for the index entry. public string? YomiText { get; set; } Property Value string Methods ToString() Reconstructs the field instruction as a string. public override string ToString() Returns string The field instruction string."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.Typed.html",
    "title": "Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed | OpenLanguage Documentation",
    "summary": "Namespace OpenLanguage.WordprocessingML.FieldInstruction.Typed Classes AddressBlockFieldInstruction Represents a strongly-typed ADDRESSBLOCK field instruction. The ADDRESSBLOCK field inserts a mail merge address block. AdvanceFieldInstruction Represents a strongly-typed ADVANCE field instruction. Moves the starting point of text that follows the field to the right or left, up or down, or to a specific horizontal or vertical position. The switches used by this field can cause text to overlap. Text will not display if it is moved to the previous or next page, or beyond the print margins of the current page. AskFieldInstruction Represents a strongly-typed ASK field instruction. Prompts the user to enter information and assigns it to a bookmark. AuthorFieldInstruction Represents a strongly-typed AUTHOR field instruction. Retrieves and optionally sets the document author's name. AutoNumFieldInstruction Represents a strongly-typed AUTONUM field instruction. In paragraphs formatted with one of the nine built-in heading styles, paragraph numbering restarts at 1 in each successive heading level. If headings that contain AUTONUM fields are followed by body text paragraphs that also contain AUTONUM fields, the paragraph numbering of the body text is restarted at 1 after each heading. If the headings don't contain AUTONUM fields, body text paragraphs that contain AUTONUM fields are numbered in a continuous, sequential series throughout the document. Note: This field is supported for legacy reasons, It is recommended that LISTNUM be used instead. The XML generated for a complex field implementation shall not have the optional field value stored. AutoNumLglFieldInstruction Represents a strongly-typed AUTONUMLGL field instruction. For legal and technical publications, use the nine built-in heading styles to format headings in the document, and then insert an AUTONUMLGL field at the beginning of each heading paragraph. The numbers reflect the heading levels that correspond to the heading styles. If an AUTONUMLGL field is inserted in paragraphs of body text paragraphs not formatted with built-in heading styles, the number of the preceding heading is included in the paragraph number. Note: This field is supported for legacy reasons, It is recommended that LISTNUM be used instead. This field only makes sense in terms of multi-level headings. Given the following headings: Heading 1Heading 2Heading 2Heading 1 This field allows 1. Heading 11.1. Heading 21.2. Heading 22. Heading 1 At each level, the numbering sequence does two things—it increments specific to that level, and it includes the value from the previous level. The XML generated for a complex field implementation shall not have the optional field value stored. AutoNumOutFieldInstruction Represents a strongly-typed AUTONUMOUT field instruction. Provides automatic numbering for headings using built-in heading styles. Legacy field - LISTNUM is recommended instead. AutoTextFieldInstruction Represents a strongly-typed AUTOTEXT field instruction. Inserts the AutoText entry whose name is specified by text in field-argument. Regarding XML generation, the field result is the value of the autotext. ##### Note This can be arbitrarily complex and involve VML AutoTextListFieldInstruction Represents a strongly-typed AUTOTEXTLIST field instruction. Creates a shortcut menu based on AutoText entries in the active template. BarcodeFieldInstruction Represents a strongly-typed BARCODE field instruction. Produces a U.S. Postal Service barcode in POSTNET or FIM format. BibliographyFieldInstruction Represents a strongly-typed BIBLIOGRAPHY field instruction. Retrieves and displays the contents of the document's Bibliography part in the bibliographic style specified. CitationFieldInstruction Represents a strongly-typed CITATION field instruction. Displays bibliography source contents using the specified bibliographic style. CommentsFieldInstruction Represents a strongly-typed COMMENTS field instruction. Retrieves, and optionally sets, the comments relating to the current document, as recorded in the <Description> element of the Core File Properties part or, if field-argument is present, the comments specified by text in field-argument. Specifying a field-argument shall change <Description> to text. CompareFieldInstruction Represents a strongly-typed COMPARE field instruction. Compares two expressions using a relational or equality operator. Returns 1 if comparison is true, 0 if false. CreateDateFieldInstruction Represents a strongly-typed CREATEDATE field instruction. Retrieves the date and time at which the document was created, as recorded in the <DateCreated> element of the Core File Properties part. By default, the Gregorian calendar is used and the date-and-time-formatting-switch used is implementation-defined. DatabaseFieldInstruction Represents a strongly-typed DATABASE field instruction. Inserts the results of a database query into a WordprocessingML table. DateFieldInstruction Represents a strongly-typed DATE field instruction. Retrieves the current date and time. By default, the Gregorian calendar is used, and the date-and-time-formatting-switch used is implementation-defined. DocPropertyFieldInstruction Represents a strongly-typed DOCPROPERTY field instruction. Retrieves the indicated document information. For some combinations of DOCPROPERTY and docprop-category, there is an equivalent field, in which case, the description for the combination can be obtained from that field. For those combinations not having an equivalent field, the description is shown directly. When used directly, some of the equivalent fields allow the value of the designated property to be changed. However, when the corresponding DOCPROPERTY field is used, such values shall not be changed. This is indicated in the following table by \"Read-only operation.\" Docprop-category Corresponding Field Description AUTHOR AUTHOR (AUTHOR) Read-only operation. BYTES FILESIZE (FILESIZE) CATEGORY No equivalent The contents of the <Category> element of the Core File Properties part. CHARACTERS NUMCHARS (NUMCHARS) CHARACTERSWITHSPACES No equivalent Like NUMCHARS, but includes all white space characters as well. COMMENTS COMMENTS (BIBLIOGRAPHYBIBLIOGR) Read-only operation. COMPANY No equivalent The contents of the <Company> element of the Application-Defined File Properties part. CREATETIME CREATEDATE (CREATEDATE) HYPERLINKBASE No equivalent The contents of the <HyperlinkBase> element of the Application-Defined File Properties part. KEYWORDS No equivalent The contents of the <Keywords> element of the Core File Properties part. LASTPRINTED PRINTDATE (PRINTDATE) LASTSAVEDBY LASTSAVEDBY (LASTSAVEDBYLASTSAVED) LASTSAVEDTIME SAVEDATE (SAVEDATE) LINES No equivalent The contents of the <Lines> element of the Application-Defined File Properties part. MANAGER No equivalent The contents of the <Manager> element of the Application-Defined File Properties part. NAMEOFAPPLICATION No equivalent The contents of the <Application> element of the Application-Defined File Properties part. ODMADOCID PAGES NUMPAGES (NUMPAGES) PARAGRAPHS No equivalent The contents of the <Paragraphs> element of the Application-Defined File Properties part. REVISIONNUMBER REVNUM (REVNUM) SECURITY No equivalent The contents of the <DocSecurity> element of the Application-Defined File Properties part. SUBJECT SUBJECT (SUBJECT) Read-only operation. TEMPLATE TEMPLATE (TEMPLATE) TITLE TITLE (TITLE) Read-only operation. TOTALEDITINGTIME EDITTIME (EDITTIME) WORDS No equivalent The contents of the <Words> element of the Application-Defined File Properties part. DocVariableFieldInstruction Represents a strongly-typed DOCVARIABLE field instruction. Inserts the string assigned to the document variable designated by text in field-argument. Each WordprocessingML document has a collection of variables. This field is used to access and display the contents of <docVar> elements in the Document Settings part. EditTimeFieldInstruction Represents a strongly-typed EDITTIME field instruction. Retrieves the total editing time, in minutes, since the document was created, as recorded in the <TotalTime> element of the Application-Defined File Properties part. By default, the numeric-formatting-switch or general-formatting-switch used is implementation-defined. EqFieldInstruction Represents a strongly-typed EQ field instruction. Computes the specified mathematical equation. FileNameFieldInstruction Represents a strongly-typed FILENAME field instruction. Retrieves the name of the current document as stored on disk. FileSizeFieldInstruction Represents a strongly-typed FILESIZE field instruction. Retrieves the size of the current document in bytes. ##### Note This information is not stored inside the document's XML. It needs to be obtained from the file system. FillInFieldInstruction Represents a strongly-typed FILLIN field instruction. Prompts the user to enter text. text in field-argument contains the prompt. The prompt is displayed each time the field is updated. When a new document is created based on a template containing FILLIN fields, those fields are updated automatically. FormCheckBoxFieldInstruction Represents a strongly-typed FORMCHECKBOX field instruction. Inserts a check box style form field which, when the editing of form fields is enabled using the <documentProtection> element, can be checked and unchecked. An instance of this field shall be accompanied by a use of the <ffData> element which contains the form field's properties. FormDropDownFieldInstruction Represents a strongly-typed FORMDROPDOWN field instruction. Inserts a drop-down list style form field which, when the editing of form fields is enabled using the <documentProtection> element, can be used to select an entry in the list. An instance of this field shall be accompanied by a use of the <ffData> element which contains the form field's properties. FormTextFieldInstruction Represents a strongly-typed FORMTEXT field instruction. Inserts a text box style form field which, when the editing of form fields is enabled using the <documentProtection> element, can be typed into. An instance of this field shall be accompanied by a use of the <ffData> element which contains the form field's properties. GoToButtonFieldInstruction Represents a strongly-typed GOTOBUTTON field instruction. Inserts a jump command that moves the insertion point to a specified location when activated. GreetingLineFieldInstruction Represents a strongly-typed GREETINGLINE field instruction. Inserts a mail merge greeting line. HyperlinkFieldInstruction Represents a strongly-typed HYPERLINK field instruction. When selected, causes control to jump to the location specified by text in field-argument. That location can be a bookmark or a URL. IfFieldInstruction Represents a strongly-typed IF field instruction. Compares the values designated by Expression-1 and Expression-2 using the operator designated by Operator. IncludePictureFieldInstruction Represents a strongly-typed INCLUDEPICTURE field instruction. Retrieves the picture contained in the document named by field-argument. If field-argument contains white space, it shall be enclosed in double quotes. If field-argument contains any backslash characters, each one shall be preceded directly by another backslash character. IncludeTextFieldInstruction Represents a strongly-typed INCLUDETEXT field instruction. Inserts all or part of the text and graphics contained in the document named by field-argument-1. If the document is a WordprocessingML document, the portion marked by the optional bookmark field-argument-2 is inserted. If no such bookmark is specified here, the whole document is inserted. If the document is an XML file, the fragment referred to by an XPath expression in the \\x switch is inserted. If no such switch is specified, the whole XML file is inserted. If field-argument-1 contains white space, it shall be enclosed in double quotes. If field-argument-1 contains any backslash characters, each one shall be preceded directly by another backslash character. IndexFieldInstruction Represents a strongly-typed INDEX field instruction. Builds an index using the index entries specified by XE fields, and inserts that index at this place in the document. Each index entry and subentry is a separate paragraph unless the \\r switch is used. InfoFieldInstruction Represents a strongly-typed INFO field instruction. A field of this kind is treated as if INFO was omitted and info-category was a field-type name. KeywordsFieldInstruction Represents a strongly-typed KEYWORDS field instruction. Retrieves, and optionally sets, the document's keywords, as recorded in the <Keywords> element of the Core File Properties part or, if field-argument is present, the subject specified by text in field-argument. Specifying a field-argument shall change <Keywords> to text. The <Keywords> element contains a string of text whose format and semantics is unspecified by this Office Open XML Standard. LastSavedByFieldInstruction Represents a strongly-typed LASTSAVEDBY field instruction. Retrieves the name of the user who last modified and saved the current document, as recorded in the <LastModifiedBy> element of the Core File Properties part. LinkFieldInstruction Represents a strongly-typed LINK field instruction. For information copied from another application, this field links that information to its original source file using OLE. ListNumFieldInstruction Represents a strongly-typed LISTNUM field instruction. Computes the next integral number from the current or a specific series, or a specific number from the next or specific series. This field can be used anywhere in a paragraph, not just at its start. A LISTNUM field can be incorporated into numbering from a simple or outline-numbered list. text in field-argument is used to associates a LISTNUM field with a specific list. To emulate the behavior of the AUTONUM, AUTONUMLGL, and AUTONUMOUT fields, use the list names NumberDefault, LegalDefault, and OutlineDefault names, respectively. By default, the NumberFormat list is used. The XML generated for a complex field implementation shall not have the optional field value stored. There are nine levels of list, and, assuming \\s 1 for each, the result style used for each is as follows: 1 1) 4 (1) 7 1. 2 A) 5 (a) 8 A. 3 Iii) 6 (iii) 9 Iii. MacroButtonFieldInstruction Represents a strongly-typed MACROBUTTON field instruction. Allows the macro or command designated by text in field-argument-1 to be run. text in field-argument-2 designates the text or graphic to appear as the \"button\" that is selected to run the macro or command. MergeFieldFieldInstruction Represents a strongly-typed MERGEFIELD field instruction. Retrieves the name of a data field designated by text in field-argument within the merge characters in a mail merge main document. When the main document is merged with the selected data source, information from the specified data field is inserted in place of the merge field. The name designated by text shall match exactly the field name in the header record. Syntax: MERGEFIELD field-argument [ switch ] Field Value: The name of a data field designated by text in field-argument. Switches: \\b field-argument: The text in this switch's field-argument specifies the text to be inserted before the MERGEFIELD field if the field is not blank \\f field-argument: The text in this switch's field-argument specifies the text to be inserted after the MERGEFIELD field if the field is not blank \\m: Specifies that the MERGEFIELD field is a mapped field \\v: Enables character conversion for vertical formatting MergeRecFieldInstruction Represents a strongly-typed MERGEREC field instruction. Results in «MERGEREC». Use this in a mail merge to print the number of the corresponding merged data record in each resulting merged document. The number reflects the sequential order of the data records that were selected and possibly sorted for merging with the active main document. It does not indicate the actual order of the records as they occur in the physical data source. ##### Note A personnel database might contain thousands of records. However, to send a form letter to employees who've reached their five-year anniversary with your company, you'd select as your data source only the records of those five-year employees, a much smaller set of records. To print a physical record number, you must include a record number field in the data source and insert the corresponding merge field in the main document. MergeSeqFieldInstruction Represents a strongly-typed MERGESEQ field instruction. Counts the number of data records that were successfully merged with the main document. Merged records are numbered starting from 1 each time documents are merged. ##### Note The number might be different from the value inserted by the MERGEREC field. NextFieldInstruction Represents a strongly-typed NEXT field instruction. Merges the next data record into the current resulting merged document, rather than starting a new merged document. ##### Note This field is used when setting up a mailing label and envelope main document during a mail merge. NextIfFieldInstruction Represents a strongly-typed NEXTIF field instruction. Compares the values designated by Expression-1 and Expression-2 using the operator designated by Operator. If the comparison is true, the next data record is merged into the current merge document. (Merge fields that follow the NEXTIF in the main document are replaced by values from the next data record rather than the current data record.) If the comparison is false, the next data record is merged into a new merge document. Operator can be any one of the six relational and equality operators. Fields shall NOT be used in a footnote, an endnote, annotation, a header, a footer, or a data source. A NEXTIF field shall NOT be nested within any field. NoteRefFieldInstruction Represents a strongly-typed NOTEREF field instruction. Inserts the mark of the footnote or endnote that is marked by the bookmark specified by text in field-argument. NumCharsFieldInstruction Represents a strongly-typed NUMCHARS field instruction. Retrieves the number of characters in the current document, as recorded in the <Characters> element of the Application-Defined File Properties part. NumPagesFieldInstruction Represents a strongly-typed NUMPAGES field instruction. Retrieves the number of pages in the current document, as recorded in the <Pages> element of the Application-Defined File Properties part. NumWordsFieldInstruction Represents a strongly-typed NUMWORDS field instruction. Retrieves the number of words in the current document, as recorded in the <Words> element of the Application-Defined File Properties part. PageFieldInstruction Represents a strongly-typed PAGE field instruction. Retrieves the number of the current page. PageRefFieldInstruction Represents a strongly-typed PAGEREF field instruction. Inserts the number of the page containing the bookmark specified by text in field-argument for a cross-reference. PrintDateFieldInstruction Represents a strongly-typed PRINTDATE field instruction. Retrieves the date and time on which the document was last printed, as recorded in the <LastPrinted> element of the Core File Properties part. By default, the Gregorian calendar is used and the date-and-time-formatting-switch used is implementation-defined. For a document that has never been printed, the date and time corresponds to 0000-00-00T00:00:00 local time and each text component is XXX. PrintFieldInstruction Represents a strongly-typed PRINT field instruction. Sends the printer-specific control code characters specified by text in field-argument to the selected printer. QuoteFieldInstruction Represents a strongly-typed QUOTE field instruction. Retrieves the text specified by text in field-argument. This text can include any other fields except AUTONUM, AUTONUMLGL, AUTONUMOUT, and SYMBOL. RdFieldInstruction Represents a strongly-typed RD field instruction. field-argument identifies a file to include when creating a table of contents, a table of authorities, or an index using a TOC, TOA, or INDEX field. RD fields that reference a series of files must be in the same order as the files in the final document. If the location includes a long file name containing spaces, field-argument shall contain delimiting quotes. A single backslash in the file path shall be preceded directly by a backslash. For a complex field implementation in XML the optional field-value storage is not needed. RefFieldInstruction Represents a strongly-typed REF field instruction. Inserts the text or graphics represented by the bookmark specified by text in field-argument. The bookmark shall be defined in the current document. RefInstruction Represents a strongly-typed REF field. RevNumFieldInstruction Represents a strongly-typed REVNUM field instruction. Retrieves the document's revision number (which indicates the number of times the document has been saved), as recorded in the <Revision> element of the Core File Properties part. SaveDateFieldInstruction Represents a strongly-typed SAVEDATE field instruction. Retrieves the date and time on which the document was last saved, as recorded in the <DateModified> element of the Core File Properties part. By default, the Gregorian calendar is used and the date-and-time-formatting-switch used is implementation-defined. For a document that has never been saved, the date and time corresponds to 0000-00-00T00:00:00 local time and each text component is XXX. SectionFieldInstruction Represents a strongly-typed SECTION field instruction. Retrieves the number of the current section. SectionPagesFieldInstruction Represents a strongly-typed SECTIONPAGES field instruction. Retrieves the number of the current page within the current section. SeqFieldInstruction Represents a strongly-typed SEQ field instruction. Sequentially numbers chapters, tables, figures, and other user-defined lists of items in a document. If an item and its SEQ field are added, deleted, or moved, updating the remaining SEQ fields in the document reflects the new sequence. A SEQ field in a header, footer, annotation, or footnote shall NOT affect the sequence numbering that results from SEQ fields in the document text. Syntax: SEQ identifier [ field-argument ] [ switches ] The identifier is the name assigned to the series of items that are to be numbered (e.g., Equation, Figure, Table, Thing). The identifier shall start with a Latin letter and shall consist of no more than 40 Latin letters, Arabic digits, and underscores. The optional field-argument specifies a bookmark name that refers to an item elsewhere in the document rather than in the current location. Field Value: The next number in the sequence. If no numeric-formatting-switch is present, * Arabic is used. Switches: \\c: Repeats the closest preceding sequence number (useful for inserting chapter numbers in headers or footers) \\h: Hides the field result unless a general-formatting-switch is also present (useful for cross-references) \\n: Inserts the next sequence number for the specified item (this is the default behavior) \\r field-argument: Resets the sequence number to the integer number specified by the field-argument \\s field-argument: Resets the sequence number to the built-in (integer) heading level specified by the field-argument SetFieldInstruction Represents a strongly-typed SET field instruction. Defines the bookmark name specified by field-argument-1 to represent the information specified by field-argument-2. SkipIfFieldInstruction Represents a strongly-typed SKIPIF field instruction. Compares the values designated by Expression-1 and Expression-2 using the operator designated by Operator. If the comparison is true, SKIPIF cancels the current merge document, moves to the next in the data source, and starts a new merge document. If the comparison is false, the current merge document is continued. Operator can be any one of the six relational and equality operators specified for operator (§2.16.3.3). StyleRefFieldInstruction Represents a strongly-typed STYLEREF field instruction. Inserts the nearest piece of text prior to this field that is formatted by the style whose name is specified by text in field-argument. The style can be a paragraph style or a character style. SubjectFieldInstruction Represents a strongly-typed SUBJECT field instruction. Retrieves, and optionally sets, the document's subject, as recorded in the <Subject> element of the Core File Properties part or, if field-argument is present, the subject specified by text in field-argument. Specifying a field-argument shall change <Subject> to text. SymbolFieldInstruction Represents a strongly-typed SYMBOL field instruction. Retrieves the character whose code point value is specified in decimal or hexadecimal (by using a leading 0x or 0X) by text in field-argument. The formatting switches over ride any formatting applied directly to the result. The XML generated for a complex field implementation shall not have the optional field value stored. TaFieldInstruction Represents a strongly-typed TA field instruction. Defines the text and page number for a table of authorities entry, which is used by a TOA field. TcFieldInstruction Represents a strongly-typed TC field instruction. Defines the text and page number for a table of contents (including a table of figures) entry, which is used by a TOC field. The text of the entry is text in field-argument. TemplateFieldInstruction Represents a strongly-typed TEMPLATE field instruction. Retrieves the disk file name of the template used by the current document. TimeFieldInstruction Represents a strongly-typed TIME field instruction. Retrieves the current date and time. The Gregorian calendar is always used. By default, the date-and-time-formatting-switch used is implementation-defined. TitleFieldInstruction Represents a strongly-typed TITLE field instruction. Retrieves, and optionally sets, the document's title, as recorded in the <Title> element of the Core File Properties part or, if field-argument is present, the name specified by text in field-argument. Specifying a field-argument shall change <Title> to text. ToaFieldInstruction Represents a strongly-typed TOA field instruction. Builds a table of authorities (that is, a list of the references in a legal document, such as references to cases, statutes, and rules, along with the numbers of the pages on which the references appear) using the entries specified by TA fields. TocFieldInstruction Represents a strongly-typed TOC field instruction. Builds a table of contents (which can also be a table of figures) using the entries specified by TC fields, their heading levels, and specified styles, and inserts that table at this place in the document. Each table entry is a separate paragraph. TypedFieldInstruction A base for all strongly-typed field instructions. TypedFieldInstructionFactory Factory for creating strongly-typed field instructions. UserAddressFieldInstruction Represents a strongly-typed USERADDRESS field instruction. Retrieves the current user's postal address or, if field-argument is present, the address specified by text in field-argument. Specifying a field-argument shall not change the address of the current user. UserInitialsFieldInstruction Represents a strongly-typed USERINITIALS field instruction. Retrieves the current user's initials or, if field-argument is present, the initials specified by text in field-argument. Specifying a field-argument shall not change the initials of the current user. UserNameFieldInstruction Represents a strongly-typed USERNAME field instruction. Retrieves the current user's name or, if field-argument is present, the name specified by text in field-argument. Specifying a field-argument shall not change the name of the current user. XeFieldInstruction Represents a strongly-typed XE field instruction. Defines the text and page number for an index entry, which is used by an INDEX field. The text of the entry is specified in the field argument. To indicate a subentry, the main entry text and the subentry text shall be separated by a colon (:). Subentries beyond one level are permitted. Enums EqArrayAlignment Represents alignment options for array columns. EqIntegralSymbol Represents integral symbol types. EqOverlayAlignment Represents overlay alignment options. EqPrimarySwitch Represents the primary switch types for EQ field instructions. GoToButtonTargetType Represents the type of location target for a GOTOBUTTON field. InfoType Represents the information categories available for INFO field instructions. LinkFieldInstruction.LinkFormattingMode Enum for the formatting mode of a LINK field."
  },
  "api/OpenLanguage.WordprocessingML.FieldInstruction.html": {
    "href": "api/OpenLanguage.WordprocessingML.FieldInstruction.html",
    "title": "Namespace OpenLanguage.WordprocessingML.FieldInstruction | OpenLanguage Documentation",
    "summary": "Namespace OpenLanguage.WordprocessingML.FieldInstruction Classes FieldArgument Represents a single argument for a field instruction. An argument has a type and a value. The value can be a string or another FieldInstruction for nested fields. FieldInstruction Represents a fully parsed Word field instruction, including its main instruction keyword (e.g., \"MERGEFIELD\") and a list of its arguments. This object can be modified and recompiled back into a field code string. FieldLexer A lexer for tokenizing Word field codes into a stream of tokens. FieldParser A recursive descent parser that builds a structured FieldInstruction object from a stream of tokens provided by the FieldLexer. FieldToken Represents a token extracted from a field code string by the lexer. FrameTargetUtils NamespaceDeclaration Represents a validated XML namespace declaration in the format xmlns:prefix=\"URI\". PostalData Represents postal data that must be either a 5-digit or 9-digit ZIP code. Structs PtsMeasurementValue<T> Represents a measurement value in points, bounded from -31 to 31. Used for positioning and spacing measurements in field instructions. Enums CountryRegion Represents ISO 3166-1 country and region codes for international addressing. CountryRegionInclusion Represents country/region inclusion options for ADDRESSBLOCK field instructions. DatabaseOptimizationFlag Represents optimization flag options for DATABASE field instructions. DatabaseTableAttributes Represents table formatting attributes for DATABASE field instructions. Values can be combined using bitwise OR operations. DatabaseTableFormat Represents table format options for DATABASE field instructions. Word supports 42 pre-formatted table styles numbered 0-41. DocumentPropertyCategory Represents document property categories used in DOCPROPERTY field instructions. FacingIdentificationMarkType Represents the type of Facing Identification Mark (FIM) for BARCODE field instructions. FieldArgumentType Defines the type of a parsed argument within a field instruction. FieldTokenType Defines the types of tokens that can be found in a Word field code. FrameTarget NameFormat Represents the format options for names in mail merge fields like GREETINGLINE and ADDRESSBLOCK."
  },
  "api/OpenLanguage.WordprocessingML.LanguageIdentifier.html": {
    "href": "api/OpenLanguage.WordprocessingML.LanguageIdentifier.html",
    "title": "Enum LanguageIdentifier | OpenLanguage Documentation",
    "summary": "Enum LanguageIdentifier Namespace OpenLanguage.WordprocessingML Assembly OpenLanguage.dll Represents a language identifier for formatting based on Microsoft Windows LCID values. public enum LanguageIdentifier Fields Afrikaans = 1078 Albanian = 1052 Amharic = 1118 ArabicAlgeria = 5121 ArabicBahrain = 15361 ArabicEgypt = 3073 ArabicIraq = 2049 ArabicJordan = 11265 ArabicKuwait = 13313 ArabicLebanon = 12289 ArabicLibya = 4097 ArabicMorocco = 6145 ArabicOman = 8193 ArabicQatar = 16385 ArabicSaudiArabia = 1025 Arabic (Saudi Arabia) - LCID 1025. ArabicSyria = 10241 ArabicTunisia = 7169 ArabicUAE = 14337 ArabicYemen = 9217 Armenian = 1067 Assamese = 1101 AzeriCyrillic = 2092 AzeriLatin = 1068 Basque = 1069 Bengali = 1093 Bosnian = 5146 Bulgarian = 1026 Bulgarian (Bulgaria) - LCID 1026. Catalan = 1027 ChineseSimplified = 2052 Chinese (Simplified, PRC) - LCID 2052. ChineseSimplifiedSingapore = 4100 Chinese (Simplified, Singapore) - LCID 4100. ChineseTraditional = 1028 Chinese (Traditional, Taiwan) - LCID 1028. ChineseTraditionalHongKong = 3076 Chinese (Traditional, Hong Kong SAR) - LCID 3076. ChineseTraditionalMacao = 5124 Chinese (Traditional, Macao SAR) - LCID 5124. Croatian = 1050 Croatian (Croatia) - LCID 1050. Czech = 1029 Czech (Czech Republic) - LCID 1029. Danish = 1030 Danish (Denmark) - LCID 1030. DutchBelgium = 2067 Dutch (Belgium) - LCID 2067. DutchNetherlands = 1043 Dutch (Netherlands) - LCID 1043. EnglishAustralia = 3081 English (Australia) - LCID 3081. EnglishBelize = 10249 English (Belize) - LCID 10249. EnglishCanada = 4105 English (Canada) - LCID 4105. EnglishCaribbean = 9225 English (Caribbean) - LCID 9225. EnglishIndia = 16393 English (India) - LCID 16393. EnglishIreland = 6153 English (Ireland) - LCID 6153. EnglishJamaica = 8201 English (Jamaica) - LCID 8201. EnglishMalaysia = 17417 English (Malaysia) - LCID 17417. EnglishNewZealand = 5129 English (New Zealand) - LCID 5129. EnglishPhilippines = 13321 English (Philippines) - LCID 13321. EnglishSingapore = 18441 English (Singapore) - LCID 18441. EnglishSouthAfrica = 7177 English (South Africa) - LCID 7177. EnglishTrinidadTobago = 11273 English (Trinidad and Tobago) - LCID 11273. EnglishUK = 2057 English (United Kingdom) - LCID 2057. EnglishUS = 1033 English (United States) - LCID 1033. EnglishZimbabwe = 12297 English (Zimbabwe) - LCID 12297. Estonian = 1061 Estonian (Estonia) - LCID 1061. Farsi = 1065 Filipino = 1124 Finnish = 1035 Finnish (Finland) - LCID 1035. FrenchBelgium = 2060 French (Belgium) - LCID 2060. FrenchCanada = 3084 French (Canada) - LCID 3084. FrenchFrance = 1036 French (France) - LCID 1036. FrenchLuxembourg = 5132 French (Luxembourg) - LCID 5132. FrenchMonaco = 6156 French (Monaco) - LCID 6156. FrenchSwitzerland = 4108 French (Switzerland) - LCID 4108. Galician = 1110 Georgian = 1079 GermanAustria = 3079 German (Austria) - LCID 3079. GermanGermany = 1031 German (Germany) - LCID 1031. GermanLiechtenstein = 5127 German (Liechtenstein) - LCID 5127. GermanLuxembourg = 4103 German (Luxembourg) - LCID 4103. GermanSwitzerland = 2055 German (Switzerland) - LCID 2055. Greek = 1032 Greek (Greece) - LCID 1032. Gujarati = 1095 Hausa = 1128 Hebrew = 1037 Hebrew (Israel) - LCID 1037. Hindi = 1081 Hindi (India) - LCID 1081. Hungarian = 1038 Hungarian (Hungary) - LCID 1038. Icelandic = 1039 Igbo = 1136 Indonesian = 1057 Irish = 2108 ItalianItaly = 1040 Italian (Italy) - LCID 1040. ItalianSwitzerland = 2064 Italian (Switzerland) - LCID 2064. Japanese = 1041 Japanese (Japan) - LCID 1041. Kannada = 1099 Kashmiri = 1120 Kazakh = 1087 Khmer = 1107 Konkani = 1111 Korean = 1042 Korean (Korea) - LCID 1042. Kyrgyz = 1088 Lao = 1108 Latvian = 1062 Latvian (Latvia) - LCID 1062. Lithuanian = 1063 Lithuanian (Lithuania) - LCID 1063. Macedonian = 1071 Malay = 1086 Malayalam = 1100 Maltese = 1082 Maori = 1153 Marathi = 1102 Mongolian = 1104 Nepali = 1121 NorwegianBokmal = 1044 Norwegian (Bokmål, Norway) - LCID 1044. Oriya = 1096 Pashto = 1123 Polish = 1045 Polish (Poland) - LCID 1045. PortugueseBrazil = 1046 Portuguese (Brazil) - LCID 1046. PortuguesePortugal = 2070 Portuguese (Portugal) - LCID 2070. Punjabi = 1094 QuechuaBolivia = 1131 QuechuaEcuador = 2155 QuechuaPeru = 3179 Romanian = 1048 Romanian (Romania) - LCID 1048. Russian = 1049 Russian (Russia) - LCID 1049. Sami = 1083 Sanskrit = 1103 SerbianCyrillic = 3098 SerbianLatin = 2074 Sindhi = 1113 Sinhala = 1115 Slovak = 1051 Slovak (Slovakia) - LCID 1051. Slovenian = 1060 Slovenian (Slovenia) - LCID 1060. Somali = 1143 Sotho = 1072 SpanishArgentina = 11274 Spanish (Argentina) - LCID 11274. SpanishBolivia = 16394 Spanish (Bolivia) - LCID 16394. SpanishChile = 13322 Spanish (Chile) - LCID 13322. SpanishColombia = 9226 Spanish (Colombia) - LCID 9226. SpanishCostaRica = 5130 Spanish (Costa Rica) - LCID 5130. SpanishDominicanRepublic = 7178 Spanish (Dominican Republic) - LCID 7178. SpanishEcuador = 12298 Spanish (Ecuador) - LCID 12298. SpanishElSalvador = 17418 Spanish (El Salvador) - LCID 17418. SpanishGuatemala = 4106 Spanish (Guatemala) - LCID 4106. SpanishHonduras = 18442 Spanish (Honduras) - LCID 18442. SpanishMexico = 2058 Spanish (Mexico) - LCID 2058. SpanishNicaragua = 19466 Spanish (Nicaragua) - LCID 19466. SpanishPanama = 6154 Spanish (Panama) - LCID 6154. SpanishParaguay = 15370 Spanish (Paraguay) - LCID 15370. SpanishPeru = 10250 Spanish (Peru) - LCID 10250. SpanishPuertoRico = 20490 Spanish (Puerto Rico) - LCID 20490. SpanishSpain = 3082 Spanish (Spain) - LCID 3082. SpanishUS = 21514 Spanish (United States) - LCID 21514. SpanishUruguay = 14346 Spanish (Uruguay) - LCID 14346. SpanishVenezuela = 8202 Spanish (Venezuela) - LCID 8202. Swahili = 1089 Swedish = 1053 Swedish (Sweden) - LCID 1053. SwedishFinland = 2077 Syriac = 1114 Tajik = 1064 Tamil = 1097 Tatar = 1092 Telugu = 1098 Thai = 1054 Thai (Thailand) - LCID 1054. Tigrinya = 1139 Tswana = 1074 Turkish = 1055 Turkish (Turkey) - LCID 1055. Turkmen = 1090 Ukrainian = 1058 Ukrainian (Ukraine) - LCID 1058. Urdu = 1056 UzbekCyrillic = 2115 UzbekLatin = 1091 Vietnamese = 1066 Vietnamese (Vietnam) - LCID 1066. Welsh = 1106 Xhosa = 1076 Yoruba = 1130 Zulu = 1077"
  },
  "api/OpenLanguage.WordprocessingML.MergeField.AddressBlockTemplate.html": {
    "href": "api/OpenLanguage.WordprocessingML.MergeField.AddressBlockTemplate.html",
    "title": "Class AddressBlockTemplate | OpenLanguage Documentation",
    "summary": "Class AddressBlockTemplate Namespace OpenLanguage.WordprocessingML.MergeField Assembly OpenLanguage.dll Represents a parsed address block template with merge field placeholders. public class AddressBlockTemplate Inheritance object AddressBlockTemplate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Placeholders The parsed merge field placeholders found in the template. public List<MergeFieldPlaceholder> Placeholders { get; set; } Property Value List<MergeFieldPlaceholder> ProcessedTemplate The template text with placeholders replaced by format specifiers. public string ProcessedTemplate { get; set; } Property Value string RawTemplate The raw template text. public string RawTemplate { get; set; } Property Value string"
  },
  "api/OpenLanguage.WordprocessingML.MergeField.MergeFieldLexer.html": {
    "href": "api/OpenLanguage.WordprocessingML.MergeField.MergeFieldLexer.html",
    "title": "Class MergeFieldLexer | OpenLanguage Documentation",
    "summary": "Class MergeFieldLexer Namespace OpenLanguage.WordprocessingML.MergeField Assembly OpenLanguage.dll Lexer for parsing merge field placeholders and mail merge templates using character-by-character state machine parsing. public static class MergeFieldLexer Inheritance object MergeFieldLexer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ContainsValidMergeFields(string?) Validates whether a string contains valid merge field syntax using character-by-character parsing. public static bool ContainsValidMergeFields(string? text) Parameters text string The text to validate. Returns bool True if the text contains valid merge field placeholders. ExtractMergeFieldNames(string) Extracts all merge field names from a text string using character-by-character parsing. public static List<string> ExtractMergeFieldNames(string text) Parameters text string The text to search for merge fields. Returns List<string> A list of unique merge field names found in the text. FormatMergeField(string?) Formats a merge field name with the standard merge field delimiters. public static string FormatMergeField(string? fieldName) Parameters fieldName string The field name to format. Returns string The formatted merge field placeholder. FormatMergeFieldWithSwitch(string?, string?) Formats a merge field name with a formatting switch. public static string FormatMergeFieldWithSwitch(string? fieldName, string? formattingSwitch) Parameters fieldName string The field name to format. formattingSwitch string The formatting switch to apply. Returns string The formatted merge field placeholder with switch. Parse(string) Parses a merge field placeholder string (alias for ParseMergeField). public static MergeFieldPlaceholder Parse(string placeholderText) Parameters placeholderText string The placeholder text to parse. Returns MergeFieldPlaceholder A parsed MergeFieldPlaceholder object. ParseAddressBlockTemplate(string?) Parses an address block template containing merge field placeholders using character-by-character state machine parsing. public static AddressBlockTemplate ParseAddressBlockTemplate(string? templateText) Parameters templateText string The template text to parse. Returns AddressBlockTemplate A parsed AddressBlockTemplate object. ParseLanguageId(string?) Parses a language ID using the comprehensive LanguageIdentifier enum. public static LanguageIdentifier? ParseLanguageId(string? languageIdText) Parameters languageIdText string The language ID text to parse. Returns LanguageIdentifier? The parsed LanguageIdentifier, or null if invalid. ParseMergeField(string?) Parses a merge field placeholder string using character-by-character state machine parsing. public static MergeFieldPlaceholder ParseMergeField(string? placeholderText) Parameters placeholderText string The placeholder text to parse (e.g., \"«FirstName»\"). Returns MergeFieldPlaceholder A parsed MergeFieldPlaceholder object. Reconstruct(MergeFieldPlaceholder) Reconstructs a merge field placeholder from a MergeFieldPlaceholder object. public static string Reconstruct(MergeFieldPlaceholder placeholder) Parameters placeholder MergeFieldPlaceholder The placeholder object to reconstruct. Returns string The reconstructed placeholder text."
  },
  "api/OpenLanguage.WordprocessingML.MergeField.MergeFieldPlaceholder.html": {
    "href": "api/OpenLanguage.WordprocessingML.MergeField.MergeFieldPlaceholder.html",
    "title": "Class MergeFieldPlaceholder | OpenLanguage Documentation",
    "summary": "Class MergeFieldPlaceholder Namespace OpenLanguage.WordprocessingML.MergeField Assembly OpenLanguage.dll Represents a parsed merge field placeholder used in mail merge operations. public class MergeFieldPlaceholder Inheritance object MergeFieldPlaceholder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties FieldName The field name (without merge field delimiters). public string FieldName { get; set; } Property Value string FormattingSwitch Any formatting or switches applied to the merge field. public string? FormattingSwitch { get; set; } Property Value string IsValid Whether this placeholder has valid merge field syntax. public bool IsValid { get; } Property Value bool RawText The raw placeholder text including delimiters. public string RawText { get; set; } Property Value string"
  },
  "api/OpenLanguage.WordprocessingML.MergeField.html": {
    "href": "api/OpenLanguage.WordprocessingML.MergeField.html",
    "title": "Namespace OpenLanguage.WordprocessingML.MergeField | OpenLanguage Documentation",
    "summary": "Namespace OpenLanguage.WordprocessingML.MergeField Classes AddressBlockTemplate Represents a parsed address block template with merge field placeholders. MergeFieldLexer Lexer for parsing merge field placeholders and mail merge templates using character-by-character state machine parsing. MergeFieldPlaceholder Represents a parsed merge field placeholder used in mail merge operations."
  },
  "api/OpenLanguage.WordprocessingML.Operators.ComparisonOperator.html": {
    "href": "api/OpenLanguage.WordprocessingML.Operators.ComparisonOperator.html",
    "title": "Enum ComparisonOperator | OpenLanguage Documentation",
    "summary": "Enum ComparisonOperator Namespace OpenLanguage.WordprocessingML.Operators Assembly OpenLanguage.dll Enumeration of comparison operators. public enum ComparisonOperator : sbyte Fields Equal = 1 GreaterThan = -4 GreaterThanOrEqual = -3 LessThan = 2 LessThanOrEqual = 3 NotEqual = -2"
  },
  "api/OpenLanguage.WordprocessingML.Operators.ComparisonOperatorExtensions.html": {
    "href": "api/OpenLanguage.WordprocessingML.Operators.ComparisonOperatorExtensions.html",
    "title": "Class ComparisonOperatorExtensions | OpenLanguage Documentation",
    "summary": "Class ComparisonOperatorExtensions Namespace OpenLanguage.WordprocessingML.Operators Assembly OpenLanguage.dll public static class ComparisonOperatorExtensions Inheritance object ComparisonOperatorExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods OperatorToString(ComparisonOperator) Converts a ComparisonOperator enum value to its string representation. public static string OperatorToString(ComparisonOperator op) Parameters op ComparisonOperator The operator to convert. Returns string The string representation of the operator. ParseOperator(string?) Parses a string representation of a comparison operator into the corresponding enum value. public static ComparisonOperator ParseOperator(string? operatorString) Parameters operatorString string The string representation of the operator. Returns ComparisonOperator The corresponding ComparisonOperator enum value. Exceptions ArgumentException Thrown if the operator string is not recognized."
  },
  "api/OpenLanguage.WordprocessingML.Operators.html": {
    "href": "api/OpenLanguage.WordprocessingML.Operators.html",
    "title": "Namespace OpenLanguage.WordprocessingML.Operators | OpenLanguage Documentation",
    "summary": "Namespace OpenLanguage.WordprocessingML.Operators Classes ComparisonOperatorExtensions Enums ComparisonOperator Enumeration of comparison operators."
  },
  "api/OpenLanguage.WordprocessingML.html": {
    "href": "api/OpenLanguage.WordprocessingML.html",
    "title": "Namespace OpenLanguage.WordprocessingML | OpenLanguage Documentation",
    "summary": "Namespace OpenLanguage.WordprocessingML Enums LanguageIdentifier Represents a language identifier for formatting based on Microsoft Windows LCID values."
  },
  "api/QUT.GplexBuffers.CodePageHandling.html": {
    "href": "api/QUT.GplexBuffers.CodePageHandling.html",
    "title": "Class CodePageHandling | OpenLanguage Documentation",
    "summary": "Class CodePageHandling Namespace QUT.GplexBuffers Assembly OpenLanguage.dll public static class CodePageHandling Inheritance object CodePageHandling Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetCodePage(string) public static int GetCodePage(string option) Parameters option string Returns int"
  },
  "api/QUT.GplexBuffers.html": {
    "href": "api/QUT.GplexBuffers.html",
    "title": "Namespace QUT.GplexBuffers | OpenLanguage Documentation",
    "summary": "Namespace QUT.GplexBuffers Classes CodePageHandling"
  },
  "api/QUT.Gppg.AbstractScanner-2.html": {
    "href": "api/QUT.Gppg.AbstractScanner-2.html",
    "title": "Class AbstractScanner<TValue, TSpan> | OpenLanguage Documentation",
    "summary": "Class AbstractScanner<TValue, TSpan> Namespace QUT.Gppg Assembly OpenLanguage.dll Abstract scanner class that GPPG expects its scanners to extend. public abstract class AbstractScanner<TValue, TSpan> where TSpan : IMerge<TSpan> Type Parameters TValue Semantic value type YYSTYPE TSpan Source location type YYLTYPE Inheritance object AbstractScanner<TValue, TSpan> Derived ScanBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields yylval Lexical value optionally set by the scanner. The value is of the %YYSTYPE type declared in the parser spec. public TValue yylval Field Value TValue Properties yylloc Current scanner location property. The value is of the type declared by %YYLTYPE in the parser specification. public virtual TSpan yylloc { get; set; } Property Value TSpan Methods yyerror(string, params object[]) Traditional error reporting provided by LEX-like scanners to their YACC-like clients. public virtual void yyerror(string format, params object[] args) Parameters format string Message format string args object[] Optional array of args yylex() Main call point for LEX-like scanners. Returns an int corresponding to the token recognized by the scanner. public abstract int yylex() Returns int An int corresponding to the token"
  },
  "api/QUT.Gppg.IMerge-1.html": {
    "href": "api/QUT.Gppg.IMerge-1.html",
    "title": "Interface IMerge<TSpan> | OpenLanguage Documentation",
    "summary": "Interface IMerge<TSpan> Namespace QUT.Gppg Assembly OpenLanguage.dll Classes implementing this interface must supply a method that merges two location objects to return a new object of the same type. GPPG-generated parsers have the default location action equivalent to \"@$ = @1.Merge(@N);\" where N is the right-hand-side length of the production. public interface IMerge<TSpan> Type Parameters TSpan The Location type Methods Merge(TSpan) Interface method that creates a location object from the current and last object. Typically used to create a location object extending from the start of the @1 object to the end of the @N object. TSpan Merge(TSpan last) Parameters last TSpan The lexically last object to merge Returns TSpan The merged location object"
  },
  "api/QUT.Gppg.LexLocation.html": {
    "href": "api/QUT.Gppg.LexLocation.html",
    "title": "Class LexLocation | OpenLanguage Documentation",
    "summary": "Class LexLocation Namespace QUT.Gppg Assembly OpenLanguage.dll This is the default class that carries location information from the scanner to the parser. If you don't declare \"%YYLTYPE Foo\" the parser will expect to deal with this type. public class LexLocation : IMerge<LexLocation> Inheritance object LexLocation Implements IMerge<LexLocation> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors LexLocation() Default no-arg constructor. public LexLocation() LexLocation(int, int, int, int) Constructor for text-span with given start and end. public LexLocation(int sl, int sc, int el, int ec) Parameters sl int start line sc int start column el int end line ec int end column Properties EndColumn The column of the first character beyond the end of the text span. public int EndColumn { get; } Property Value int EndLine The line on which the text span ends. public int EndLine { get; } Property Value int StartColumn The column at which the text span starts. public int StartColumn { get; } Property Value int StartLine The line at which the text span starts. public int StartLine { get; } Property Value int Methods Merge(LexLocation) Create a text location which spans from the start of \"this\" to the end of the argument \"last\" public LexLocation Merge(LexLocation last) Parameters last LexLocation The last location in the result span Returns LexLocation The merged span"
  },
  "api/QUT.Gppg.PushdownPrefixState-1.html": {
    "href": "api/QUT.Gppg.PushdownPrefixState-1.html",
    "title": "Class PushdownPrefixState<T> | OpenLanguage Documentation",
    "summary": "Class PushdownPrefixState<T> Namespace QUT.Gppg Assembly OpenLanguage.dll Stack utility for the shift-reduce parser. GPPG parsers have three instances: (1) The parser state stack, T = QUT.Gppg.State, (2) The semantic value stack, T = TValue, (3) The location stack, T = TSpan. public class PushdownPrefixState<T> Type Parameters T Inheritance object PushdownPrefixState<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Depth The current depth of the stack. public int Depth { get; } Property Value int this[int] Indexer for values of the stack below the top. public T this[int index] { get; } Parameters index int index of the element, starting from the bottom Property Value T the selected element"
  },
  "api/QUT.Gppg.Rule.html": {
    "href": "api/QUT.Gppg.Rule.html",
    "title": "Class Rule | OpenLanguage Documentation",
    "summary": "Class Rule Namespace QUT.Gppg Assembly OpenLanguage.dll Rule representation at runtime. public class Rule Inheritance object Rule Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Rule(int, int[]) Rule constructor. This holds the ordinal of the left hand side symbol, and the list of right hand side symbols, in lexical order. public Rule(int left, int[] right) Parameters left int The LHS non-terminal right int[] The RHS symbols, in lexical order"
  },
  "api/QUT.Gppg.ShiftReduceParser-2.html": {
    "href": "api/QUT.Gppg.ShiftReduceParser-2.html",
    "title": "Class ShiftReduceParser<TValue, TSpan> | OpenLanguage Documentation",
    "summary": "Class ShiftReduceParser<TValue, TSpan> Namespace QUT.Gppg Assembly OpenLanguage.dll Abstract class for GPPG shift-reduce parsers. Parsers generated by GPPG derive from this base class, overriding the abstract Initialize() and DoAction() methods. public abstract class ShiftReduceParser<TValue, TSpan> where TSpan : IMerge<TSpan>, new() Type Parameters TValue Semantic value type TSpan Location type Inheritance object ShiftReduceParser<TValue, TSpan> Derived Parser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ShiftReduceParser(AbstractScanner<TValue, TSpan>) Constructor for base class protected ShiftReduceParser(AbstractScanner<TValue, TSpan> scanner) Parameters scanner AbstractScanner<TValue, TSpan> Scanner instance for this parser Fields CurrentLocationSpan The current value of the \"@$\" symbolic variable in the parser protected TSpan CurrentLocationSpan Field Value TSpan CurrentSemanticValue The current value of the \"$$\" symbolic variable in the parser protected TValue CurrentSemanticValue Field Value TValue NextToken protected int NextToken Field Value int Properties LocationStack The stack of location value (YYLTYPE) varlues. protected PushdownPrefixState<TSpan> LocationStack { get; } Property Value PushdownPrefixState<TSpan> Scanner The abstract scanner for this parser. protected AbstractScanner<TValue, TSpan> Scanner { get; set; } Property Value AbstractScanner<TValue, TSpan> ValueStack The stack of semantic value (YYSTYPE) values. protected PushdownPrefixState<TValue> ValueStack { get; } Property Value PushdownPrefixState<TValue> YYRecovering Check if parser in error recovery state. protected bool YYRecovering { get; } Property Value bool Methods AddState(int, State) OBSOLETE FOR VERSION 1.4.0 Method used by derived types to insert new state instances in the \"states\" array. protected void AddState(int stateNumber, State state) Parameters stateNumber int index of the state state State data for the state CharToString(char) Return text representation of argument character protected static string CharToString(char input) Parameters input char The character to convert Returns string String representation of the character DoAction(int) Execute the selected action from array. Must be overriden in derived classes. protected abstract void DoAction(int actionNumber) Parameters actionNumber int Index of the action to perform InitNonTerminals(string[]) Initialization method to allow derived classes to insert the non-terminal symbol names into this base class. protected void InitNonTerminals(string[] names) Parameters names string[] Non-terminal symbol names InitRules(Rule[]) Initialization method to allow derived classes to insert the rule list into this base class. protected void InitRules(Rule[] rules) Parameters rules Rule[] The array of Rule objects InitSpecialTokens(int, int) Initialization method to allow derived classes to insert the special value for the error and EOF tokens. protected void InitSpecialTokens(int err, int end) Parameters err int The error state ordinal end int The EOF stat ordinal InitStateTable(int) OBSOLETE FOR VERSION 1.4.0 protected void InitStateTable(int size) Parameters size int InitStates(State[]) Initialization method to allow derived classes to insert the states table into this base class. protected void InitStates(State[] states) Parameters states State[] The pre-initialized states table Initialize() Abstract base method. ShiftReduceParser calls this to initialize the base class data structures. Concrete parser classes must override this method. protected abstract void Initialize() Parse() Main entry point of the Shift-Reduce Parser. public bool Parse() Returns bool True if parse succeeds, else false for unrecoverable errors TerminalToString(int) Abstract state class naming terminal symbols. This is overridden by derived classes with the name (or alias) to be used in error messages. protected abstract string TerminalToString(int terminal) Parameters terminal int The terminal ordinal Returns string YYAbort() Force parser to terminate, returning \"false\" protected static void YYAbort() YYAccept() Force parser to terminate, returning \"true\" protected static void YYAccept() YYError() Force parser to terminate, returning \"false\" if error recovery fails. protected static void YYError() yyclearin() Traditional YACC method. Discards the next input token. protected void yyclearin() yyerrok() Tradional YACC method. Clear the \"recovering\" flag. protected void yyerrok()"
  },
  "api/QUT.Gppg.State.html": {
    "href": "api/QUT.Gppg.State.html",
    "title": "Class State | OpenLanguage Documentation",
    "summary": "Class State Namespace QUT.Gppg Assembly OpenLanguage.dll Encapsulated state for the parser. Opaque to users, visible to the tool-generated code. public class State Inheritance object State Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors State(int) Set the default action for this state. public State(int defaultAction) Parameters defaultAction int Ordinal of the default action State(int, int[]) Set the default action and the state transition table. public State(int defaultAction, int[] goToList) Parameters defaultAction int The default action goToList int[] Transitions from this state State(int[]) Action data for this state. Pairs of elements of the action array associate action ordinals with each of those symbols that have actions in the current state. public State(int[] actions) Parameters actions int[] The action array State(int[], int[]) State transition data for this state. Pairs of elements of the goto array associate symbol ordinals with next state indices. The actions array is passed to another constructor. public State(int[] actions, int[] goToList) Parameters actions int[] The action list goToList int[] Next state data Fields number The number of states in the automaton. public int number Field Value int"
  },
  "api/QUT.Gppg.html": {
    "href": "api/QUT.Gppg.html",
    "title": "Namespace QUT.Gppg | OpenLanguage Documentation",
    "summary": "Namespace QUT.Gppg Classes AbstractScanner<TValue, TSpan> Abstract scanner class that GPPG expects its scanners to extend. LexLocation This is the default class that carries location information from the scanner to the parser. If you don't declare \"%YYLTYPE Foo\" the parser will expect to deal with this type. PushdownPrefixState<T> Stack utility for the shift-reduce parser. GPPG parsers have three instances: (1) The parser state stack, T = QUT.Gppg.State, (2) The semantic value stack, T = TValue, (3) The location stack, T = TSpan. Rule Rule representation at runtime. ShiftReduceParser<TValue, TSpan> Abstract class for GPPG shift-reduce parsers. Parsers generated by GPPG derive from this base class, overriding the abstract Initialize() and DoAction() methods. State Encapsulated state for the parser. Opaque to users, visible to the tool-generated code. Interfaces IMerge<TSpan> Classes implementing this interface must supply a method that merges two location objects to return a new object of the same type. GPPG-generated parsers have the default location action equivalent to \"@$ = @1.Merge(@N);\" where N is the right-hand-side length of the production."
  },
  "docs/README.html": {
    "href": "docs/README.html",
    "title": "OpenLanguage Documentation | OpenLanguage Documentation",
    "summary": "OpenLanguage Documentation Welcome to the documentation for OpenLanguage, a .NET library for parsing Microsoft Office document languages using GPLEX/GPPG-generated lexers and parsers. Table of Contents Core Library Documentation SpreadsheetML Formula Processing - SpreadsheetML formula parsing with AST generation WordprocessingML Field Instructions - WordprocessingML field instruction parsing Typed Field Instructions - Strongly-typed field instruction factory MergeField Processing - Mail merge field lexing Expression Processing - Expression lexical analysis Development Build System - CMake build system with .y/.lex processing Grammar Files - Working with YACC and LEX grammar files Testing - Unit test documentation API Reference The API reference is generated from XML documentation comments in the source code. Quick Navigation Component Description Documentation Formula Parser SpreadsheetML formula AST parsing Formula.md Field Instructions WordprocessingML field instruction parsing FieldInstruction.md Typed Instructions Strongly-typed field factory Typed.md MergeField Lexer Mail merge field lexing MergeField.md Expression Lexer Expression lexical analysis Expression.md Project Structure OpenLanguage consists of: SpreadsheetML.Formula: SpreadsheetML formula parser using GPLEX/GPPG Formula.cs: Main API for parsing formulas into ASTs FormulaParser.cs: Static parser methods Lang/Lex/formula.lex: Lexical grammar for SpreadsheetML formulas Lang/Parse/formula.y: YACC grammar for SpreadsheetML formulas WordprocessingML.FieldInstruction: WordprocessingML field instruction parser FieldInstruction.cs: Core field instruction and argument classes Typed/: Factory and base classes for strongly-typed instructions Parser.cs & Lexer.cs: Parser components Other WordprocessingML Components: MergeField, Expression: Additional lexer components Build System The project uses CMake to process .y and .lex files with the C preprocessor (cpp) before compilation. Generated code is placed in the Generated/ directory. Testing Unit tests are located in OpenLanguage.Test/ and use xUnit framework. Tests cover: Formula parsing with various combinations of pattern cases Field instruction creation and manipulation Argument type validation AST reconstruction and round-trip testing Support \uD83D\uDCD6 View source code for implementation details \uD83D\uDC1B Issue Tracker \uD83D\uDCE7 Contact the maintainers through GitHub"
  },
  "docs/api/SpreadsheetML/Formula/Formula.html": {
    "href": "docs/api/SpreadsheetML/Formula/Formula.html",
    "title": "Formula Processing | OpenLanguage Documentation",
    "summary": "Formula Processing The OpenLanguage.SpreadsheetML.Formula namespace provides Excel formula parsing capabilities using GPLEX/GPPG-generated lexer and parser. Overview The Formula component offers: Excel Formula Parsing: Parse Excel formulas into Abstract Syntax Trees (AST) Grammar-Based Parsing: Uses GPLEX lexer (.lex) and GPPG parser (.y) for robust parsing AST Manipulation: Access and modify parsed formula structures programmatically Formula Reconstruction: Convert ASTs back to valid Excel formula strings Core Classes FormulaParser Static class providing the main entry point for formula parsing operations. using OpenLanguage.SpreadsheetML.Formula; // Parse a formula var formula = FormulaParser.Parse(\"=SUM(A1:A10) * 2\"); // Try parsing with error handling var maybeFormula = FormulaParser.TryParse(\"=INVALID_SYNTAX(\"); Methods Parse(string formulaText) - Parses a formula string and returns a Formula object TryParse(string formulaText) - Attempts to parse, returns null on failure Parser Implementation The formula parser is built using GPLEX/GPPG tools: Grammar Files Lexer: SpreadsheetML/Formula/Lang/Lex/formula.lex - Tokenizes formula text Parser: SpreadsheetML/Formula/Lang/Parse/formula.y - Defines grammar rules Supported Syntax Based on the test cases, the parser supports: Literals and Identifiers Numbers: 123 Strings: \"hello\" Booleans: TRUE, FALSE Errors: #VALUE! Cell references: A1 Named ranges: MyNamedRange Binary Operations Arithmetic: 1+2*3, (1+2)*3, 10/2*5 Power: 2^3^2 (right-associative) Range operations: A1:B2 C3:D4 (intersection), A1:B2,C3:D4 (union) Unary Operations Negative: -5 Positive: +A1 Applied to ranges: -A1:B2 Function Calls Basic: SUM(1, 2, 3) Nested: IF(A1>B1, \"Yes\", \"No\") With references: VLOOKUP(A1, Sheet2!A:B, 2, FALSE) Array Literals Row arrays: {1,2,3} Column arrays: {1;2;3} 2D arrays: {\"a\",\"b\";\"c\",\"d\"} Advanced References Table references: Table1[@Column1] Example Usage // Parse various formula types var literal = FormulaParser.Parse(\"123\"); var arithmetic = FormulaParser.Parse(\"1+2*3\"); var function = FormulaParser.Parse(\"SUM(A1:A10)\"); var complex = FormulaParser.Parse(\"IF(A1>B1, \"Yes\", \"No\")\"); Error Handling The parser throws InvalidOperationException for syntax errors: try { var formula = FormulaParser.Parse(\"=SUM(1,\"); // Missing closing parenthesis } catch (InvalidOperationException ex) { Console.WriteLine($\"Parse error: {ex.Message}\"); } // Or use TryParse for error handling var maybeFormula = FormulaParser.TryParse(\"=INVALID_SYNTAX(\"); if (maybeFormula == null) { Console.WriteLine(\"Parse failed\"); } AST Manipulation The parsed AST can be modified and reconstructed: var formula = FormulaParser.Parse(\"=A1+B1\"); // Access the AST var astRoot = formula; // Modify the AST (implementation-specific) // ... // Reconstruct the formula var reconstructed = formula.ToString(); // Uses AstRoot.ToString() Build Process The grammar files are processed during build: formula.lex is processed by GPLEX to generate the lexer formula.y is processed by GPPG to generate the parser Generated code is placed in the Generated/ directory The build system uses CMake to orchestrate this process Examples Basic Usage using OpenLanguage.SpreadsheetML.Formula; // Parse a simple formula var formula = FormulaParser.Parse(\"=1+2*3\"); Console.WriteLine($\"Reconstructed: {formula.ToString()}\"); // Parse with functions var funcFormula = FormulaParser.Parse(\"=SUM(A1:A10)\"); Console.WriteLine($\"Function formula: {funcFormula}\"); Error Handling // Handle parse errors gracefully var result = FormulaParser.TryParse(\"=SUM(1,\"); // Invalid syntax if (result != null) { Console.WriteLine(\"Parsed successfully\"); } else { Console.WriteLine(\"Parse failed - check syntax\"); } Working with ASTs var formula = FormulaParser.Parse(\"=A1+B1\"); // The AstRoot property gives access to the parsed tree structure var root = formula; // Convert back to string representation var reconstructed = root.ToString(); Console.WriteLine($\"Reconstructed: {reconstructed}\"); Technical Details Uses GPLEX for lexical analysis and GPPG for parsing Generates C# code from .lex and .y grammar files Supports Excel formula syntax including functions, operators, and references AST nodes implement ToString() for formula reconstruction Thread-safe static parsing methods"
  },
  "docs/api/WordprocessingML/Expression/Expression.html": {
    "href": "docs/api/WordprocessingML/Expression/Expression.html",
    "title": "Expression Lexer | OpenLanguage Documentation",
    "summary": "Expression Lexer The OpenLanguage.WordprocessingML.Expression namespace provides lexical analysis for parsing expressions using character-by-character state machine parsing. Overview The Expression lexer provides: Expression Tokenization: Parse expressions into individual tokens Binary Expression Parsing: Extract operands and operators from simple comparisons Multiple Token Types: Support for strings, numbers, operators, identifiers, merge fields State Machine Parsing: Character-by-character lexical analysis Core Classes ExpressionLexer Static class providing lexical analysis methods: using OpenLanguage.WordprocessingML.Expression; // Parse an expression into tokens var tokens = ExpressionLexer.TokenizeExpression(\"Amount > 100\"); foreach (var token in tokens) { Console.WriteLine($\"{token.Type}: {token.Value}\"); } // Output: // Identifier: Amount // Whitespace: // Operator: > // Whitespace: // Number: 100 Expression Represents a parsed expression with tokens and binary components: public class Expression { public string RawText { get; set; } // Original expression text public List<ExpressionToken> Tokens { get; set; } // Parsed tokens public string? LeftOperand { get; set; } // Left side of binary expression public ComparisonOperator? Operator { get; set; } // Comparison operator public string? RightOperand { get; set; } // Right side of binary expression // Constructors for different creation scenarios public Expression() public Expression(string rawText) public Expression(string leftOperand, ComparisonOperator op, string rightOperand) } ExpressionToken Represents a single token within an expression: public class ExpressionToken { public ExpressionTokenType Type { get; set; } // Type of token public string Value { get; set; } // Token value public int Position { get; set; } // Position in source text } Token Types The lexer recognizes these token types: ExpressionTokenType Enumeration Type Description Example String Quoted string literal \"Hello\" Number Numeric literal 123, -45.6 MergeField Merge field reference «FirstName» Operator Comparison operator =, <>, >= Identifier Variable or field name Amount Whitespace Whitespace characters , \\t Unknown Unrecognized token @, # Comparison Operators The lexer supports these comparison operators from the ComparisonOperator enum: Operator ComparisonOperator Value Description = Equal Equal <> NotEqual Not equal < LessThan Less than <= LessThanOrEqual Less than or equal > GreaterThan Greater than >= GreaterThanOrEqual Greater than or equal Parsing Methods Expression Parsing // Parse a complete expression var expression = ExpressionLexer.ParseExpression(\"CustomerType = \"Premium\"\"); Console.WriteLine($\"Raw text: {expression.RawText}\"); Console.WriteLine($\"Left operand: {expression.LeftOperand}\"); // \"CustomerType\" Console.WriteLine($\"Operator: {expression.Operator}\"); // Equal Console.WriteLine($\"Right operand: {expression.RightOperand}\"); // \"\"Premium\"\" // Check if expression contains merge fields Console.WriteLine($\"Has merge fields: {expression.ContainsMergeFields}\"); // Check if expression is a literal value Console.WriteLine($\"Is literal: {expression.IsLiteral}\"); Token-Level Parsing // Get individual tokens from an expression var tokens = ExpressionLexer.TokenizeExpression(\"Amount >= «MinimumAmount»\"); foreach (var token in tokens) { Console.WriteLine($\"Type: {token.Type}, Value: '{token.Value}', Position: {token.Position}\"); } // Output: // Type: Identifier, Value: 'Amount', Position: 0 // Type: Whitespace, Value: ' ', Position: 6 // Type: Operator, Value: '>=', Position: 7 // Type: Whitespace, Value: ' ', Position: 9 // Type: MergeField, Value: '«MinimumAmount»', Position: 10 Expression Creation Creating Expressions Programmatically // Create from raw text var expr1 = new Expression(\"Status = \"Active\"\"); // Create binary expression directly var expr2 = new Expression(\"Amount\", ComparisonOperator.GreaterThan, \"100\"); Console.WriteLine(expr2.ToString()); // \"Amount > 100\" // Create empty expression and set properties var expr3 = new Expression(); expr3.RawText = \"Count <= 50\"; expr3.LeftOperand = \"Count\"; expr3.Operator = ComparisonOperator.LessThanOrEqual; expr3.RightOperand = \"50\"; String Tokenization // Parse quoted strings with escape sequences var tokens = ExpressionLexer.TokenizeExpression(@\"\"\"Hello \"\"World\"\" Test\"\"\"); // Handles escaped quotes within strings // Parse numbers including negative values var numTokens = ExpressionLexer.TokenizeExpression(\"-123.45\"); // Recognizes negative numbers as single tokens // Parse merge fields var mergeTokens = ExpressionLexer.TokenizeExpression(\"«FirstName» + «LastName»\"); // Tokenizes merge field delimiters properly Operator Parsing Operator Utilities // Parse operator strings var op1 = ExpressionLexer.ParseOperator(\">=\"); Console.WriteLine(op1); // GreaterThanOrEqual // Convert operators back to strings var opString = ExpressionLexer.OperatorToString(ComparisonOperator.NotEqual); Console.WriteLine(opString); // \"<>\" // Handle invalid operators try { var invalidOp = ExpressionLexer.ParseOperator(\"??\"); } catch (ArgumentException ex) { Console.WriteLine($\"Error: {ex.Message}\"); // Unknown comparison operator } State Machine Implementation The lexer uses character-by-character state machine parsing: Internal Lexer States internal enum LexerState { Initial, // Starting state InString, // Inside quoted string InNumber, // Parsing numeric literal InIdentifier, // Parsing identifier/variable name InOperator, // Parsing comparison operator InMergeField, // Inside merge field delimiters InWhitespace // Processing whitespace } Parsing Process Initial: Determines token type based on first character InString: Handles quoted strings with escape sequence support InNumber: Parses numeric literals including negative numbers and decimals InIdentifier: Extracts variable names and identifiers InOperator: Recognizes single and multi-character operators InMergeField: Processes merge field delimiters (« ») InWhitespace: Groups consecutive whitespace characters Usage Examples Complete Expression Analysis using OpenLanguage.WordprocessingML.Expression; string expressionText = @\"«CustomerType» = \"\"Premium\"\" AND Amount >= 1000.00\"; // Parse the full expression var expression = ExpressionLexer.ParseExpression(expressionText); Console.WriteLine($\"Original: {expression.RawText}\"); Console.WriteLine($\"Tokens: {expression.Tokens.Count}\"); // Examine each token foreach (var token in expression.Tokens) { if (token.Type != ExpressionTokenType.Whitespace) { Console.WriteLine($\" {token.Type}: '{token.Value}' at position {token.Position}\"); } } // For simple binary expressions, components are extracted if (expression.LeftOperand != null) { Console.WriteLine($\"Binary expression detected:\"); Console.WriteLine($\" Left: {expression.LeftOperand}\"); Console.WriteLine($\" Operator: {expression.Operator}\"); Console.WriteLine($\" Right: {expression.RightOperand}\"); } Expression Properties // Create expressions and check their properties var mergeExpr = new Expression(\"«Amount» > 100\"); Console.WriteLine($\"Contains merge fields: {mergeExpr.ContainsMergeFields}\"); // True var literalExpr = new Expression(\"42\"); Console.WriteLine($\"Is literal: {literalExpr.IsLiteral}\"); // True var binaryExpr = new Expression(\"Status\", ComparisonOperator.Equal, \"Active\"); Console.WriteLine($\"Binary expression: {binaryExpr.ToString()}\"); // \"Status = Active\" Technical Details Character-by-Character Parsing: Robust state machine implementation Escape Sequence Support: Handles escaped quotes in string literals Multi-Character Operators: Recognizes <=, >=, <> operators Merge Field Support: Parses « » delimited merge fields Binary Expression Extraction: Automatically extracts operands from simple comparisons Position Tracking: Maintains character positions for error reporting Limitations Only lexical analysis - no expression evaluation Limited to comparison operators (no arithmetic operators) Binary expression extraction works only for simple cases No validation of merge field syntax within delimiters String escape sequences support is basic (quotes and backslashes only) See Also Field Instructions - Generic field instruction handling MergeField Lexer - Merge field specific parsing"
  },
  "docs/api/WordprocessingML/FieldInstruction/FieldInstruction.html": {
    "href": "docs/api/WordprocessingML/FieldInstruction/FieldInstruction.html",
    "title": "Field Instructions | OpenLanguage Documentation",
    "summary": "Field Instructions The OpenLanguage.WordprocessingML.FieldInstruction namespace provides classes for creating and manipulating Microsoft Word field instructions. Overview This component provides: Field Instruction Creation: Build field instructions programmatically Argument Handling: Support for different argument types (identifiers, strings, switches, nested fields) Field Reconstruction: Convert field objects back to field code strings Type Safety: Strongly-typed field instruction factory Core Classes FieldInstruction Represents a Word field instruction with its keyword and arguments. using OpenLanguage.WordprocessingML.FieldInstruction; // Create a field instruction var instruction = new FieldInstruction(\"MERGEFIELD\"); instruction.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"FirstName\")); instruction.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\* Upper\")); // Reconstruct field code Console.WriteLine(instruction.ToString()); // \"MERGEFIELD FirstName \\* Upper\" Properties and Methods string Instruction - The field keyword (e.g., \"MERGEFIELD\", \"REF\", \"IF\") List<FieldArgument> Arguments - List of field arguments that can be modified ToString() - Reconstructs the field code string FieldArgument Represents a single argument within a field instruction. public class FieldArgument { public FieldArgumentType Type { get; } // Type of argument public object Value { get; } // Argument value public override string ToString() // Reconstructs argument as field code } Argument Types The FieldArgumentType enumeration defines the types of arguments that can be used in field instructions: FieldArgumentType Values Type Description Example Usage Identifier Simple identifier or bookmark name new FieldArgument(FieldArgumentType.Identifier, \"BookmarkName\") StringLiteral Quoted string literal new FieldArgument(FieldArgumentType.StringLiteral, \"text\") Switch Field switch (begins with backslash) new FieldArgument(FieldArgumentType.Switch, \"\\* Upper\") NestedField Complete nested field instruction new FieldArgument(FieldArgumentType.NestedField, fieldObj) Text Plain text value new FieldArgument(FieldArgumentType.Text, \"plain text\") Number Numeric value new FieldArgument(FieldArgumentType.Number, \"123\") String Literal Handling String literals are automatically quoted when reconstructed: var stringArg = new FieldArgument(FieldArgumentType.StringLiteral, \"Hello World\"); Console.WriteLine(stringArg.ToString()); // \"Hello World\" // Quotes in strings are escaped var quotedArg = new FieldArgument(FieldArgumentType.StringLiteral, \"Say \"Hello\"\"); Console.WriteLine(quotedArg.ToString()); // \"Say \"Hello\"\" Usage Examples Creating Field Instructions using OpenLanguage.WordprocessingML.FieldInstruction; // Create a simple field var pageField = new FieldInstruction(\"PAGE\"); Console.WriteLine(pageField.ToString()); // \"PAGE\" // Create a field with arguments var mergeField = new FieldInstruction(\"MERGEFIELD\"); mergeField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"FirstName\")); mergeField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\* MERGEFORMAT\")); Console.WriteLine(mergeField.ToString()); // \"MERGEFIELD FirstName \\* MERGEFORMAT\" Working with Different Argument Types // Identifier argument var refField = new FieldInstruction(\"REF\"); refField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"MyBookmark\")); // String literal argument var hyperlinkField = new FieldInstruction(\"HYPERLINK\"); hyperlinkField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"http://example.com\")); hyperlinkField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"Link Text\")); // Switch argument var dateField = new FieldInstruction(\"DATE\"); dateField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\@ \"MM/dd/yyyy\"\")); Console.WriteLine(hyperlinkField.ToString()); // \"HYPERLINK \"http://example.com\" \"Link Text\"\" Nested Field Instructions // Create a nested field var innerField = new FieldInstruction(\"DATE\"); var outerField = new FieldInstruction(\"IF\"); outerField.Arguments.Add(new FieldArgument(FieldArgumentType.NestedField, innerField)); outerField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"Today\")); outerField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"No Date\")); Console.WriteLine(outerField.ToString()); // \"IF { DATE } \"Today\" \"No Date\"\" Modifying Field Instructions // Create and modify a field var field = new FieldInstruction(\"MERGEFIELD\"); field.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"LastName\")); // Add a formatting switch field.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\* Upper\")); // Change the instruction type field.Instruction = \"DOCVARIABLE\"; Console.WriteLine(field.ToString()); // \"DOCVARIABLE LastName \\* Upper\" Helper Classes and Enumerations The namespace includes several helper classes and enumerations for working with field instructions: Language Support // Language identifiers for formatting var languageId = LanguageIdentifier.EnglishUS; // 1033 var frenchId = LanguageIdentifier.FrenchFrance; // 1036 // Country/region codes var country = CountryRegion.UnitedStates; var inclusion = CountryRegionInclusion.IncludeIfDifferent; Measurement Values // Points measurement (bounded -31 to 31) var measurement = new PtsMeasurementValue(15); Console.WriteLine(measurement.ToString()); // \"15\" // Implicit conversion int value = measurement; // 15 PtsMeasurementValue newMeasurement = 20; Postal Data Validation // ZIP code validation var zipCode = new PostalData(\"12345\"); // Valid 5-digit ZIP var zipPlus4 = new PostalData(\"12345-6789\"); // Valid 9-digit ZIP // Implicit conversion string zip = zipCode; // \"12345\" PostalData newZip = \"54321\"; Namespace Declarations // XML namespace validation var ns = new NamespaceDeclaration(\"xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\"\"); Console.WriteLine(ns.Prefix); // \"w\" Console.WriteLine(ns.Uri); // \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\" Error Handling Field instruction construction validates arguments: try { // This will throw ArgumentException var invalidField = new FieldInstruction(\"\"); } catch (ArgumentException ex) { Console.WriteLine($\"Invalid instruction: {ex.Message}\"); } try { // This will throw ArgumentOutOfRangeException var invalidMeasurement = new PtsMeasurementValue(50); } catch (ArgumentOutOfRangeException ex) { Console.WriteLine($\"Invalid measurement: {ex.Message}\"); } Integration with Typed Instructions Field instructions can be converted to strongly-typed versions using the TypedFieldInstructionFactory: using OpenLanguage.WordprocessingML.FieldInstruction.Typed; // Create generic field instruction var genericField = new FieldInstruction(\"REF\"); genericField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"MyBookmark\")); // Convert to strongly-typed (if supported) var typedField = TypedFieldInstructionFactory.Create(genericField); if (typedField is RefFieldInstruction refInstruction) { Console.WriteLine($\"Bookmark: {refInstruction.BookmarkName}\"); } Supported Field Types for Typed Instructions The TypedFieldInstructionFactory supports over 60 field instruction types, providing strongly-typed access to field-specific properties and switches: Document Information Fields AUTHOR → AuthorFieldInstruction COMMENTS → CommentsFieldInstruction CREATEDATE → CreateDateFieldInstruction EDITTIME → EditTimeFieldInstruction FILENAME → FileNameFieldInstruction FILESIZE → FileSizeFieldInstruction KEYWORDS → KeywordsFieldInstruction LASTSAVEDBY → LastSavedByFieldInstruction NUMCHARS → NumCharsFieldInstruction NUMPAGES → NumPagesFieldInstruction NUMWORDS → NumWordsFieldInstruction REVNUM → RevNumFieldInstruction SAVEDATE → SaveDateFieldInstruction SUBJECT → SubjectFieldInstruction TEMPLATE → TemplateFieldInstruction TITLE → TitleFieldInstruction Date and Time Fields DATE → DateFieldInstruction PRINTDATE → PrintDateFieldInstruction TIME → TimeFieldInstruction Mail Merge Fields ADDRESSBLOCK → AddressBlockFieldInstruction GREETINGLINE → GreetingLineFieldInstruction MERGEFIELD → MergeFieldFieldInstruction MERGEREC → MergeRecFieldInstruction MERGESEQ → MergeSeqFieldInstruction NEXT → NextFieldInstruction NEXTIF → NextIfFieldInstruction SKIPIF → SkipIfFieldInstruction Reference Fields REF → RefFieldInstruction PAGEREF → PageRefFieldInstruction STYLEREF → StyleRefFieldInstruction NOTEREF → NoteRefFieldInstruction Page and Section Fields PAGE → PageFieldInstruction SECTION → SectionFieldInstruction SECTIONPAGES → SectionPagesFieldInstruction Numbering Fields AUTONUM → AutoNumFieldInstruction AUTONUMLGL → AutoNumLglFieldInstruction AUTONUMOUT → AutoNumOutFieldInstruction LISTNUM → ListNumFieldInstruction SEQ → SeqFieldInstruction Index and Table Fields INDEX → IndexFieldInstruction TOC → TocFieldInstruction TOA → ToaFieldInstruction XE → XeFieldInstruction TA → TaFieldInstruction TC → TcFieldInstruction Form Fields FORMCHECKBOX → FormCheckBoxFieldInstruction FORMDROPDOWN → FormDropDownFieldInstruction FORMTEXT → FormTextFieldInstruction User Information Fields USERNAME → UserNameFieldInstruction USERINITIALS → UserInitialsFieldInstruction USERADDRESS → UserAddressFieldInstruction Interactive Fields ASK → AskFieldInstruction FILLIN → FillInFieldInstruction Button Fields GOTOBUTTON → GoToButtonFieldInstruction MACROBUTTON → MacroButtonFieldInstruction Advanced Fields DATABASE → DatabaseFieldInstruction EQ → EqFieldInstruction HYPERLINK → HyperlinkFieldInstruction QUOTE → QuoteFieldInstruction Conditional Fields IF → IfFieldInstruction COMPARE → CompareFieldInstruction Other Fields ADVANCE → AdvanceFieldInstruction AUTOTEXT → AutoTextFieldInstruction AUTOTEXTLIST → AutoTextListFieldInstruction BARCODE → BarcodeFieldInstruction BIBLIOGRAPHY → BibliographyFieldInstruction CITATION → CitationFieldInstruction DOCPROPERTY → DocPropertyFieldInstruction DOCVARIABLE → DocVariableFieldInstruction INCLUDEPICTURE → IncludePictureFieldInstruction INCLUDETEXT → IncludeTextFieldInstruction INFO → InfoFieldInstruction LINK → LinkFieldInstruction PRINT → PrintFieldInstruction RD → RdFieldInstruction SET → SetFieldInstruction SYMBOL → SymbolFieldInstruction Factory Usage Examples // Mail merge field with formatting var mergeField = new FieldInstruction(\"MERGEFIELD\"); mergeField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"FirstName\")); mergeField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\* Upper\")); var typedMerge = TypedFieldInstructionFactory.Create(mergeField) as MergeFieldFieldInstruction; if (typedMerge != null) { Console.WriteLine($\"Field Name: {typedMerge.FieldName}\"); Console.WriteLine($\"Text Format: {typedMerge.TextFormat}\"); } // Date field with custom format var dateField = new FieldInstruction(\"DATE\"); dateField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\@ \"MMMM d, yyyy\"\")); var typedDate = TypedFieldInstructionFactory.Create(dateField) as DateFieldInstruction; if (typedDate != null) { Console.WriteLine($\"Date Format: {typedDate.DateFormat}\"); } // Hyperlink field var hyperlinkField = new FieldInstruction(\"HYPERLINK\"); hyperlinkField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"http://example.com\")); hyperlinkField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\o \"Tooltip text\"\")); var typedHyperlink = TypedFieldInstructionFactory.Create(hyperlinkField) as HyperlinkFieldInstruction; if (typedHyperlink != null) { Console.WriteLine($\"URL: {typedHyperlink.Url}\"); Console.WriteLine($\"Screen Tip: {typedHyperlink.ScreenTip}\"); } Advanced Usage Patterns Field Instruction Parsing from Text The library provides robust parsing capabilities for field codes: // Parse complex nested fields var complexField = \"IF { MERGEFIELD Amount } > { QUOTE 1000 } \"Large Order\" \"Standard Order\"\"; var instruction = FieldInstructionParser.Parse(complexField); Console.WriteLine($\"Instruction: {instruction.Instruction}\"); // \"IF\" Console.WriteLine($\"Arguments: {instruction.Arguments.Count}\"); // Number of parsed arguments // Access nested fields foreach (var arg in instruction.Arguments) { if (arg.Type == FieldArgumentType.NestedField && arg.Value is FieldInstruction nested) { Console.WriteLine($\"Nested: {nested.Instruction} - {nested.Arguments.Count} args\"); } } Dynamic Field Construction Build field instructions programmatically based on runtime conditions: public FieldInstruction CreateConditionalMergeField(string fieldName, string condition, string trueValue, string falseValue) { var ifField = new FieldInstruction(\"IF\"); // Create nested MERGEFIELD var mergeField = new FieldInstruction(\"MERGEFIELD\"); mergeField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, fieldName)); // Add arguments to IF field ifField.Arguments.Add(new FieldArgument(FieldArgumentType.NestedField, mergeField)); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.Text, condition)); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, trueValue)); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, falseValue)); return ifField; } // Usage var conditionalField = CreateConditionalMergeField(\"Status\", \"> 5\", \"Active\", \"Inactive\"); Console.WriteLine(conditionalField.ToString()); // \"IF { MERGEFIELD Status } > 5 \"Active\" \"Inactive\"\" Field Instruction Validation Implement validation for field-specific requirements: public bool ValidateFieldInstruction(FieldInstruction instruction) { switch (instruction.Instruction.ToUpperInvariant()) { case \"MERGEFIELD\": // MERGEFIELD requires at least one identifier argument return instruction.Arguments.Any(arg => arg.Type == FieldArgumentType.Identifier); case \"REF\": case \"PAGEREF\": // Reference fields require a bookmark name return instruction.Arguments.Any(arg => arg.Type == FieldArgumentType.Identifier); case \"DATE\": case \"TIME\": // Date/time fields can have format switches var hasValidFormat = true; foreach (var arg in instruction.Arguments.Where(a => a.Type == FieldArgumentType.Switch)) { if (arg.Value.ToString().StartsWith(\"\\@\")) { // Validate date format syntax here hasValidFormat = ValidateDateFormat(arg.Value.ToString()); } } return hasValidFormat; default: return true; // Unknown fields are considered valid } } private bool ValidateDateFormat(string formatSwitch) { // Extract format string and validate // Implementation would check for valid date/time format patterns return !string.IsNullOrEmpty(formatSwitch); } Field Instruction Transformation Transform field instructions for different document contexts: public FieldInstruction TransformForMailMerge(FieldInstruction original) { // Clone the original instruction var transformed = new FieldInstruction(original.Instruction); foreach (var arg in original.Arguments) { var newArg = arg; // Transform specific argument types if (arg.Type == FieldArgumentType.Identifier) { // Prefix field names for mail merge context var fieldName = arg.Value.ToString(); newArg = new FieldArgument(FieldArgumentType.Identifier, $\"MailMerge_{fieldName}\"); } else if (arg.Type == FieldArgumentType.NestedField && arg.Value is FieldInstruction nestedField) { // Recursively transform nested fields newArg = new FieldArgument(FieldArgumentType.NestedField, TransformForMailMerge(nestedField)); } transformed.Arguments.Add(newArg); } return transformed; } Batch Field Processing Process multiple field instructions efficiently: public class FieldInstructionProcessor { private readonly Dictionary<string, Func<FieldInstruction, string>> _processors; public FieldInstructionProcessor() { _processors = new Dictionary<string, Func<FieldInstruction, string>> { [\"MERGEFIELD\"] = ProcessMergeField, [\"DATE\"] = ProcessDateField, [\"REF\"] = ProcessRefField, [\"HYPERLINK\"] = ProcessHyperlinkField }; } public List<string> ProcessFields(IEnumerable<FieldInstruction> fields) { var results = new List<string>(); foreach (var field in fields) { if (_processors.TryGetValue(field.Instruction.ToUpperInvariant(), out var processor)) { results.Add(processor(field)); } else { results.Add($\"Unsupported field: {field.Instruction}\"); } } return results; } private string ProcessMergeField(FieldInstruction field) { var typedField = TypedFieldInstructionFactory.Create(field) as MergeFieldFieldInstruction; return typedField != null ? $\"Merge field for: {typedField.FieldName}\" : \"Invalid merge field\"; } private string ProcessDateField(FieldInstruction field) { var typedField = TypedFieldInstructionFactory.Create(field) as DateFieldInstruction; return typedField != null ? $\"Date field with format: {typedField.DateFormat ?? \"default\"}\" : \"Invalid date field\"; } // Additional processors... private string ProcessRefField(FieldInstruction field) => \"Reference field processed\"; private string ProcessHyperlinkField(FieldInstruction field) => \"Hyperlink field processed\"; } Field Instruction Serialization Serialize field instructions for storage or transmission: public class FieldInstructionSerializer { public string SerializeToJson(FieldInstruction instruction) { var data = new { Instruction = instruction.Instruction, Arguments = instruction.Arguments.Select(arg => new { Type = arg.Type.ToString(), Value = arg.Type == FieldArgumentType.NestedField && arg.Value is FieldInstruction nested ? SerializeToJson(nested) : arg.Value.ToString() }).ToArray() }; return System.Text.Json.JsonSerializer.Serialize(data); } public FieldInstruction DeserializeFromJson(string json) { using var document = System.Text.Json.JsonDocument.Parse(json); var root = document.RootElement; var instruction = new FieldInstruction(root.GetProperty(\"Instruction\").GetString()); foreach (var argElement in root.GetProperty(\"Arguments\").EnumerateArray()) { var type = Enum.Parse<FieldArgumentType>(argElement.GetProperty(\"Type\").GetString()); var value = argElement.GetProperty(\"Value\").GetString(); if (type == FieldArgumentType.NestedField) { var nestedField = DeserializeFromJson(value); instruction.Arguments.Add(new FieldArgument(type, nestedField)); } else { instruction.Arguments.Add(new FieldArgument(type, value)); } } return instruction; } } Technical Details Field instructions are mutable objects that can be modified after creation Arguments list can be manipulated directly (add, remove, modify) ToString() method reconstructs valid field code syntax All string values are properly escaped when reconstructed Nested fields are formatted with proper brace spacing The component includes comprehensive enumerations for Word-specific values Field instruction parsing handles complex nested structures and quoted strings Memory-efficient argument storage using object references Thread-safe factory methods for typed instruction creation See Also Typed Field Instructions - Strongly-typed field instruction factory Testing Documentation - Unit test examples"
  },
  "docs/api/WordprocessingML/FieldInstruction/Typed.html": {
    "href": "docs/api/WordprocessingML/FieldInstruction/Typed.html",
    "title": "Typed Field Instructions | OpenLanguage Documentation",
    "summary": "Typed Field Instructions The OpenLanguage library provides strongly-typed field instruction classes for all major Microsoft Word field types, offering type-safe access to field-specific properties and switches. Overview The TypedFieldInstruction system converts generic field instructions into strongly-typed objects with specific properties for each field type. This is achieved through the TypedFieldInstructionFactory.Create() method, which supports over 60 different field instruction types. Basic Usage using OpenLanguage.WordprocessingML.FieldInstruction; using OpenLanguage.WordprocessingML.FieldInstruction.Typed; // Parse a generic field instruction var instruction = FieldInstructionParser.Parse(\"MERGEFIELD FirstName \\* Upper\"); // Convert to strongly-typed var typedInstruction = TypedFieldInstructionFactory.Create(instruction); // Check the type and use specific properties if (typedInstruction is MergeFieldFieldInstruction mergeField) { Console.WriteLine($\"Field Name: {mergeField.FieldName}\"); Console.WriteLine($\"Text Format: {mergeField.TextFormat}\"); } TypedFieldInstruction Base Class All typed field instructions inherit from the TypedFieldInstruction base class: public abstract class TypedFieldInstruction { public FieldInstruction Source { get; } public string Instruction { get; } public string Arguments { get; } public string Switches { get; } protected TypedFieldInstruction(FieldInstruction source) { } } Properties Source: The original FieldInstruction that this typed instruction was created from Instruction: The field instruction name (e.g., \"MERGEFIELD\", \"DATE\", etc.) Arguments: The field arguments portion of the instruction Switches: The switches portion of the instruction Supported Field Types The OpenLanguage library provides comprehensive support for Microsoft Word field instructions. Below is the complete list of supported field types: Document Information Fields AUTHOR Retrieves and optionally sets the document author's name. var author = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"AUTHOR \"John Doe\"\")) as AuthorFieldInstruction; Console.WriteLine($\"Author Name: {author?.AuthorName}\"); COMMENTS Retrieves the document's comments/description property. var comments = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"COMMENTS\")) as CommentsFieldInstruction; CREATEDATE Inserts the date and time the document was created. var createDate = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"CREATEDATE \\@ \"MM/dd/yyyy\"\")) as CreateDateFieldInstruction; Console.WriteLine($\"Date Format: {createDate?.DateFormat}\"); EDITTIME Inserts the total editing time for the document. var editTime = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"EDITTIME \\@ \"h:mm\"\")) as EditTimeFieldInstruction; FILENAME Retrieves the name of the current document as stored on disk. var fileName = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"FILENAME \\p\")) as FileNameFieldInstruction; Console.WriteLine($\"Include Path: {fileName?.IncludeFullPath}\"); FILESIZE Retrieves the file size of the current document. var fileSize = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"FILESIZE \\k\")) as FileSizeFieldInstruction; Console.WriteLine($\"Show in KB: {fileSize?.ShowInKilobytes}\"); KEYWORDS Retrieves the document's keywords property. var keywords = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"KEYWORDS\")) as KeywordsFieldInstruction; LASTSAVEDBY Retrieves the name of the user who last saved the document. var lastSavedBy = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"LASTSAVEDBY\")) as LastSavedByFieldInstruction; NUMCHARS Retrieves the number of characters in the document. var numChars = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"NUMCHARS\")) as NumCharsFieldInstruction; Console.WriteLine($\"Include Spaces: {numChars?.IncludeSpaces}\"); NUMPAGES Retrieves the total number of pages in the document. var numPages = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"NUMPAGES\")) as NumPagesFieldInstruction; NUMWORDS Retrieves the number of words in the document. var numWords = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"NUMWORDS\")) as NumWordsFieldInstruction; REVNUM Retrieves the document's revision number. var revNum = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"REVNUM\")) as RevNumFieldInstruction; SAVEDATE Inserts the date and time the document was last saved. var saveDate = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"SAVEDATE \\@ \"dddd, MMMM d, yyyy\"\")) as SaveDateFieldInstruction; SUBJECT Retrieves the document's subject property. var subject = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"SUBJECT\")) as SubjectFieldInstruction; Console.WriteLine($\"Subject Text: {subject?.SubjectText}\"); TEMPLATE Retrieves the name of the template attached to the document. var template = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"TEMPLATE\")) as TemplateFieldInstruction; Console.WriteLine($\"Include Path: {template?.IncludeFullPath}\"); TITLE Retrieves the document's title property. var title = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"TITLE\")) as TitleFieldInstruction; Console.WriteLine($\"Title Text: {title?.TitleText}\"); Date and Time Fields DATE Inserts the current date. var date = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"DATE \\@ \"MMMM d, yyyy\" \\h \\s\")) as DateFieldInstruction; Console.WriteLine($\"Date Format: {date?.DateFormat}\"); Console.WriteLine($\"Use Hijri Calendar: {date?.UseHijriCalendar}\"); Console.WriteLine($\"Use Saka Era Calendar: {date?.UseSakaEraCalendar}\"); PRINTDATE Inserts the date and time the document was last printed. var printDate = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"PRINTDATE \\@ \"h:mm am/pm\"\")) as PrintDateFieldInstruction; TIME Inserts the current time. var time = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"TIME \\@ \"h:mm am/pm\"\")) as TimeFieldInstruction; Console.WriteLine($\"Time Format: {time?.TimeFormat}\"); Mail Merge Fields ADDRESSBLOCK Inserts a formatted address block for mail merge. var addressBlock = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"ADDRESSBLOCK \\c 2 \\d \\e \"Test\" \\f \"Recipient\"\")) as AddressBlockFieldInstruction; Console.WriteLine($\"Country Format: {addressBlock?.CountryFormat}\"); Console.WriteLine($\"Exclude Country: {addressBlock?.ExcludeCountryOrRegion}\"); Console.WriteLine($\"Format Name: {addressBlock?.FormatNameAs}\"); GREETINGLINE Inserts a greeting line for mail merge. var greetingLine = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"GREETINGLINE \\f \"Dear\" \\e \"Sir or Madam\" \\d \":\"\")) as GreetingLineFieldInstruction; Console.WriteLine($\"Greeting Format: {greetingLine?.GreetingFormat}\"); Console.WriteLine($\"Default Greeting: {greetingLine?.DefaultGreeting}\"); MERGEFIELD Inserts data from a data source during mail merge. var mergeField = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"MERGEFIELD FirstName \\b \"(\" \\f \")\") as MergeFieldFieldInstruction; Console.WriteLine($\"Field Name: {mergeField?.FieldName}\"); Console.WriteLine($\"Text Before: {mergeField?.TextBefore}\"); Console.WriteLine($\"Text After: {mergeField?.TextAfter}\"); MERGEREC Inserts the current merge record number. var mergeRec = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"MERGEREC\")) as MergeRecFieldInstruction; MERGESEQ Inserts the merge sequence number. var mergeSeq = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"MERGESEQ\")) as MergeSeqFieldInstruction; NEXT Merges the next data record into the current merge document. var next = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"NEXT\")) as NextFieldInstruction; NEXTIF Merges the next data record if a condition is met. var nextIf = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"NEXTIF Amount > 1000\")) as NextIfFieldInstruction; Console.WriteLine($\"Field Name: {nextIf?.FieldName}\"); Console.WriteLine($\"Comparison Operator: {nextIf?.ComparisonOperator}\"); Console.WriteLine($\"Comparison Value: {nextIf?.ComparisonValue}\"); SKIPIF Skips the current data record if a condition is met. var skipIf = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"SKIPIF City = \"Seattle\"\")) as SkipIfFieldInstruction; Console.WriteLine($\"Field Name: {skipIf?.FieldName}\"); Console.WriteLine($\"Comparison Value: {skipIf?.ComparisonValue}\"); Reference Fields REF Creates a cross-reference to a bookmark. var refField = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"REF MyBookmark \\h \\p\")) as RefFieldInstruction; Console.WriteLine($\"Bookmark Name: {refField?.BookmarkName}\"); Console.WriteLine($\"Insert Hyperlink: {refField?.InsertHyperlink}\"); Console.WriteLine($\"Insert Position: {refField?.InsertRelativePosition}\"); PAGEREF Creates a cross-reference to the page number of a bookmark. var pageRef = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"PAGEREF MyBookmark \\h\")) as PageRefFieldInstruction; Console.WriteLine($\"Bookmark Name: {pageRef?.BookmarkName}\"); Console.WriteLine($\"Insert Hyperlink: {pageRef?.InsertHyperlink}\"); STYLEREF References text formatted with a specific style. var styleRef = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"STYLEREF \"Heading 1\" \\l \\n \\p \\r \\t \\w\")) as StyleRefFieldInstruction; Console.WriteLine($\"Style Name: {styleRef?.StyleName}\"); Console.WriteLine($\"Search From Bottom: {styleRef?.SearchFromBottom}\"); Console.WriteLine($\"Insert Paragraph Number: {styleRef?.InsertParagraphNumber}\"); NOTEREF Creates a cross-reference to a footnote or endnote. var noteRef = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"NOTEREF MyNote \\f \\h \\p\")) as NoteRefFieldInstruction; Console.WriteLine($\"Bookmark Name: {noteRef?.BookmarkName}\"); Console.WriteLine($\"Insert Footnote Reference: {noteRef?.InsertFootnoteReference}\"); Page and Section Fields PAGE Inserts the current page number. var page = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"PAGE \\* Arabic\")) as PageFieldInstruction; Console.WriteLine($\"Number Format: {page?.NumberFormat}\"); SECTION Inserts the current section number. var section = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"SECTION\")) as SectionFieldInstruction; SECTIONPAGES Inserts the total number of pages in the current section. var sectionPages = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"SECTIONPAGES\")) as SectionPagesFieldInstruction; Numbering Fields AUTONUM Automatically numbers paragraphs. var autoNum = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"AUTONUM \\s \"-\"\")) as AutoNumFieldInstruction; Console.WriteLine($\"Separator Character: {autoNum?.SeparatorCharacter}\"); AUTONUMLGL Provides legal-style paragraph numbering. var autoNumLgl = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"AUTONUMLGL \\e\")) as AutoNumLglFieldInstruction; Console.WriteLine($\"Remove Trailing Period: {autoNumLgl?.RemoveTrailingSeparator}\"); AUTONUMOUT Provides outline-style paragraph numbering. var autoNumOut = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"AUTONUMOUT\")) as AutoNumOutFieldInstruction; LISTNUM Inserts numbers for paragraphs in a list. var listNum = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"LISTNUM \"NumberDefault\" \\l 2 \\s 3\")) as ListNumFieldInstruction; Console.WriteLine($\"List Name: {listNum?.ListName}\"); Console.WriteLine($\"List Level: {listNum?.ListLevel}\"); Console.WriteLine($\"Starting Value: {listNum?.StartingValue}\"); SEQ Creates a sequence number. var seq = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"SEQ Figure \\c \\h \\n \\r 5 \\s 10\")) as SeqFieldInstruction; Console.WriteLine($\"Sequence Identifier: {seq?.SequenceIdentifier}\"); Console.WriteLine($\"Insert Next Number: {seq?.InsertNextNumber}\"); Console.WriteLine($\"Hide Field Result: {seq?.HideFieldResult}\"); Console.WriteLine($\"Reset Number: {seq?.ResetNumber}\"); Console.WriteLine($\"Reset Value: {seq?.ResetValue}\"); Console.WriteLine($\"Starting Value: {seq?.StartingValue}\"); Index and Table Fields INDEX Creates an index. var index = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"INDEX \\b MyBookmark \\c 3 \\d \"-\" \\e \"\" \\f A \\g \":\" \\h \"A\" \\k \":\" \\l \":\" \\p A-Z \\r \\s A \\z 1033\")) as IndexFieldInstruction; Console.WriteLine($\"Bookmark Name: {index?.BookmarkName}\"); Console.WriteLine($\"Number of Columns: {index?.NumberOfColumns}\"); Console.WriteLine($\"Sequence Name: {index?.SequenceName}\"); TOC Creates a table of contents. var toc = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"TOC \\o \"1-3\" \\h \\z \\u\")) as TocFieldInstruction; Console.WriteLine($\"Outline Levels: {toc?.OutlineLevels}\"); Console.WriteLine($\"Use Hyperlinks: {toc?.UseHyperlinks}\"); Console.WriteLine($\"Hide Tab Leader: {toc?.HideTabLeaderAndPageNumber}\"); Console.WriteLine($\"Use Outline Entries: {toc?.UseOutlineEntries}\"); TOA Creates a table of authorities. var toa = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"TOA \\c 1 \\b MyBookmark \\e \",\" \\f \\g \"\" \\l \",\" \\p \\s A\")) as ToaFieldInstruction; Console.WriteLine($\"Category: {toa?.Category}\"); Console.WriteLine($\"Bookmark Name: {toa?.BookmarkName}\"); Console.WriteLine($\"Entry Separator: {toa?.EntrySeparator}\"); XE Marks an index entry. var xe = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"XE \"Main Entry:Sub Entry\" \\b \\f A \\i \\r MyBookmark \\t \"See Also\"\")) as XeFieldInstruction; Console.WriteLine($\"Entry Text: {xe?.EntryText}\"); Console.WriteLine($\"Apply Bold: {xe?.ApplyBoldFormatting}\"); Console.WriteLine($\"Entry Type: {xe?.EntryType}\"); Console.WriteLine($\"Apply Italic: {xe?.ApplyItalicFormatting}\"); Console.WriteLine($\"Page Range Bookmark: {xe?.PageRangeBookmarkName}\"); Console.WriteLine($\"Cross Reference Text: {xe?.CrossReferenceText}\"); TA Marks a table of authorities entry. var ta = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"TA \\c 1 \\l \"Long Citation\" \\s \"Short Citation\" \\b \\i \\r MyBookmark\")) as TaFieldInstruction; Console.WriteLine($\"Category: {ta?.Category}\"); Console.WriteLine($\"Long Citation: {ta?.LongCitation}\"); Console.WriteLine($\"Short Citation: {ta?.ShortCitation}\"); Console.WriteLine($\"Apply Bold: {ta?.ApplyBoldFormatting}\"); Console.WriteLine($\"Apply Italic: {ta?.ApplyItalicFormatting}\"); Console.WriteLine($\"Page Range Bookmark: {ta?.PageRangeBookmarkName}\"); TC Marks a table of contents entry. var tc = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"TC \"Entry Text\" \\f C \\l 2 \\n\")) as TcFieldInstruction; Console.WriteLine($\"Entry Text: {tc?.EntryText}\"); Console.WriteLine($\"Entry Type: {tc?.EntryType}\"); Console.WriteLine($\"Level: {tc?.Level}\"); Console.WriteLine($\"No Page Number: {tc?.NoPageNumber}\"); Form Fields FORMCHECKBOX Creates a checkbox form field. var formCheckBox = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"FORMCHECKBOX \\default 1 \\size 12\")) as FormCheckBoxFieldInstruction; Console.WriteLine($\"Default State: {formCheckBox?.DefaultState}\"); Console.WriteLine($\"Size: {formCheckBox?.Size}\"); FORMDROPDOWN Creates a dropdown form field. var formDropDown = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"FORMDROPDOWN \\l \"Option1,Option2,Option3\"\")) as FormDropDownFieldInstruction; Console.WriteLine($\"Items: {formDropDown?.Items}\"); FORMTEXT Creates a text form field. var formText = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"FORMTEXT \\default \"Default Text\" \\maxlen 50 \\type 0 \\format \"UPPERCASE\"\")) as FormTextFieldInstruction; Console.WriteLine($\"Default Text: {formText?.DefaultText}\"); Console.WriteLine($\"Maximum Length: {formText?.MaximumLength}\"); Console.WriteLine($\"Text Type: {formText?.TextType}\"); Console.WriteLine($\"Text Format: {formText?.TextFormat}\"); User Information Fields USERNAME Retrieves the user's name. var userName = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"USERNAME\")) as UserNameFieldInstruction; USERINITIALS Retrieves the user's initials. var userInitials = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"USERINITIALS\")) as UserInitialsFieldInstruction; USERADDRESS Retrieves the user's address. var userAddress = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"USERADDRESS\")) as UserAddressFieldInstruction; Interactive Fields ASK Prompts the user to enter information and assigns it to a bookmark. var ask = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"ASK MyBookmark \"Enter your name:\" \\d \"Default Name\" \\o\")) as AskFieldInstruction; Console.WriteLine($\"Bookmark Name: {ask?.BookmarkName}\"); Console.WriteLine($\"Prompt Text: {ask?.PromptText}\"); Console.WriteLine($\"Default Response: {ask?.DefaultResponse}\"); Console.WriteLine($\"Prompt Once: {ask?.PromptOncePerMailMerge}\"); FILLIN Prompts the user to enter text. var fillIn = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"FILLIN \"Enter text:\" \\d \"Default\" \\o\")) as FillInFieldInstruction; Console.WriteLine($\"Prompt Text: {fillIn?.PromptText}\"); Console.WriteLine($\"Default Text: {fillIn?.DefaultText}\"); Console.WriteLine($\"Prompt Once: {fillIn?.PromptOncePerMailMerge}\"); Button Fields GOTOBUTTON Creates a button that jumps to a location in the document. var gotoButton = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"GOTOBUTTON MyBookmark \"Click here\"\")) as GoToButtonFieldInstruction; Console.WriteLine($\"Location: {gotoButton?.Location}\"); Console.WriteLine($\"Display Text: {gotoButton?.DisplayText}\"); MACROBUTTON Creates a button that runs a macro. var macroButton = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"MACROBUTTON MyMacro \"Run Macro\"\")) as MacroButtonFieldInstruction; Console.WriteLine($\"Macro Name: {macroButton?.MacroName}\"); Console.WriteLine($\"Display Text: {macroButton?.DisplayText}\"); Advanced Fields DATABASE Inserts data from an external database. var database = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"DATABASE \\d \"DSN=MyDB\" \\s \"SELECT * FROM Table\" \\c FirstRecord \\b Table \\l LastRecord \\f 1 \\t \\h\")) as DatabaseFieldInstruction; Console.WriteLine($\"Connection String: {database?.ConnectionString}\"); Console.WriteLine($\"SQL Statement: {database?.SqlStatement}\"); Console.WriteLine($\"Connect Once: {database?.ConnectOnce}\"); EQ Creates mathematical equations. var eq = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"EQ \\f(x,y) = x + y\")) as EqFieldInstruction; Console.WriteLine($\"Equation Text: {eq?.EquationText}\"); HYPERLINK Creates a hyperlink. var hyperlink = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"HYPERLINK \"http://example.com\" \\l \"bookmark\" \\m \"map\" \\n \\o \"tooltip\" \\t \"_blank\"\")) as HyperlinkFieldInstruction; Console.WriteLine($\"URL: {hyperlink?.Url}\"); Console.WriteLine($\"Bookmark: {hyperlink?.Bookmark}\"); Console.WriteLine($\"Image Map: {hyperlink?.ImageMapCoordinates}\"); Console.WriteLine($\"Create New Window: {hyperlink?.CreateNewWindow}\"); Console.WriteLine($\"Screen Tip: {hyperlink?.ScreenTip}\"); Console.WriteLine($\"Target Frame: {hyperlink?.TargetFrame}\"); QUOTE Includes literal text in the field result. var quote = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"QUOTE \"Literal text\"\")) as QuoteFieldInstruction; Console.WriteLine($\"Literal Text: {quote?.LiteralText}\"); Conditional Fields IF Performs conditional logic. var ifField = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"IF { MERGEFIELD Amount } > 1000 \"Large\" \"Small\"\")) as IfFieldInstruction; Console.WriteLine($\"Expression1: {ifField?.Expression1}\"); Console.WriteLine($\"Comparison Operator: {ifField?.ComparisonOperator}\"); Console.WriteLine($\"Expression2: {ifField?.Expression2}\"); Console.WriteLine($\"True Text: {ifField?.TrueText}\"); Console.WriteLine($\"False Text: {ifField?.FalseText}\"); COMPARE Compares two expressions. var compare = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"COMPARE 5 = 5\")) as CompareFieldInstruction; Console.WriteLine($\"Expression1: {compare?.Expression1}\"); Console.WriteLine($\"Comparison Operator: {compare?.ComparisonOperator}\"); Console.WriteLine($\"Expression2: {compare?.Expression2}\"); Other Fields ADVANCE Moves text to a specific position. var advance = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"ADVANCE \\d 10 \\l 5 \\r 15 \\u 8 \\x 100 \\y 50\")) as AdvanceFieldInstruction; Console.WriteLine($\"Down: {advance?.Down}\"); Console.WriteLine($\"Left: {advance?.Left}\"); Console.WriteLine($\"Right: {advance?.Right}\"); Console.WriteLine($\"Up: {advance?.Up}\"); Console.WriteLine($\"Horizontal Position: {advance?.HorizontalPosition}\"); Console.WriteLine($\"Vertical Position: {advance?.VerticalPosition}\"); AUTOTEXT Inserts AutoText entries. var autoText = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"AUTOTEXT MyAutoText\")) as AutoTextFieldInstruction; Console.WriteLine($\"AutoText Name: {autoText?.AutoTextName}\"); AUTOTEXTLIST Creates a list of AutoText entries. var autoTextList = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"AUTOTEXTLIST \\s \"MyStyle\" \\t \",\"\")) as AutoTextListFieldInstruction; Console.WriteLine($\"Style Name: {autoTextList?.StyleName}\"); Console.WriteLine($\"Separator: {autoTextList?.Separator}\"); BARCODE Creates a barcode. var barcode = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"BARCODE \"123456789\" \\t PostalBarcode \\u \\b \\d \\h 50 \\s 100 \\c CODE128 \\q 3 \\r 0\")) as BarcodeFieldInstruction; Console.WriteLine($\"Postal Address: {barcode?.PostalAddress}\"); Console.WriteLine($\"Barcode Type: {barcode?.BarcodeType}\"); Console.WriteLine($\"US Postal: {barcode?.IsUSPostalAddress}\"); Console.WriteLine($\"Add Border: {barcode?.AddBorder}\"); Console.WriteLine($\"Display Data: {barcode?.DisplayPostalAddressData}\"); Console.WriteLine($\"Height: {barcode?.Height}\"); Console.WriteLine($\"Scale: {barcode?.Scale}\"); Console.WriteLine($\"Case Code: {barcode?.CaseCode}\"); Console.WriteLine($\"Error Correction: {barcode?.ErrorCorrectionLevel}\"); Console.WriteLine($\"Rotation: {barcode?.Rotation}\"); BIBLIOGRAPHY Creates a bibliography. var bibliography = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"BIBLIOGRAPHY \\l 1033\")) as BibliographyFieldInstruction; Console.WriteLine($\"Language ID: {bibliography?.LanguageId}\"); CITATION Creates a citation. var citation = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"CITATION Author2023 \\l 1033 \\m AuthorYear \\n \\p 25 \\s 10 \\t \\v 2 \\y\")) as CitationFieldInstruction; Console.WriteLine($\"Tag: {citation?.Tag}\"); Console.WriteLine($\"Language ID: {citation?.LanguageId}\"); Console.WriteLine($\"Format Style: {citation?.FormatStyle}\"); Console.WriteLine($\"Suppress Author: {citation?.SuppressAuthor}\"); Console.WriteLine($\"Page Number: {citation?.PageNumber}\"); Console.WriteLine($\"Suffix: {citation?.Suffix}\"); Console.WriteLine($\"Suppress Title: {citation?.SuppressTitle}\"); Console.WriteLine($\"Volume Number: {citation?.VolumeNumber}\"); Console.WriteLine($\"Suppress Year: {citation?.SuppressYear}\"); DOCPROPERTY Retrieves document properties. var docProperty = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"DOCPROPERTY Title\")) as DocPropertyFieldInstruction; Console.WriteLine($\"Property Name: {docProperty?.PropertyName}\"); Console.WriteLine($\"Category Argument: {docProperty?.PropertyCategoryArgument}\"); DOCVARIABLE Retrieves document variables. var docVariable = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"DOCVARIABLE MyVariable\")) as DocVariableFieldInstruction; Console.WriteLine($\"Variable Name: {docVariable?.VariableName}\"); INCLUDEPICTURE Includes a picture from an external source. var includePicture = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"INCLUDEPICTURE \"C:\\image.jpg\" \\c converter \\d\")) as IncludePictureFieldInstruction; Console.WriteLine($\"Source Path: {includePicture?.SourcePath}\"); Console.WriteLine($\"Graphics Filter: {includePicture?.GraphicsFilter}\"); Console.WriteLine($\"Do Not Store: {includePicture?.DoNotStore}\"); INCLUDETEXT Includes text from an external source. var includeText = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"INCLUDETEXT \"C:\\document.docx\" \\c converter \\b MyBookmark\")) as IncludeTextFieldInstruction; Console.WriteLine($\"Source Path: {includeText?.SourcePath}\"); Console.WriteLine($\"Text Converter: {includeText?.TextConverter}\"); Console.WriteLine($\"Bookmark Name: {includeText?.BookmarkName}\"); INFO Retrieves document information. var info = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"INFO Title\")) as InfoFieldInstruction; Console.WriteLine($\"Info Type: {info?.InfoType}\"); LINK Creates a link to external data. var link = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"LINK Excel.Sheet \"C:\\data.xlsx\" Sheet1!R1C1:R10C5 \\a \\b \\f 19 \\h \\p \\t\")) as LinkFieldInstruction; Console.WriteLine($\"Program Class: {link?.ProgramClass}\"); Console.WriteLine($\"Source File: {link?.SourceFile}\"); Console.WriteLine($\"Place Reference: {link?.PlaceReference}\"); Console.WriteLine($\"Update Automatically: {link?.UpdateAutomatically}\"); Console.WriteLine($\"Insert as Bitmap: {link?.InsertAsBitmap}\"); Console.WriteLine($\"Format: {link?.Format}\"); Console.WriteLine($\"Insert as HTML: {link?.InsertAsHtml}\"); Console.WriteLine($\"Insert as Picture: {link?.InsertAsPicture}\"); Console.WriteLine($\"Insert as RTF: {link?.InsertAsRtf}\"); Console.WriteLine($\"Insert as Text: {link?.InsertAsText}\"); PRINT Sends characters to the printer. var print = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"PRINT \"Print this text\"\")) as PrintFieldInstruction; Console.WriteLine($\"Printer Instructions: {print?.PrinterInstructions}\"); RD References a document for index or table operations. var rd = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"RD \"C:\\reference.docx\"\")) as RdFieldInstruction; Console.WriteLine($\"Referenced Document: {rd?.ReferencedDocument}\"); SET Sets the value of a bookmark. var set = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"SET MyBookmark \"New Value\"\")) as SetFieldInstruction; Console.WriteLine($\"Bookmark Name: {set?.BookmarkName}\"); Console.WriteLine($\"Bookmark Text: {set?.BookmarkText}\"); SYMBOL Inserts a symbol. var symbol = TypedFieldInstructionFactory.Create(FieldInstructionParser.Parse(\"SYMBOL 65 \\f Arial \\s 12 \\u\")) as SymbolFieldInstruction; Console.WriteLine($\"Character Code: {symbol?.CharacterCode}\"); Console.WriteLine($\"Font Name: {symbol?.FontName}\"); Console.WriteLine($\"Font Size: {symbol?.FontSize}\"); Console.WriteLine($\"Unicode: {symbol?.Unicode}\"); Factory Pattern The TypedFieldInstructionFactory uses a factory pattern to create appropriate typed instances: public static class TypedFieldInstructionFactory { public static TypedFieldInstruction? Create(FieldInstruction genericInstruction) { // Returns appropriate typed instruction or null if parsing fails } } Error Handling The factory returns null for malformed instructions or when parsing fails, allowing graceful fallback to the generic FieldInstruction. Performance Considerations Typed instructions are created on-demand through the factory The original FieldInstruction is preserved and accessible through the Source property Failed conversions return null rather than throwing exceptions for performance Each typed instruction parses its specific switches and arguments once during construction Extensibility The typed field instruction system is designed to be extensible. New field types can be added by: Creating a new class that inherits from TypedFieldInstruction Implementing field-specific properties and parsing logic in the constructor Adding the type to the TypedFieldInstructionFactory switch statement Real-World Usage Examples Mail Merge Document Processing using OpenLanguage.WordprocessingML.FieldInstruction; using OpenLanguage.WordprocessingML.FieldInstruction.Typed; // Process mail merge fields in a document template var fields = new List<string> { \"MERGEFIELD FirstName \\b \"Dear \" \\f \",\"\", \"MERGEFIELD LastName \\* Upper\", \"ADDRESSBLOCK \\c 2 \\e \"Customer\" \\f \"Mr./Ms.\"\", \"GREETINGLINE \\f \"Dear\" \\e \"Valued Customer\" \\d \":\"\" }; foreach (var fieldCode in fields) { var instruction = FieldInstructionParser.Parse(fieldCode); var typedInstruction = TypedFieldInstructionFactory.Create(instruction); switch (typedInstruction) { case MergeFieldFieldInstruction merge: Console.WriteLine($\"Merge Field: {merge.FieldName}\"); if (merge.TextBefore != null) Console.WriteLine($\" Text Before: {merge.TextBefore}\"); if (merge.TextAfter != null) Console.WriteLine($\" Text After: {merge.TextAfter}\"); break; case AddressBlockFieldInstruction address: Console.WriteLine($\"Address Block - Country Format: {address.CountryFormat}\"); Console.WriteLine($\" Format Name As: {address.FormatNameAs}\"); break; case GreetingLineFieldInstruction greeting: Console.WriteLine($\"Greeting Line - Format: {greeting.GreetingFormat}\"); Console.WriteLine($\" Default: {greeting.DefaultGreeting}\"); break; } } Document Cross-References // Handle various types of cross-references var referenceFields = new[] { \"REF MyBookmark \\h \\p\", \"PAGEREF ChapterStart \\h\", \"STYLEREF \"Heading 1\" \\l \\n\", \"NOTEREF FootnoteRef \\f \\h\" }; foreach (var fieldCode in referenceFields) { var instruction = FieldInstructionParser.Parse(fieldCode); var typedInstruction = TypedFieldInstructionFactory.Create(instruction); switch (typedInstruction) { case RefFieldInstruction refField: Console.WriteLine($\"Reference to: {refField.BookmarkName}\"); Console.WriteLine($\" Insert Hyperlink: {refField.InsertHyperlink}\"); Console.WriteLine($\" Insert Position: {refField.InsertRelativePosition}\"); break; case PageRefFieldInstruction pageRef: Console.WriteLine($\"Page Reference to: {pageRef.BookmarkName}\"); Console.WriteLine($\" Insert Hyperlink: {pageRef.InsertHyperlink}\"); break; case StyleRefFieldInstruction styleRef: Console.WriteLine($\"Style Reference: {styleRef.StyleName}\"); Console.WriteLine($\" Search from Bottom: {styleRef.SearchFromBottom}\"); Console.WriteLine($\" Insert Paragraph Number: {styleRef.InsertParagraphNumber}\"); break; case NoteRefFieldInstruction noteRef: Console.WriteLine($\"Note Reference: {noteRef.BookmarkName}\"); Console.WriteLine($\" Insert Footnote Reference: {noteRef.InsertFootnoteReference}\"); break; } } Form Field Processing // Process form fields for data collection var formFields = new[] { \"FORMTEXT \\default \"Enter name here\" \\maxlen 50 \\type 0\", \"FORMCHECKBOX \\default 1 \\size 12\", \"FORMDROPDOWN \\l \"Option1,Option2,Option3\"\" }; foreach (var fieldCode in formFields) { var instruction = FieldInstructionParser.Parse(fieldCode); var typedInstruction = TypedFieldInstructionFactory.Create(instruction); switch (typedInstruction) { case FormTextFieldInstruction textField: Console.WriteLine($\"Text Field - Default: {textField.DefaultText}\"); Console.WriteLine($\" Max Length: {textField.MaximumLength}\"); Console.WriteLine($\" Type: {textField.TextType}\"); break; case FormCheckBoxFieldInstruction checkBox: Console.WriteLine($\"Checkbox - Default State: {checkBox.DefaultState}\"); Console.WriteLine($\" Size: {checkBox.Size}\"); break; case FormDropDownFieldInstruction dropDown: Console.WriteLine($\"Dropdown - Items: {dropDown.Items}\"); break; } } Date and Time Formatting // Handle various date/time field formats var dateTimeFields = new[] { \"DATE \\@ \"MMMM d, yyyy\" \\h \\s\", \"TIME \\@ \"h:mm am/pm\"\", \"CREATEDATE \\@ \"dddd, MMMM d, yyyy\"\", \"SAVEDATE \\@ \"MM/dd/yy h:mm am/pm\"\" }; foreach (var fieldCode in dateTimeFields) { var instruction = FieldInstructionParser.Parse(fieldCode); var typedInstruction = TypedFieldInstructionFactory.Create(instruction); switch (typedInstruction) { case DateFieldInstruction date: Console.WriteLine($\"Date Field - Format: {date.DateFormat}\"); Console.WriteLine($\" Use Hijri Calendar: {date.UseHijriCalendar}\"); Console.WriteLine($\" Use Saka Calendar: {date.UseSakaCalendar}\"); break; case TimeFieldInstruction time: Console.WriteLine($\"Time Field - Format: {time.TimeFormat}\"); break; case CreateDateFieldInstruction createDate: Console.WriteLine($\"Create Date - Format: {createDate.DateFormat}\"); break; case SaveDateFieldInstruction saveDate: Console.WriteLine($\"Save Date - Format: {saveDate.DateFormat}\"); break; } } Table of Contents and Index Generation // Process TOC and Index fields var tocFields = new[] { \"TOC \\o \"1-3\" \\h \\z \\u\", \"INDEX \\b MyBookmark \\c 3 \\e \"\" \\h \"A\"\", \"XE \"Main Entry:Sub Entry\" \\b \\i \\r BookmarkRange\" }; foreach (var fieldCode in tocFields) { var instruction = FieldInstructionParser.Parse(fieldCode); var typedInstruction = TypedFieldInstructionFactory.Create(instruction); switch (typedInstruction) { case TocFieldInstruction toc: Console.WriteLine($\"TOC - Outline Levels: {toc.OutlineLevels}\"); Console.WriteLine($\" Use Hyperlinks: {toc.UseHyperlinks}\"); Console.WriteLine($\" Hide Tab Leaders: {toc.HideTabLeaderAndPageNumber}\"); break; case IndexFieldInstruction index: Console.WriteLine($\"Index - Bookmark: {index.BookmarkName}\"); Console.WriteLine($\" Columns: {index.NumberOfColumns}\"); Console.WriteLine($\" Heading Style: {index.HeadingStyle}\"); break; case XeFieldInstruction xe: Console.WriteLine($\"Index Entry - Text: {xe.EntryText}\"); Console.WriteLine($\" Bold: {xe.ApplyBoldFormatting}\"); Console.WriteLine($\" Italic: {xe.ApplyItalicFormatting}\"); break; } } Conditional Field Processing // Handle conditional logic fields var conditionalFields = new[] { \"IF { MERGEFIELD Amount } > 1000 \"Large Order\" \"Standard Order\"\", \"COMPARE 5 = 5\", \"NEXTIF State = \"CA\"\", \"SKIPIF Amount < 100\" }; foreach (var fieldCode in conditionalFields) { var instruction = FieldInstructionParser.Parse(fieldCode); var typedInstruction = TypedFieldInstructionFactory.Create(instruction); switch (typedInstruction) { case IfFieldInstruction ifField: Console.WriteLine($\"IF Field - Expression1: {ifField.Expression1}\"); Console.WriteLine($\" Operator: {ifField.ComparisonOperator}\"); Console.WriteLine($\" Expression2: {ifField.Expression2}\"); Console.WriteLine($\" True Text: {ifField.TrueText}\"); Console.WriteLine($\" False Text: {ifField.FalseText}\"); break; case CompareFieldInstruction compare: Console.WriteLine($\"Compare - Expression1: {compare.Expression1}\"); Console.WriteLine($\" Operator: {compare.ComparisonOperator}\"); Console.WriteLine($\" Expression2: {compare.Expression2}\"); break; case NextIfFieldInstruction nextIf: Console.WriteLine($\"NextIf - Field: {nextIf.FieldName}\"); Console.WriteLine($\" Operator: {nextIf.ComparisonOperator}\"); Console.WriteLine($\" Value: {nextIf.ComparisonValue}\"); break; case SkipIfFieldInstruction skipIf: Console.WriteLine($\"SkipIf - Field: {skipIf.FieldName}\"); Console.WriteLine($\" Value: {skipIf.ComparisonValue}\"); break; } } Best Practices Always check for null return values from the factory Use pattern matching with is operator for type checking Access the original instruction through the Source property when needed Handle parsing exceptions gracefully by falling back to generic FieldInstruction Use specific typed properties instead of parsing switches manually Cache typed instructions if processing the same field multiple times Validate field-specific constraints (e.g., date formats, bookmark names) before creating instructions"
  },
  "docs/api/WordprocessingML/MergeField/MergeField.html": {
    "href": "docs/api/WordprocessingML/MergeField/MergeField.html",
    "title": "Merge Field Lexer | OpenLanguage Documentation",
    "summary": "Merge Field Lexer The OpenLanguage.WordprocessingML.MergeField namespace provides lexical analysis functionality for parsing merge field placeholders using character-by-character state machine parsing. Overview The merge field lexer provides: Placeholder Parsing: Parse merge field placeholders with « » delimiters State Machine Parsing: Character-by-character lexical analysis Address Block Templates: Process templates containing multiple merge fields Language ID Parsing: Parse language identifiers for localization Core Classes MergeFieldLexer Static class providing lexical analysis methods: using OpenLanguage.WordprocessingML.MergeField; // Parse a single merge field placeholder var placeholder = MergeFieldLexer.ParseMergeField(\"«FirstName»\"); Console.WriteLine($\"Field Name: {placeholder.FieldName}\"); // \"FirstName\" // Parse with formatting switch var formatted = MergeFieldLexer.ParseMergeField(\"«LastName\\* Upper»\"); Console.WriteLine($\"Field: {formatted.FieldName}\"); // \"LastName\" Console.WriteLine($\"Switch: {formatted.FormattingSwitch}\"); // \"\\* Upper\" MergeFieldPlaceholder Represents a parsed merge field placeholder: public class MergeFieldPlaceholder { public string FieldName { get; set; } // Field name without delimiters public string RawText { get; set; } // Original placeholder text public bool IsValid => !string.IsNullOrWhiteSpace(FieldName); public string? FormattingSwitch { get; set; } // Optional formatting switch } AddressBlockTemplate Represents a parsed address block template with merge fields: public class AddressBlockTemplate { public string RawTemplate { get; set; } // Original template text public List<MergeFieldPlaceholder> Placeholders { get; set; } // Found placeholders public string ProcessedTemplate { get; set; } // Template with format specifiers } Parsing Methods Single Merge Field Parsing // Parse a simple merge field var simple = MergeFieldLexer.ParseMergeField(\"«CustomerName»\"); Console.WriteLine($\"Field: {simple.FieldName}\"); // \"CustomerName\" Console.WriteLine($\"Valid: {simple.IsValid}\"); // True // Parse with formatting switch var withSwitch = MergeFieldLexer.ParseMergeField(\"«Amount\\* #,##0.00»\"); Console.WriteLine($\"Field: {withSwitch.FieldName}\"); // \"Amount\" Console.WriteLine($\"Switch: {withSwitch.FormattingSwitch}\"); // \"\\* #,##0.00\" Address Block Template Parsing // Parse an address block template with multiple merge fields string template = \"«Title» «FirstName» «LastName»\\n«Address1»\\n«City», «State» «PostalCode»\"; var addressBlock = MergeFieldLexer.ParseAddressBlockTemplate(template); Console.WriteLine($\"Found {addressBlock.Placeholders.Count} placeholders\"); Console.WriteLine($\"Processed template: {addressBlock.ProcessedTemplate}\"); // Output: \"Processed template: {0} {1} {2}\\n{3}\\n{4}, {5} {6}\" // Access individual placeholders foreach (var placeholder in addressBlock.Placeholders) { Console.WriteLine($\"Field: {placeholder.FieldName}\"); } Field Name Extraction // Extract all unique merge field names from text string document = \"Dear «FirstName» «LastName», your order «OrderNumber» is ready.\"; var fieldNames = MergeFieldLexer.ExtractMergeFieldNames(document); foreach (string fieldName in fieldNames) { Console.WriteLine($\"Found field: {fieldName}\"); } // Output: \"FirstName\", \"LastName\", \"OrderNumber\" Utility Methods Validation // Check if text contains valid merge fields string text1 = \"Hello «FirstName»!\"; string text2 = \"Hello World!\"; bool hasFields1 = MergeFieldLexer.ContainsValidMergeFields(text1); // True bool hasFields2 = MergeFieldLexer.ContainsValidMergeFields(text2); // False Formatting // Format a field name with merge field delimiters string formatted = MergeFieldLexer.FormatMergeField(\"CustomerName\"); Console.WriteLine(formatted); // \"«CustomerName»\" // Format with a formatting switch string withSwitch = MergeFieldLexer.FormatMergeFieldWithSwitch(\"Amount\", \"* #,##0.00\"); Console.WriteLine(withSwitch); // \"«Amount\\* #,##0.00»\" Reconstruction // Reconstruct a merge field from a placeholder object var placeholder = new MergeFieldPlaceholder { FieldName = \"Total\", FormattingSwitch = \"* Currency\" }; string reconstructed = MergeFieldLexer.Reconstruct(placeholder); Console.WriteLine(reconstructed); // \"«Total * Currency»\" Language ID Parsing The lexer includes functionality for parsing language identifiers: Parse Language IDs // Parse numeric LCID var langId1 = MergeFieldLexer.ParseLanguageId(\"1033\"); Console.WriteLine(langId1); // EnglishUS // Parse enum name var langId2 = MergeFieldLexer.ParseLanguageId(\"FrenchFrance\"); Console.WriteLine(langId2); // FrenchFrance // Parse culture name var langId3 = MergeFieldLexer.ParseLanguageId(\"en-US\"); Console.WriteLine(langId3); // EnglishUS // Invalid input returns null var invalid = MergeFieldLexer.ParseLanguageId(\"invalid\"); Console.WriteLine(invalid == null); // True State Machine Implementation The lexer uses a character-by-character state machine for robust parsing: Lexer States internal enum MergeFieldLexerState { SearchingForStart, // Looking for « character ParsingFieldName, // Inside field, parsing name ParsingFormattingSwitch, // Parsing switch after backslash SearchingForEnd // Looking for » character } Parsing Process SearchingForStart: Scans text looking for opening « delimiter ParsingFieldName: Extracts field name until backslash or closing delimiter ParsingFormattingSwitch: Captures formatting switch text after backslash SearchingForEnd: Completes parsing when closing » delimiter is found Usage Examples Complete Parsing Example using OpenLanguage.WordprocessingML.MergeField; string template = @\" Dear «Title» «FirstName» «LastName», Your account balance is «Balance\\* Currency». Please contact us at «CompanyPhone» if you have questions. Sincerely, «AgentName\\* Upper» \"; // Parse the entire template var addressBlock = MergeFieldLexer.ParseAddressBlockTemplate(template); Console.WriteLine($\"Original template:\"); Console.WriteLine(addressBlock.RawTemplate); Console.WriteLine($\"\\nFound {addressBlock.Placeholders.Count} merge fields:\"); foreach (var placeholder in addressBlock.Placeholders) { Console.WriteLine($\" Field: {placeholder.FieldName}\"); if (!string.IsNullOrEmpty(placeholder.FormattingSwitch)) { Console.WriteLine($\" Switch: {placeholder.FormattingSwitch}\"); } } Console.WriteLine($\"\\nProcessed template:\"); Console.WriteLine(addressBlock.ProcessedTemplate); Field Name Validation // Validate merge field syntax in user input string userInput = \"«FirstName» «InvalidField «LastName»\"; if (MergeFieldLexer.ContainsValidMergeFields(userInput)) { var fieldNames = MergeFieldLexer.ExtractMergeFieldNames(userInput); Console.WriteLine($\"Valid fields found: {string.Join(\", \", fieldNames)}\"); } else { Console.WriteLine(\"No valid merge fields found\"); } Dynamic Field Generation // Generate merge fields programmatically var fieldNames = new[] { \"FirstName\", \"LastName\", \"Email\", \"Amount\" }; var formattingSwitches = new[] { null, \"* Upper\", null, \"* Currency\" }; for (int i = 0; i < fieldNames.Length; i++) { string mergeField; if (formattingSwitches[i] != null) { mergeField = MergeFieldLexer.FormatMergeFieldWithSwitch( fieldNames[i], formattingSwitches[i] ); } else { mergeField = MergeFieldLexer.FormatMergeField(fieldNames[i]); } Console.WriteLine($\"Generated: {mergeField}\"); } Technical Details Character-by-Character Parsing: Uses state machine for robust parsing Delimiter Support: Recognizes « and » characters for merge field boundaries Switch Parsing: Handles formatting switches after backslash character Language Support: Includes comprehensive language ID mapping Whitespace Handling: Properly trims field names while preserving switch formatting Error Tolerance: Gracefully handles malformed input Limitations Only supports « » delimiter style (not {{ }} or other formats) Formatting switches are captured as strings but not further parsed No validation of switch syntax or values Language ID mapping covers common locales but may not be exhaustive See Also Field Instructions - Generic field instruction handling"
  },
  "docs/development/build.html": {
    "href": "docs/development/build.html",
    "title": "Build System | OpenLanguage Documentation",
    "summary": "Build System OpenLanguage uses a sophisticated CMake-based build system designed to handle .NET projects with YACC/LEX grammar file preprocessing. This document provides comprehensive information about the build system architecture, targets, and usage. Overview The build system is architected around CMake 3.20+ and provides several key capabilities: Cross-platform .NET Runtime Identifier (RID) detection and configuration Automatic preprocessing of .y (YACC) and .lex (LEX) grammar files using the C preprocessor Multi-target compilation for different runtime architectures Integration with .NET toolchain for building, testing, and packaging Code formatting and documentation generation Git hooks installation for development workflow Architecture Project Structure OpenLanguage/ ├── CMakeLists.txt # Main build configuration ├── OpenLanguage/ # Main .NET project │ ├── OpenLanguage.csproj # .NET project file │ ├── Generated/ # Preprocessed grammar files (created during build) │ └── SpreadsheetML/Formula/Lang/ │ ├── Parse/formula.y # YACC grammar file │ └── Lex/ # LEX lexer files │ ├── formula.lex # Main lexer │ └── function/ # Function definition lexer files ├── OpenLanguage.Test/ # Unit test project ├── hooks/ # Git hooks └── build/ # CMake build directory (created during build) Build Process Flow RID Detection: Automatically detects the target platform and architecture Grammar Preprocessing: Processes .y and .lex files with cpp (C preprocessor) Code Generation: GPPG/GPLEX tools generate C# parser/lexer code from grammar files Compilation: Builds the .NET solution for specified RIDs Testing: Runs xUnit tests with the compiled assemblies Packaging: Creates NuGet packages for distribution Runtime Identifier (RID) Configuration Automatic Detection The build system automatically detects the platform and architecture: Supported Architectures: x64 (x86_64, AMD64) arm64 (aarch64, arm64) x86 (i386-i686, x86) Supported Operating Systems: linux (Linux) osx (macOS) win (Windows) freebsd (FreeBSD) Example RIDs: linux-x64 win-x64 osx-arm64 Manual Override You can override the detected RID: # Configure for specific RID cmake -B build -DRUNTIMES=\"linux-x64\" # Configure for multiple RIDs cmake -B build -DRUNTIMES=\"linux-x64;win-x64;osx-arm64\" Grammar File Processing Overview The build system automatically processes YACC (.y) and LEX (.lex) files using the C preprocessor before compilation. This enables: Conditional compilation using #ifdef, #ifndef, #define File inclusion using #include Macro expansion for code reuse Platform-specific grammar variants Processing Pipeline Discovery: CMake scans for all .y and .lex files in the project Filtering: Excludes files already in the Generated/ directory Preprocessing: Runs cpp -P with -Wno-invalid-pp-token flag Output: Places processed files in Generated/ directory maintaining folder structure Example Source: OpenLanguage/SpreadsheetML/Formula/Lang/Lex/formula.lex Output: OpenLanguage/Generated/SpreadsheetML/Formula/Lang/Lex/formula.lex The preprocessed files are then used by GPPG/GPLEX tools to generate C# parser code. Build Targets Core Targets process Preprocesses all .y and .lex files using cpp. cmake --build build --target process Dependencies: None Output: Processed grammar files in Generated/ directory build Compiles the solution for all configured RIDs. cmake --build build --target build Dependencies: process Output: Compiled binaries in build/publish/ directory test Runs all unit tests using xUnit. cmake --build build --target test Dependencies: build Command: dotnet test --configuration Release --no-build --verbosity normal Utility Targets format Formats all C# code using CSharpier. cmake --build build --target format Commands: dotnet tool restore dotnet csharpier format . doc Generates API documentation using DocFX. cmake --build build --target doc Dependencies: build Output: Generated documentation in docfx/_site/ pack Packs NuGet packages for distribution. cmake --build build --target pack Dependencies: build Output: NuGet packages in build/packages/ install-hooks Installs git pre-commit hooks for development. cmake --build build --target install-hooks Actions: Copies hooks/pre-commit to .git/hooks/pre-commit Makes the hook executable with chmod +x clean-all Removes all build artifacts and generated files. cmake --build build --target clean-all Actions: Removes build/ directory Removes Generated/ directory Removes all obj/ and bin/ directories Default Target default (ALL) The default target that runs when no specific target is specified. cmake --build build Dependencies: process, build Build Configuration CMake Variables Variable Description Default RUNTIMES Semicolon-separated list of .NET RIDs Auto-detected RID CMAKE_BUILD_TYPE Build configuration Release Project Variables Variable Description SOLUTION_FILE Path to .sln file PROJECT_DIR Main project directory GENERATED_DIR Generated files directory TEST_PROJECT_DIR Test project directory .NET Project Configuration The OpenLanguage.csproj file includes: <PropertyGroup> <TargetFramework>net9.0</TargetFramework> <PublishAot>true</PublishAot> <PublishTrimmed>true</PublishTrimmed> <Nullable>enable</Nullable> <TreatWarningsAsErrors>true</TreatWarningsAsErrors> </PropertyGroup> Key Features: AOT Compilation: Native ahead-of-time compilation support Trimming: Removes unused code for smaller binaries Nullable Reference Types: Enhanced type safety Warnings as Errors: Strict code quality enforcement Usage Examples Basic Development Workflow # Initial setup cmake -B build # Development cycle cmake --build build --target format # Format code cmake --build build --target build # Build solution cmake --build build --target test # Run tests # Install git hooks (one-time setup) cmake --build build --target install-hooks Multi-Platform Build # Configure for multiple platforms cmake -B build -DRUNTIMES=\"linux-x64;win-x64;osx-arm64\" # Build for all platforms cmake --build build --target build # Artifacts will be in: # build/publish/OpenLanguage/linux-x64/ # build/publish/OpenLanguage/win-x64/ # build/publish/OpenLanguage/osx-arm64/ Grammar File Development # After modifying .y or .lex files cmake --build build --target process # Preprocess grammar files cmake --build build --target build # Rebuild with new grammar cmake --build build --target test # Verify changes Release Preparation # Full release build cmake --build build --target clean-all # Clean everything cmake -B build # Reconfigure cmake --build build --target format # Format code cmake --build build --target build # Build solution cmake --build build --target test # Run tests cmake --build build --target doc # Generate docs cmake --build build --target pack # Pack for distribution Integration with .NET Tools YaccLexTools Integration The project uses YaccLexTools packages for grammar processing: YaccLexTools.Gppg: YACC-style parser generator YaccLexTools.Gplex: LEX-style lexer generator The .csproj file configures these tools: <YaccFile Include=\"Generated/SpreadsheetML/Formula/Lang/Parse/formula.y\"> <OutputFile>Generated/SpreadsheetML/Formula/Lang/Parse/Formula.Parser.Generated.cs</OutputFile> <Arguments>/gplex /nolines</Arguments> </YaccFile> CSharpier Integration Code formatting is handled by CSharpier: # Format entire solution dotnet csharpier format . # Check formatting without changes dotnet csharpier check . DocFX Integration Documentation generation uses DocFX: # Generate API documentation docfx metadata docfx/docfx.json docfx build docfx/docfx.json Troubleshooting Common Issues Issue: Grammar file changes not reflected in build Solution: Run cmake --build build --target process to regenerate preprocessed files Issue: RID detection fails Solution: Manually specify RID with -DRUNTIMES=\"your-rid\" Issue: Build fails with missing cpp Solution: Install GCC or Clang toolchain for C preprocessor Issue: Tests fail after grammar changes Solution: Rebuild completely with clean-all then build Build Dependencies Required Tools: CMake 3.20+ .NET 8.0 or .NET 9.0 C preprocessor (cpp) - usually part of GCC/Clang Git (for hooks installation) Optional Tools: DocFX (for documentation generation) CSharpier (for code formatting - installed via dotnet tool restore) Performance Optimization Parallel Builds: # Use multiple CPU cores cmake --build build --parallel $(nproc) Incremental Builds: The build system supports incremental builds - only changed files are reprocessed and recompiled. Build Cache: Generated files are cached in the Generated/ directory and only regenerated when source grammar files change. Advanced Configuration Custom Preprocessor Flags You can modify the preprocessing step by editing the CMakeLists.txt file: # Add custom preprocessor definitions add_custom_command( TARGET process PRE_BUILD COMMAND cpp -P ${YACC_FILE} -o ${OUTPUT_FILE} -DCUSTOM_FLAG -Wno-invalid-pp-token COMMENT \"Processing ${YACC_FILE} -> ${OUTPUT_FILE}\" ) Custom Build Targets Add custom targets for specific workflows: # Custom target for development builds add_custom_target(dev COMMAND cmake --build . --target format COMMAND cmake --build . --target build COMMAND cmake --build . --target test COMMENT \"Development build cycle\" ) Integration with IDEs Visual Studio Code Recommended extensions: C# Dev Kit CMake Tools EditorConfig for VS Code Visual Studio The solution file OpenLanguage.sln can be opened directly in Visual Studio. Use the CMake build targets from the command line or integrate with VS build system. JetBrains Rider Rider supports both the .NET solution and CMake build system. Configure CMake profiles for different RID targets. Continuous Integration The build system is designed for CI/CD pipelines: # Example GitHub Actions workflow - name: Configure CMake run: cmake -B build - name: Build run: cmake --build build --target build - name: Test run: cmake --build build --target test - name: Pack run: cmake --build build --target pack The build system's deterministic output and cross-platform support make it ideal for automated build environments."
  },
  "docs/development/grammar.html": {
    "href": "docs/development/grammar.html",
    "title": "Grammar Files | OpenLanguage Documentation",
    "summary": "Grammar Files OpenLanguage uses GNU YACC and LEX style grammar files to define the lexical analysis and parsing rules for Microsoft Office document languages. This document provides comprehensive information about working with these grammar files, their structure, and the code generation process. Overview The grammar files in OpenLanguage serve as the foundation for parsing SpreadsheetML formulas and WordprocessingML field instructions. The system uses: GPPG (GNU Parser Parser Generator): A YACC-compatible parser generator for .NET GPLEX (GNU Parser Lexer Generator): A LEX-compatible lexer generator for .NET C Preprocessor Integration: Enables conditional compilation and macro expansion Grammar File Architecture File Organization OpenLanguage/SpreadsheetML/Formula/Lang/ ├── Parse/ │ └── formula.y # YACC grammar for SpreadsheetML formulas └── Lex/ ├── formula.lex # Main lexer for SpreadsheetML formulas └── function/ # Function definition lexer files ├── standard.lex # Standard Excel functions ├── worksheet.lex # Worksheet functions ├── command.lex # Command functions ├── macro.lex # Macro functions └── future.lex # Future/experimental functions Processing Pipeline Source Grammar Files: Original .y and .lex files with preprocessor directives Preprocessing: C preprocessor (cpp) processes conditional compilation and includes Generated Grammar Files: Processed files placed in Generated/ directory Code Generation: GPPG/GPLEX generate C# parser and lexer classes Compilation: Generated C# code compiled into the final assembly YACC Grammar Files (.y) Structure YACC grammar files define the syntactic structure of the language using BNF-like notation. Header Section %namespace OpenLanguage.SpreadsheetML.Formula.Generated %parsertype Parser %tokentype Tokens %visibility public %using OpenLanguage.SpreadsheetML.Formula.Ast; %using System.Linq; Key Directives: %namespace: Specifies the namespace for generated code %parsertype: Names the generated parser class %tokentype: Defines the token enumeration type %visibility: Sets access modifier for generated classes %using: Adds using statements to generated code Union Section %union { public double doubleVal; public int integerVal; public string stringVal; public Node nodeVal; public ExpressionNode expressionVal; public List<ExpressionNode> expressionListVal; // ... additional types } The union section defines the data types that can be associated with grammar symbols. Token Declarations %token T_EQUALS T_PLUS T_MINUS T_MULTIPLY T_DIVIDE %token T_POWER T_PERCENT T_CONCAT %token T_LT T_LE T_GT T_GE T_EQ T_NE %token <stringVal> T_IDENTIFIER T_STRING_LITERAL %token <doubleVal> T_NUMBER Token Types: Operators: Mathematical and logical operators Literals: Numbers, strings, booleans Identifiers: Cell references, named ranges, functions Delimiters: Parentheses, brackets, commas Special: Structured references, array delimiters Grammar Rules expression : term | expression T_PLUS term { $$ = new BinaryOperatorNode($1, $3, \"+\"); } | expression T_MINUS term { $$ = new BinaryOperatorNode($1, $3, \"-\"); } ; term : factor | term T_MULTIPLY factor { $$ = new BinaryOperatorNode($1, $3, \"*\"); } | term T_DIVIDE factor { $$ = new BinaryOperatorNode($1, $3, \"/\"); } ; Grammar Rule Components: Left-hand side: Non-terminal symbol being defined Right-hand side: Sequence of terminals and non-terminals Semantic action: C# code in braces { } that constructs AST nodes $$: Represents the value of the left-hand side symbol $1, $2, etc.: Represent values of right-hand side symbols AST Node Construction The grammar rules construct Abstract Syntax Tree (AST) nodes: function_call : T_IDENTIFIER T_LPAREN argument_list T_RPAREN { $$ = new FunctionCallNode($1, $3); } ; argument_list : /* empty */ { $$ = new List<ExpressionNode>(); } | expression { $$ = new List<ExpressionNode> { $1 }; } | argument_list T_COMMA expression { $1.Add($3); $$ = $1; } ; Precedence and Associativity %left T_COMMA %left T_EQ T_NE T_LT T_LE T_GT T_GE %left T_CONCAT %left T_PLUS T_MINUS %left T_MULTIPLY T_DIVIDE %right T_POWER %left T_PERCENT Precedence Rules: Lower precedence: Listed first (T_COMMA) Higher precedence: Listed last (T_PERCENT) Associativity: %left (left-associative), %right (right-associative) LEX Grammar Files (.lex) Structure LEX files define lexical analysis rules using regular expressions. Header Section %using OpenLanguage.Utils; %namespace OpenLanguage.SpreadsheetML.Formula.Generated %scannertype FormulaScanner %tokentype Tokens %visibility internal %{ private System.Text.StringBuilder stringBuffer = new System.Text.StringBuilder(); public Parser Parser { get; set; } %} State Declarations %x IN_STRING %x IN_QUOTED_SHEET_NAME %x IN_A1_CELL %x IN_R1C1_CELL Start Conditions: %x: Exclusive start condition %s: Inclusive start condition Start conditions enable context-sensitive lexical analysis. Pattern Rules %% <INITIAL>{ \" { BEGIN(IN_STRING); stringBuffer.Clear(); } \"<>\" { return (int)Tokens.T_NE; } \">=\" { return (int)Tokens.T_GE; } \"<=\" { return (int)Tokens.T_LE; } [A-Z]+[1-9][0-9]* { return (int)Tokens.T_A1_CELL; } [0-9]+(\\.[0-9]+)? { return (int)Tokens.T_NUMBER; } [A-Za-z_][A-Za-z0-9_]* { return (int)Tokens.T_IDENTIFIER; } } <IN_STRING>{ \"\" { stringBuffer.Append('\"'); } \" { BEGIN(INITIAL); return (int)Tokens.T_STRING_LITERAL; } [^\"]+ { stringBuffer.Append(yytext); } } Pattern Syntax: Character classes: [A-Z], [0-9], [^\"] Quantifiers: + (one or more), * (zero or more), ? (optional) Anchors: ^ (start of line), $ (end of line) Groups: () for grouping Alternation: | for alternatives Function Definition Files The lexer includes separate files for different function categories: standard.lex /* Standard Function Keywords */ \"ABS\" { return (int)Tokens.T_FUNC_ABS; } \"AVERAGE\" { return (int)Tokens.T_FUNC_AVERAGE; } \"COUNT\" { return (int)Tokens.T_FUNC_COUNT; } \"MAX\" { return (int)Tokens.T_FUNC_MAX; } \"MIN\" { return (int)Tokens.T_FUNC_MIN; } \"SUM\" { return (int)Tokens.T_FUNC_SUM; } worksheet.lex /* Worksheet Function Keywords */ \"VLOOKUP\" { return (int)Tokens.T_FUNC_VLOOKUP; } \"HLOOKUP\" { return (int)Tokens.T_FUNC_HLOOKUP; } \"INDEX\" { return (int)Tokens.T_FUNC_INDEX; } \"MATCH\" { return (int)Tokens.T_FUNC_MATCH; } This modular approach enables: Organized function definitions by category Easy maintenance and updates Conditional inclusion of function sets Extensibility for new function categories Code Generation Process GPPG Parser Generation The YACC file is processed by GPPG to generate a C# parser class: <YaccFile Include=\"Generated/SpreadsheetML/Formula/Lang/Parse/formula.y\"> <OutputFile>Generated/SpreadsheetML/Formula/Lang/Parse/Formula.Parser.Generated.cs</OutputFile> <Arguments>/gplex /nolines</Arguments> </YaccFile> Generated Components: Parser class: Implements LALR(1) parsing algorithm Token enumeration: Defines all terminal symbols Parse tables: State transition and action tables Error handling: Syntax error reporting and recovery GPLEX Lexer Generation The LEX file is processed by GPLEX to generate a C# lexer class: <LexFile Include=\"Generated/SpreadsheetML/Formula/Lang/Lex/formula.lex\"> <OutputFile>Generated/SpreadsheetML/Formula/Lang/Lex/Formula.Lexer.Generated.cs</OutputFile> </LexFile> Generated Components: Scanner class: Implements finite automaton for tokenization State machine: DFA for pattern matching Token methods: Return appropriate token types Buffer management: Efficient input handling Preprocessor Integration Conditional Compilation Grammar files can use C preprocessor directives: #ifdef INCLUDE_EXPERIMENTAL_FUNCTIONS \"LAMBDA\" { return (int)Tokens.T_FUNC_LAMBDA; } \"LET\" { return (int)Tokens.T_FUNC_LET; } #endif #ifndef MINIMAL_BUILD #include \"function/future.lex\" #endif Include Files Modularize grammar definitions: /* Main formula.lex file */ %{ // Common definitions %} %% <INITIAL>{ /* Core patterns */ #include \"function/standard.lex\" #include \"function/worksheet.lex\" #include \"function/command.lex\" } Macro Definitions Define reusable patterns: %{ #define DIGIT [0-9] #define LETTER [A-Za-z] #define IDENTIFIER {LETTER}({LETTER}|{DIGIT}|_)* %} %% {IDENTIFIER} { return (int)Tokens.T_IDENTIFIER; } {DIGIT}+ { return (int)Tokens.T_INTEGER; } Development Workflow Modifying Grammar Files Edit source grammar files in their original locations Run preprocessing: cmake --build build --target process Rebuild project: cmake --build build --target build Test changes: cmake --build build --target test Adding New Tokens Add token to LEX file: \"NEW_KEYWORD\" { return (int)Tokens.T_NEW_KEYWORD; } Add token to YACC file: %token T_NEW_KEYWORD Add grammar rules: new_construct : T_NEW_KEYWORD expression { $$ = new NewConstructNode($2); } ; Adding New Functions Choose appropriate function file (standard.lex, worksheet.lex, etc.) Add function pattern: \"NEWFUNCTION\" { return (int)Tokens.T_FUNC_NEWFUNCTION; } Update parser if needed for special syntax Add tests for the new function Debugging Grammar Issues Parser Conflicts GPPG reports shift/reduce and reduce/reduce conflicts: warning: 1 shift/reduce conflict State 42: shift/reduce conflict on token T_IDENTIFIER Resolution strategies: Add precedence declarations to resolve conflicts Refactor grammar rules to eliminate ambiguity Use GLR parsing for inherently ambiguous grammars Lexer Issues Common lexer problems: Pattern order matters: More specific patterns should come first Overlapping patterns: Use start conditions to disambiguate Greedy matching: LEX uses longest match rule Testing Grammar Changes Unit Tests [Theory] [InlineData(\"NEW_KEYWORD(123)\", typeof(NewConstructNode))] public void TestNewConstruct(string input, Type expectedType) { var formula = FormulaParser.Parse(input); Assert.IsType(expectedType, formula); } Integration Tests [Fact] public void TestComplexFormulaWithNewConstruct() { var input = \"SUM(NEW_KEYWORD(A1:A10), B1)\"; var formula = FormulaParser.Parse(input); // Verify AST structure Assert.IsType<FunctionCallNode>(formula); // ... additional assertions } Best Practices Grammar Design Keep rules simple: Avoid overly complex right-hand sides Use consistent naming: Follow established token naming conventions Document complex rules: Add comments explaining non-obvious grammar constructs Consider precedence: Ensure operator precedence matches Excel behavior Lexer Design Order patterns carefully: More specific patterns first Use start conditions: For context-sensitive tokenization Handle whitespace appropriately: Preserve or skip as needed Escape special characters: In regular expressions Code Generation Meaningful AST nodes: Create specific node types for different constructs Preserve source information: Include location data for error reporting Handle errors gracefully: Provide meaningful error messages Optimize for performance: Consider parser table size and generation time Maintenance Version control grammar files: Track changes to language specification Document grammar changes: Maintain changelog for grammar modifications Test thoroughly: Ensure backward compatibility Performance testing: Monitor parser performance with large inputs Advanced Features Error Recovery Implement error recovery in YACC rules: statement_list : statement | statement_list statement | statement_list error statement { yyerrok; } ; Semantic Predicates Use semantic actions for context-sensitive parsing: identifier_or_function : T_IDENTIFIER { if (IsKnownFunction($1)) $$ = new FunctionNameNode($1); else $$ = new IdentifierNode($1); } ; Performance Considerations Parser Performance LALR(1) parsing: Efficient for most grammar constructs Table size: Balance between grammar complexity and table size Action complexity: Keep semantic actions lightweight Lexer Performance DFA optimization: GPLEX generates efficient state machines Pattern complexity: Simpler patterns generally perform better Buffer management: Efficient for large input files Memory Usage AST node design: Minimize memory footprint of AST nodes String interning: Consider interning for frequently used strings Garbage collection: Design for efficient GC behavior Troubleshooting Common Issues Issue: Parser conflicts Solution: Add precedence declarations or refactor grammar Issue: Lexer not recognizing tokens Solution: Check pattern order and regular expression syntax Issue: Build errors after grammar changes Solution: Clean and rebuild: cmake --build build --target clean-all && cmake --build build Issue: Performance degradation Solution: Profile parser and optimize grammar rules or AST construction Debugging Tools GPPG verbose output: Use /verbose flag for detailed parser information GPLEX trace output: Enable tracing for lexer debugging Visual Studio debugger: Step through generated parser code Unit tests: Isolate and test specific grammar constructs Integration with .NET Generated Code Structure namespace OpenLanguage.SpreadsheetML.Formula.Generated { public partial class Parser { public FormulaScanner Scanner { get; set; } public ExpressionNode Parse() { // Generated parsing logic } } internal partial class FormulaScanner { public int yylex() { // Generated lexical analysis logic } } } API Integration The generated parser integrates with the main API: public static class FormulaParser { public static Formula Parse(string formulaText) { var scanner = new FormulaScanner(); var parser = new Parser() { Scanner = scanner }; scanner.SetSource(formulaText, 0); var result = parser.Parse(); return new Formula(formulaText, result); } } This comprehensive grammar system enables OpenLanguage to provide accurate, high-performance parsing of Open Office XML Domain-specific Languages while maintaining flexibility for future extensions and modifications."
  },
  "docs/development/test.html": {
    "href": "docs/development/test.html",
    "title": "Testing | OpenLanguage Documentation",
    "summary": "Testing OpenLanguage uses a comprehensive testing strategy built on xUnit to ensure reliability, correctness, and performance. This document covers the testing architecture, methodologies, test organization, and development practices. Overview The testing framework is designed to validate: Parser correctness: Accurate parsing of SpreadsheetML formulas and WordprocessingML field instructions AST integrity: Proper Abstract Syntax Tree construction and manipulation Round-trip fidelity: Ensuring parsed structures can be reconstructed to original form Error handling: Graceful handling of invalid input and edge cases Performance: Parsing performance with various input sizes and complexities Test Project Structure OpenLanguage.Test/ ├── OpenLanguage.Test.csproj # Test project configuration ├── SpreadsheetML/ │ └── Formula/ │ └── ParserTests.cs # SpreadsheetML formula parser tests └── WordprocessingML/ └── FieldInstruction/ ├── FieldInstructionTests.cs # Core field instruction tests ├── LexerTests.cs # Field instruction lexer tests └── TypedFieldInstructionTests.cs # Typed instruction factory tests Test Project Configuration OpenLanguage.Test.csproj <Project Sdk=\"Microsoft.NET.Sdk\"> <PropertyGroup> <TargetFramework>net9.0</TargetFramework> <IsPackable>false</IsPackable> <Nullable>enable</Nullable> <TreatWarningsAsErrors>true</TreatWarnings> <Deterministic>true</Deterministic> <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild> <Optimize>true</Optimize> </PropertyGroup> <ItemGroup> <PackageReference Include=\"Microsoft.NET.Test.Sdk\" Version=\"17.14.1\" /> <PackageReference Include=\"xunit\" Version=\"2.9.3\" /> <PackageReference Include=\"xunit.runner.visualstudio\" Version=\"3.1.3\" /> </ItemGroup> <ItemGroup> <ProjectReference Include=\"../OpenLanguage/OpenLanguage.csproj\" /> </ItemGroup> </Project> Key Configuration Features: Nullable reference types: Enhanced type safety in tests Treat warnings as errors: Strict code quality enforcement Deterministic builds: Consistent test execution Optimized builds: Performance testing with release builds Testing Framework xUnit Integration OpenLanguage uses xUnit as the primary testing framework, providing: Theory-based testing: Data-driven tests with multiple input values Fact-based testing: Single-case unit tests Async testing support: For asynchronous operations Parallel test execution: Improved test performance Rich assertion library: Comprehensive assertion methods Test Categories Unit Tests Test individual components in isolation: [Fact] public void Constructor_WithValidInstruction_SetsInstructionProperty() { // Arrange string instruction = \"PAGE\"; // Act var fieldInstruction = new FieldInstruction(instruction); // Assert Assert.Equal(instruction, fieldInstruction.Instruction); Assert.NotNull(fieldInstruction.Arguments); Assert.Empty(fieldInstruction.Arguments); } Integration Tests Test component interactions: [Theory] [InlineData(\"SUM(A1:A10)\", typeof(FunctionCallNode))] [InlineData(\"A1+B1\", typeof(BinaryOperatorNode))] public void Parse_ValidFormula_ReturnsCorrectASTType(string formula, Type expectedType) { // Act var result = FormulaParser.Parse(formula); // Assert Assert.IsType(expectedType, result); } Round-Trip Tests Verify parsing and reconstruction fidelity: [Theory] [InlineData(\"SUM(1, 2, 3)\")] [InlineData(\"IF(A1>B1, \"Yes\", \"No\")\")] [InlineData(\"VLOOKUP(A1, Sheet2!A:B, 2, FALSE)\")] public void TestParseFunctionCall(string formulaString) { // Act Node formula = FormulaParser.Parse(formulaString); // Assert - Round-trip test Assert.Equal(formulaString, formula.ToString()); } SpreadsheetML Formula Testing Parser Tests (ParserTests.cs) The formula parser tests are organized into several categories: Literal and Identifier Tests [Theory] [InlineData(\"123\")] // Numeric literal [InlineData(\"\"hello\"\")] // String literal [InlineData(\"TRUE\")] // Boolean literal [InlineData(\"#VALUE!\")] // Error literal [InlineData(\"A1\")] // Cell reference [InlineData(\"MyNamedRange\")] // Named range public void TestParseLiteralAndIdentifier(string formulaString) { Node formula = FormulaParser.Parse(formulaString); Assert.Equal(formulaString, formula.ToString()); } Binary Operation Tests [Theory] [InlineData(\"1+2*3\")] // Precedence test [InlineData(\"(1+2)*3\")] // Parentheses test [InlineData(\"1+2-3\")] // Left associativity [InlineData(\"10/2*5\")] // Left associativity [InlineData(\"2^3^2\")] // Right associativity [InlineData(\"A1:B2 C3:D4\")] // Range intersection [InlineData(\"A1:B2,C3:D4\")] // Range union public void TestParseBinaryOperation(string formulaString) { Node formula = FormulaParser.Parse(formulaString); Assert.Equal(formulaString, formula.ToString()); } Unary Operation Tests [Theory] [InlineData(\"-5\")] // Negative number [InlineData(\"+A1\")] // Positive reference [InlineData(\"-A1:B2\")] // Negative range public void TestParseUnaryOperation(string formulaString) { Node formula = FormulaParser.Parse(formulaString); Assert.Equal(formulaString, formula.ToString()); } Function Call Tests [Theory] [InlineData(\"SUM(1, 2, 3)\")] [InlineData(\"IF(A1>B1, \"Yes\", \"No\")\")] [InlineData(\"VLOOKUP(A1, Sheet2!A:B, 2, FALSE)\")] [InlineData(\"INDIRECT(\"A\" & ROW())\")] public void TestParseFunctionCall(string formulaString) { Node formula = FormulaParser.Parse(formulaString); Assert.Equal(formulaString, formula.ToString()); } Test Data Organization Tests use inline data attributes for maintainable test cases: public static IEnumerable<object[]> ComplexFormulaTestData() { yield return new object[] { \"=SUM(A1:A10)*COUNT(B:B)\", \"Arithmetic with functions\" }; yield return new object[] { \"=IF(AND(A1>0,B1<100),\"Valid\",\"Invalid\")\", \"Nested logical functions\" }; yield return new object[] { \"=VLOOKUP(A1,Table1,2,0)+VLOOKUP(A1,Table2,3,0)\", \"Multiple lookups\" }; } [Theory] [MemberData(nameof(ComplexFormulaTestData))] public void TestComplexFormulas(string formula, string description) { // Test implementation } WordprocessingML Field Instruction Testing Core Field Instruction Tests (FieldInstructionTests.cs) Constructor Tests [Theory] [InlineData(\"PAGE\")] [InlineData(\"DATE\")] [InlineData(\"TIME\")] [InlineData(\"AUTHOR\")] [InlineData(\"FILENAME\")] public void Constructor_WithValidInstruction_SetsInstructionProperty(string instruction) { // Act FieldInstruction fieldInstruction = new FieldInstruction(instruction); // Assert Assert.Equal(instruction, fieldInstruction.Instruction); Assert.NotNull(fieldInstruction.Arguments); Assert.Empty(fieldInstruction.Arguments); } Validation Tests [Theory] [InlineData(null)] [InlineData(\"\")] [InlineData(\" \")] public void Constructor_WithInvalidInstruction_ThrowsArgumentException(string? instruction) { // Act & Assert Assert.Throws<ArgumentException>(() => new FieldInstruction(instruction!)); } Argument Handling Tests [Fact] public void Constructor_WithInstructionAndArguments_SetsProperties() { // Arrange string instruction = \"MERGEFIELD\"; List<FieldArgument> arguments = new List<FieldArgument> { new FieldArgument(FieldArgumentType.Identifier, \"FirstName\"), new FieldArgument(FieldArgumentType.Switch, \"\\* Upper\"), }; // Act FieldInstruction fieldInstruction = new FieldInstruction(instruction, arguments); // Assert Assert.Equal(instruction, fieldInstruction.Instruction); Assert.Equal(arguments, fieldInstruction.Arguments); } Lexer Tests (LexerTests.cs) Test the field instruction lexical analyzer: [Theory] [InlineData(\"PAGE\", TokenType.Instruction)] [InlineData(\"\\* MERGEFORMAT\", TokenType.Switch)] [InlineData(\"\"Hello World\"\", TokenType.StringLiteral)] [InlineData(\"123\", TokenType.Number)] public void Tokenize_ValidInput_ReturnsCorrectTokens(string input, TokenType expectedType) { // Arrange var lexer = new FieldInstructionLexer(); // Act var tokens = lexer.Tokenize(input); // Assert Assert.Single(tokens); Assert.Equal(expectedType, tokens[0].Type); } Typed Field Instruction Tests (TypedFieldInstructionTests.cs) Test the factory pattern for strongly-typed field instructions: [Fact] public void Create_MergeFieldInstruction_ReturnsTypedInstance() { // Arrange var instruction = new FieldInstruction(\"MERGEFIELD\"); instruction.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"FirstName\")); // Act var typedInstruction = TypedFieldInstructionFactory.Create(instruction); // Assert Assert.IsType<MergeFieldInstruction>(typedInstruction); var mergeField = (MergeFieldInstruction)typedInstruction; Assert.Equal(\"FirstName\", mergeField.FieldName); } Test Execution Running Tests Command Line # Run all tests dotnet test # Run tests with detailed output dotnet test --verbosity normal # Run tests with code coverage dotnet test --collect:\"XPlat Code Coverage\" # Run specific test project dotnet test OpenLanguage.Test/ # Run specific test class dotnet test --filter \"ClassName=ParserTests\" # Run specific test method dotnet test --filter \"MethodName=TestParseLiteralAndIdentifier\" CMake Integration # Run tests through CMake build system cmake --build build --target test # This executes: # dotnet test OpenLanguage.Test/OpenLanguage.Test.csproj # --configuration Release # --no-build # --verbosity normal Continuous Integration The testing strategy integrates with CI/CD pipelines: # Example GitHub Actions workflow name: CI on: [push, pull_request] jobs: test: runs-on: ubuntu-latest steps: - uses: actions/checkout@v3 - name: Setup .NET uses: actions/setup-dotnet@v3 with: dotnet-version: \"9.0.x\" - name: Configure CMake run: cmake -B build - name: Build run: cmake --build build --target build - name: Test run: cmake --build build --target test Test Development Practices Writing Effective Tests Test Naming Convention // Pattern: MethodName_StateUnderTest_ExpectedBehavior [Fact] public void Parse_ValidFormula_ReturnsFormulaWithCorrectAST() [Fact] public void Constructor_NullInstruction_ThrowsArgumentException() [Theory] [InlineData(\"SUM(A1:A10)\")] public void ToString_ParsedFormula_ReturnsOriginalString(string input) Arrange-Act-Assert Pattern [Fact] public void Parse_SimpleAddition_CreatesCorrectAST() { // Arrange string formula = \"A1+B1\"; // Act var result = FormulaParser.Parse(formula); // Assert Assert.IsType<BinaryOperatorNode>(result); var binOp = (BinaryOperatorNode)result; Assert.Equal(\"+\", binOp.Operator); } Theory-Based Testing Use theories for testing multiple similar cases: [Theory] [InlineData(\"SUM\", true)] [InlineData(\"AVERAGE\", true)] [InlineData(\"UNKNOWN\", false)] public void IsKnownFunction_VariousFunctions_ReturnsExpected(string functionName, bool expected) { // Act bool result = FunctionRegistry.IsKnownFunction(functionName); // Assert Assert.Equal(expected, result); } Test Data Management Complex Test Cases public static IEnumerable<object[]> FormulaTestCases() { // Basic arithmetic yield return new object[] { \"1+2\", typeof(BinaryOperatorNode) }; yield return new object[] { \"A1*B1\", typeof(BinaryOperatorNode) }; // Function calls yield return new object[] { \"SUM(A1:A10)\", typeof(FunctionCallNode) }; yield return new object[] { \"IF(A1>0,\"Positive\",\"Non-positive\")\", typeof(FunctionCallNode) }; // Complex nested expressions yield return new object[] { \"SUM(A1:A10)+AVERAGE(B1:B10)*2\", typeof(BinaryOperatorNode) }; } [Theory] [MemberData(nameof(FormulaTestCases))] public void Parse_VariousFormulas_ReturnsCorrectASTType(string formula, Type expectedType) { var result = FormulaParser.Parse(formula); Assert.IsType(expectedType, result); } External Test Data For large test datasets, consider external files: [Theory] [JsonFileData(\"TestData/large-formula-set.json\")] public void Parse_LargeFormulaSet_AllParseSuccessfully(string formula) { // Act & Assert var exception = Record.Exception(() => FormulaParser.Parse(formula)); Assert.Null(exception); } Error Testing Exception Testing [Theory] [InlineData(\"\")] [InlineData(\" \")] [InlineData(null)] public void Parse_InvalidInput_ThrowsArgumentException(string input) { // Act & Assert Assert.Throws<ArgumentException>(() => FormulaParser.Parse(input)); } Error Recovery Testing [Theory] [InlineData(\"SUM(A1:A10\", \"Missing closing parenthesis\")] [InlineData(\"A1++B1\", \"Invalid operator sequence\")] [InlineData(\"=SUM()\", \"Empty function arguments\")] public void TryParse_InvalidFormula_ReturnsNull(string formula, string reason) { // Act var result = FormulaParser.TryParse(formula); // Assert Assert.Null(result); } Performance Testing Benchmark Tests [Theory] [InlineData(10)] [InlineData(100)] [InlineData(1000)] public void Parse_RepeatedCalls_PerformanceWithinLimits(int iterations) { // Arrange string formula = \"SUM(A1:A100)+AVERAGE(B1:B100)*COUNT(C1:C100)\"; var stopwatch = Stopwatch.StartNew(); // Act for (int i = 0; i < iterations; i++) { FormulaParser.Parse(formula); } stopwatch.Stop(); // Assert var averageTime = stopwatch.ElapsedMilliseconds / (double)iterations; Assert.True(averageTime < 10, $\"Average parse time {averageTime}ms exceeds limit\"); } Memory Testing [Fact] public void Parse_LargeFormula_MemoryUsageReasonable() { // Arrange var largeFormula = GenerateLargeFormula(1000); // Generate complex formula var initialMemory = GC.GetTotalMemory(true); // Act var result = FormulaParser.Parse(largeFormula); var finalMemory = GC.GetTotalMemory(false); // Assert var memoryIncrease = finalMemory - initialMemory; Assert.True(memoryIncrease < 1_000_000, $\"Memory increase {memoryIncrease} bytes exceeds limit\"); } Test Maintenance Refactoring Tests When refactoring production code, update tests accordingly: Update test names to reflect new behavior Modify assertions for changed return types or values Add new test cases for new functionality Remove obsolete tests for removed functionality Test Documentation Document complex test scenarios: /// <summary> /// Tests that Excel-style structured references are parsed correctly. /// This includes table references like Table1[Column1] and special /// item specifiers like [#Headers], [#Data], [#Totals]. /// </summary> [Theory] [InlineData(\"Table1[Column1]\")] [InlineData(\"Table1[[#Headers],[Column1]]\")] [InlineData(\"Table1[#Data]\")] public void Parse_StructuredReferences_CreatesCorrectAST(string formula) { // Test implementation } Debugging Tests Test Debugging Strategies Use descriptive test names that clearly indicate what's being tested Add intermediate assertions to isolate failure points Use debugger breakpoints in both test and production code Add logging for complex test scenarios [Fact] public void Parse_ComplexFormula_DebugExample() { // Arrange string formula = \"SUM(A1:A10)+AVERAGE(B1:B10)\"; // Act var result = FormulaParser.Parse(formula); // Debug assertions Assert.NotNull(result); Assert.NotNull(result); // Main assertion Assert.IsType<BinaryOperatorNode>(result); var binOp = (BinaryOperatorNode)result; Assert.Equal(\"+\", binOp.Operator); // Verify operands Assert.IsType<FunctionCallNode>(binOp.Left); Assert.IsType<FunctionCallNode>(binOp.Right); } Test Isolation Ensure tests are independent: public class ParserTestsWithSetup : IDisposable { private readonly FormulaParser _parser; public ParserTestsWithSetup() { // Setup for each test _parser = new FormulaParser(); } [Fact] public void TestMethod() { // Test using _parser } public void Dispose() { // Cleanup after each test _parser?.Dispose(); } } Integration with Development Workflow Pre-commit Testing The git pre-commit hook runs tests before allowing commits: #!/bin/bash echo \"Running tests...\" cmake --build . --target test if [ $? -ne 0 ]; then echo \"Tests failed. Commit aborted.\" exit 1 fi Test-Driven Development Write failing test for new functionality Implement minimal code to make test pass Refactor while keeping tests green Add more test cases to cover edge cases Code Coverage Monitor test coverage to ensure comprehensive testing: # Generate coverage report dotnet test --collect:\"XPlat Code Coverage\" # View coverage report dotnet tool install -g dotnet-reportgenerator-globaltool reportgenerator -reports:\"**/coverage.cobertura.xml\" -targetdir:\"coverage-report\" Best Practices Summary Write tests first or alongside implementation Use descriptive test names that explain the scenario Follow AAA pattern (Arrange-Act-Assert) Test edge cases and error conditions Keep tests simple and focused on single behaviors Use theories for testing multiple similar cases Mock dependencies appropriately Maintain test performance - tests should run quickly Update tests when refactoring production code Document complex test scenarios This comprehensive testing strategy ensures OpenLanguage maintains high quality, reliability, and performance while supporting confident refactoring and feature development."
  },
  "docs/examples/complete-integration.html": {
    "href": "docs/examples/complete-integration.html",
    "title": "Complete Integration Example | OpenLanguage Documentation",
    "summary": "Complete Integration Example This document demonstrates a comprehensive real-world example that integrates multiple OpenLanguage components to create a complete document processing application. Scenario: Mail Merge Report Generator This example creates a sophisticated mail merge system that combines formula parsing, field instruction processing, and localization features to generate personalized financial reports. Complete Application Structure using OpenLanguage.SpreadsheetML.Formula; using OpenLanguage.WordprocessingML.FieldInstruction; using OpenLanguage.WordprocessingML; using System; using System.Collections.Generic; using System.Linq; public class FinancialReportGenerator { private readonly LanguageIdentifier _language; private readonly List<CustomerData> _customers; public FinancialReportGenerator(LanguageIdentifier language) { _language = language; _customers = new List<CustomerData>(); } public void AddCustomer(CustomerData customer) => _customers.Add(customer); public DocumentTemplate CreateReportTemplate() { var template = new DocumentTemplate(_language); // Header section with company info and date template.AddHeaderFields(); // Customer address block template.AddAddressSection(); // Financial summary with calculated fields template.AddFinancialSummary(); // Detailed transaction table template.AddTransactionTable(); // Footer with terms and conditions template.AddFooterSection(); return template; } public void GenerateReports(DocumentTemplate template) { foreach (var customer in _customers) { var personalizedDocument = template.PersonalizeForCustomer(customer); Console.WriteLine($\"Generated report for: {customer.Name}\"); Console.WriteLine(personalizedDocument.ToString()); Console.WriteLine(new string('=', 80)); } } } public class CustomerData { public string Name { get; set; } = \"\"; public string Company { get; set; } = \"\"; public Address Address { get; set; } = new Address(); public List<Transaction> Transactions { get; set; } = new List<Transaction>(); public decimal CreditLimit { get; set; } public DateTime LastPaymentDate { get; set; } public decimal TotalBalance => Transactions.Sum(t => t.Amount); public decimal AverageTransaction => Transactions.Any() ? Transactions.Average(t => t.Amount) : 0; public int TransactionCount => Transactions.Count; } public class Address { public string Street { get; set; } = \"\"; public string City { get; set; } = \"\"; public string State { get; set; } = \"\"; public PostalData ZipCode { get; set; } = new PostalData(\"00000\"); public CountryRegion Country { get; set; } = CountryRegion.UnitedStates; } public class Transaction { public DateTime Date { get; set; } public string Description { get; set; } = \"\"; public decimal Amount { get; set; } public TransactionType Type { get; set; } } public enum TransactionType { Sale, Payment, Credit, Adjustment } Document Template Builder public class DocumentTemplate { private readonly LanguageIdentifier _language; private readonly List<FieldInstruction> _fields; private readonly List<Formula> _formulas; public DocumentTemplate(LanguageIdentifier language) { _language = language; _fields = new List<FieldInstruction>(); _formulas = new List<Formula>(); } public void AddHeaderFields() { // Company name from document properties var companyField = new FieldInstruction(\"DOCPROPERTY\"); companyField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"Company\")); _fields.Add(companyField); // Localized date field var dateField = CreateLocalizedDateField(); _fields.Add(dateField); // Page numbering var pageField = new FieldInstruction(\"PAGE\"); _fields.Add(pageField); var pageTotalField = new FieldInstruction(\"NUMPAGES\"); _fields.Add(pageTotalField); } public void AddAddressSection() { // Customer greeting with name formatting var greetingField = new FieldInstruction(\"GREETINGLINE\"); greetingField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\f\")); greetingField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, GetLocalizedGreeting())); greetingField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\l\")); greetingField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, GetLocalizedPunctuation())); _fields.Add(greetingField); // Address block with country-specific formatting var addressField = new FieldInstruction(\"ADDRESSBLOCK\"); addressField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\l\")); addressField.Arguments.Add(new FieldArgument(FieldArgumentType.Number, ((int)_language).ToString())); _fields.Add(addressField); // Postal barcode for US addresses var barcodeField = CreateConditionalBarcodeField(); _fields.Add(barcodeField); } public void AddFinancialSummary() { // Current balance var balanceField = new FieldInstruction(\"MERGEFIELD\"); balanceField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"TotalBalance\")); balanceField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\#\")); balanceField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, GetLocalizedCurrencyFormat())); _fields.Add(balanceField); // Credit utilization calculation var creditUtilizationFormula = FormulaParser.Parse(\"=TotalBalance/CreditLimit*100\"); _formulas.Add(creditUtilizationFormula); // Average transaction amount var avgField = new FieldInstruction(\"MERGEFIELD\"); avgField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"AverageTransaction\")); avgField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\#\")); avgField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, GetLocalizedCurrencyFormat())); _fields.Add(avgField); // Days since last payment var daysSincePayment = new FieldInstruction(\"IF\"); var lastPaymentDate = new FieldInstruction(\"MERGEFIELD\"); lastPaymentDate.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"LastPaymentDate\")); daysSincePayment.Arguments.Add(new FieldArgument(FieldArgumentType.NestedField, lastPaymentDate)); daysSincePayment.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"<>\")); daysSincePayment.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"\")); // Calculate days difference var daysCalc = new FieldInstruction(\"DATE\"); daysCalc.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\@\")); daysCalc.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"d\")); daysSincePayment.Arguments.Add(new FieldArgument(FieldArgumentType.NestedField, daysCalc)); daysSincePayment.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"No payment recorded\")); _fields.Add(daysSincePayment); } public void AddTransactionTable() { // Database field for transaction details var dbField = new FieldInstruction(\"DATABASE\"); dbField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\d\")); dbField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"OLEDB;Provider=Microsoft.ACE.OLEDB.12.0;Data Source=transactions.xlsx;\")); dbField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\s\")); dbField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"SELECT Date, Description, Amount FROM Transactions WHERE CustomerID = { MERGEFIELD CustomerID }\")); dbField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\t\")); dbField.Arguments.Add(new FieldArgument(FieldArgumentType.Number, ((int)DatabaseTableFormat.Professional).ToString())); _fields.Add(dbField); } public void AddFooterSection() { // Terms and conditions with hyperlink var termsLink = new FieldInstruction(\"HYPERLINK\"); termsLink.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"https://company.com/terms\")); termsLink.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, GetLocalizedTermsText())); termsLink.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\o\")); termsLink.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"View full terms and conditions\")); _fields.Add(termsLink); // Contact information var contactField = new FieldInstruction(\"DOCPROPERTY\"); contactField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"ContactInfo\")); _fields.Add(contactField); } private FieldInstruction CreateLocalizedDateField() { var dateField = new FieldInstruction(\"DATE\"); dateField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\@\")); string dateFormat = _language switch { LanguageIdentifier.EnglishUS => \"MMMM d, yyyy\", LanguageIdentifier.EnglishUK => \"d MMMM yyyy\", LanguageIdentifier.FrenchFrance => \"d MMMM yyyy\", LanguageIdentifier.GermanGermany => \"d. MMMM yyyy\", LanguageIdentifier.Japanese => \"yyyy年MM月dd日\", _ => \"MMMM d, yyyy\" }; dateField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, dateFormat)); return dateField; } private FieldInstruction CreateConditionalBarcodeField() { var ifField = new FieldInstruction(\"IF\"); // Check if country is US var countryField = new FieldInstruction(\"MERGEFIELD\"); countryField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"Country\")); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.NestedField, countryField)); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"=\")); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"UnitedStates\")); // Create barcode if US var barcodeField = new FieldInstruction(\"BARCODE\"); var zipField = new FieldInstruction(\"MERGEFIELD\"); zipField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"ZipCode\")); barcodeField.Arguments.Add(new FieldArgument(FieldArgumentType.NestedField, zipField)); barcodeField.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\f\")); barcodeField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"A\")); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.NestedField, barcodeField)); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"\")); return ifField; } private string GetLocalizedGreeting() { return _language switch { LanguageIdentifier.EnglishUS or LanguageIdentifier.EnglishUK => \"Dear\", LanguageIdentifier.FrenchFrance => \"Cher\", LanguageIdentifier.GermanGermany => \"Liebe\", LanguageIdentifier.Spanish => \"Estimado\", _ => \"Dear\" }; } private string GetLocalizedPunctuation() { return _language switch { LanguageIdentifier.FrenchFrance => \" :\", LanguageIdentifier.GermanGermany => \",\", _ => \",\" }; } private string GetLocalizedCurrencyFormat() { return _language switch { LanguageIdentifier.EnglishUS => \"$#,##0.00\", LanguageIdentifier.EnglishUK => \"£#,##0.00\", LanguageIdentifier.FrenchFrance => \"#,##0.00 €\", LanguageIdentifier.GermanGermany => \"#.##0,00 €\", LanguageIdentifier.Japanese => \"¥#,##0\", _ => \"$#,##0.00\" }; } private string GetLocalizedTermsText() { return _language switch { LanguageIdentifier.EnglishUS or LanguageIdentifier.EnglishUK => \"Terms and Conditions\", LanguageIdentifier.FrenchFrance => \"Conditions Générales\", LanguageIdentifier.GermanGermany => \"Allgemeine Geschäftsbedingungen\", LanguageIdentifier.Spanish => \"Términos y Condiciones\", _ => \"Terms and Conditions\" }; } public PersonalizedDocument PersonalizeForCustomer(CustomerData customer) { var personalizedFields = new List<string>(); foreach (var field in _fields) { string personalizedField = PersonalizeField(field, customer); personalizedFields.Add(personalizedField); } var personalizedFormulas = new List<string>(); foreach (var formula in _formulas) { string personalizedFormula = PersonalizeFormula(formula, customer); personalizedFormulas.Add(personalizedFormula); } return new PersonalizedDocument(customer, personalizedFields, personalizedFormulas); } private string PersonalizeField(FieldInstruction field, CustomerData customer) { // This would typically involve mail merge data binding // For demonstration, we'll show the field structure return $\"Field: {field}\"; } private string PersonalizeFormula(Formula formula, CustomerData customer) { // Replace formula variables with actual customer data string formulaText = formula.ToString(); formulaText = formulaText.Replace(\"TotalBalance\", customer.TotalBalance.ToString()); formulaText = formulaText.Replace(\"CreditLimit\", customer.CreditLimit.ToString()); try { Ast.Node personalizedFormula = FormulaParser.Parse(formulaText); return $\"Formula: {personalizedFormula} (Original: {formula})\"; } catch { return $\"Formula (unparseable): {formulaText}\"; } } } public class PersonalizedDocument { public CustomerData Customer { get; } public List<string> Fields { get; } public List<string> Formulas { get; } public PersonalizedDocument(CustomerData customer, List<string> fields, List<string> formulas) { Customer = customer; Fields = fields; Formulas = formulas; } public override string ToString() { var result = new System.Text.StringBuilder(); result.AppendLine($\"FINANCIAL REPORT FOR: {Customer.Name}\"); result.AppendLine($\"Company: {Customer.Company}\"); result.AppendLine($\"Address: {Customer.Address.Street}, {Customer.Address.City}, {Customer.Address.State} {Customer.Address.ZipCode}\"); result.AppendLine(); result.AppendLine(\"FIELDS:\"); foreach (var field in Fields) { result.AppendLine($\" {field}\"); } result.AppendLine(); result.AppendLine(\"FORMULAS:\"); foreach (var formula in Formulas) { result.AppendLine($\" {formula}\"); } result.AppendLine(); result.AppendLine($\"Total Balance: ${Customer.TotalBalance:N2}\"); result.AppendLine($\"Credit Limit: ${Customer.CreditLimit:N2}\"); result.AppendLine($\"Average Transaction: ${Customer.AverageTransaction:N2}\"); result.AppendLine($\"Transaction Count: {Customer.TransactionCount}\"); return result.ToString(); } } Usage Example public class Program { public static void Main() { // Create report generator for US English var reportGenerator = new FinancialReportGenerator(LanguageIdentifier.EnglishUS); // Add sample customers reportGenerator.AddCustomer(CreateSampleCustomer1()); reportGenerator.AddCustomer(CreateSampleCustomer2()); // Create document template var template = reportGenerator.CreateReportTemplate(); // Generate personalized reports reportGenerator.GenerateReports(template); Console.WriteLine(\"\\n\" + new string('=', 80)); Console.WriteLine(\"FRENCH VERSION\"); Console.WriteLine(new string('=', 80)); // Generate French version var frenchGenerator = new FinancialReportGenerator(LanguageIdentifier.FrenchFrance); frenchGenerator.AddCustomer(CreateSampleCustomer1()); var frenchTemplate = frenchGenerator.CreateReportTemplate(); frenchGenerator.GenerateReports(frenchTemplate); } private static CustomerData CreateSampleCustomer1() { return new CustomerData { Name = \"John Smith\", Company = \"Acme Corporation\", Address = new Address { Street = \"123 Main Street\", City = \"Anytown\", State = \"CA\", ZipCode = new PostalData(\"12345-6789\"), Country = CountryRegion.UnitedStates }, CreditLimit = 10000m, LastPaymentDate = DateTime.Now.AddDays(-15), Transactions = new List<Transaction> { new Transaction { Date = DateTime.Now.AddDays(-30), Description = \"Purchase #1001\", Amount = 250.50m, Type = TransactionType.Sale }, new Transaction { Date = DateTime.Now.AddDays(-25), Description = \"Purchase #1002\", Amount = 175.25m, Type = TransactionType.Sale }, new Transaction { Date = DateTime.Now.AddDays(-20), Description = \"Payment\", Amount = -200.00m, Type = TransactionType.Payment }, new Transaction { Date = DateTime.Now.AddDays(-10), Description = \"Purchase #1003\", Amount = 89.99m, Type = TransactionType.Sale } } }; } private static CustomerData CreateSampleCustomer2() { return new CustomerData { Name = \"Jane Doe\", Company = \"Global Industries\", Address = new Address { Street = \"456 Business Ave\", City = \"Commerce City\", State = \"NY\", ZipCode = new PostalData(\"54321\"), Country = CountryRegion.UnitedStates }, CreditLimit = 25000m, LastPaymentDate = DateTime.Now.AddDays(-5), Transactions = new List<Transaction> { new Transaction { Date = DateTime.Now.AddDays(-45), Description = \"Bulk Order #2001\", Amount = 1250.00m, Type = TransactionType.Sale }, new Transaction { Date = DateTime.Now.AddDays(-30), Description = \"Payment\", Amount = -1000.00m, Type = TransactionType.Payment }, new Transaction { Date = DateTime.Now.AddDays(-15), Description = \"Service Fee\", Amount = 45.00m, Type = TransactionType.Sale }, new Transaction { Date = DateTime.Now.AddDays(-5), Description = \"Payment\", Amount = -295.00m, Type = TransactionType.Payment } } }; } } Advanced Features Demonstration public static class AdvancedFeatures { public static void DemonstrateFormulaManipulation() { Console.WriteLine(\"=== Formula Manipulation Demo ===\"); // Parse complex financial formulas string[] formulas = { \"=IF(TotalBalance>CreditLimit*0.8,\"High Risk\",\"Normal\")\", \"=ROUND((TotalBalance/CreditLimit)*100,2)\", \"=VLOOKUP(CustomerID,CreditRatings,2,FALSE)\", \"=SUM(TransactionAmounts)*TaxRate\" }; foreach (string formulaText in formulas) { try { Ast.Node formula = FormulaParser.Parse(formulaText); Console.WriteLine($\"✓ Parsed: {formula}\"); // Demonstrate formula reconstruction string reconstructed = formula.ToString(); Console.WriteLine($\" Reconstructed: {reconstructed}\"); // Verify reconstruction by re-parsing Ast.Node reparsed = FormulaParser.Parse(reconstructed); Console.WriteLine($\" Re-parsed successfully: {reparsed}\"); } catch (Exception ex) { Console.WriteLine($\"✗ Error with '{formulaText}': {ex.Message}\"); } Console.WriteLine(); } } public static void DemonstrateComplexFieldInstructions() { Console.WriteLine(\"=== Complex Field Instructions Demo ===\"); // Nested IF with multiple conditions string complexIf = \"IF { IF { MERGEFIELD Department } = \"Sales\" { MERGEFIELD SalesTarget } { MERGEFIELD StandardTarget } } > { MERGEFIELD ActualSales } \"Target Met\" \"Below Target\"\"; try { FieldInstruction field = FieldParser.Parse(complexIf); Console.WriteLine($\"✓ Complex IF parsed: {field}\"); // Analyze nested structure int nestedCount = 0; foreach (var arg in field.Arguments) { if (arg.Type == FieldArgumentType.NestedField) { nestedCount++; Console.WriteLine($\" Found nested field: {arg.Value}\"); } } Console.WriteLine($\" Total nested fields: {nestedCount}\"); } catch (Exception ex) { Console.WriteLine($\"✗ Error: {ex.Message}\"); } } public static void DemonstrateDataValidation() { Console.WriteLine(\"=== Data Validation Demo ===\"); // Test postal data validation string[] zipCodes = { \"12345\", \"12345-6789\", \"123456789\", \"1234\", \"abcde\" }; foreach (string zip in zipCodes) { try { PostalData postal = new PostalData(zip); Console.WriteLine($\"✓ Valid ZIP: {postal}\"); } catch (ArgumentException) { Console.WriteLine($\"✗ Invalid ZIP: {zip}\"); } } // Test measurement values int[] measurements = { -32, -31, 0, 31, 32 }; foreach (int measure in measurements) { try { PtsMeasurementValue pts = new PtsMeasurementValue(measure); Console.WriteLine($\"✓ Valid measurement: {pts} points\"); } catch (ArgumentOutOfRangeException) { Console.WriteLine($\"✗ Invalid measurement: {measure} points\"); } } } } This comprehensive example demonstrates how all the OpenLanguage components work together to create a sophisticated document processing application with real-world functionality including formula parsing, field instruction processing, data validation, and internationalization support."
  },
  "docs/examples/field-instruction.html": {
    "href": "docs/examples/field-instruction.html",
    "title": "Field Instruction Examples | OpenLanguage Documentation",
    "summary": "Field Instruction Examples This document demonstrates how to use the OpenLanguage WordprocessingML FieldInstruction parser to parse and manipulate Microsoft Word field codes. Basic Usage Parsing Simple Field Instructions using OpenLanguage.WordprocessingML.FieldInstruction; // Parse a simple MERGEFIELD instruction FieldInstruction mergeField = FieldParser.Parse(\"MERGEFIELD FirstName\"); Console.WriteLine($\"Instruction: {mergeField.Instruction}\"); Console.WriteLine($\"Arguments count: {mergeField.Arguments.Count}\"); Console.WriteLine($\"Reconstructed: {mergeField}\"); // Parse a field with switches FieldInstruction dateField = FieldParser.Parse(\"DATE \\@ \"MMMM d, yyyy\"\"); Console.WriteLine($\"Date field: {dateField}\"); Safe Parsing with TryParse using OpenLanguage.WordprocessingML.FieldInstruction; string[] fieldCodes = { \"MERGEFIELD LastName\", \"IF { MERGEFIELD Age } > 18 \"Adult\" \"Minor\"\", \"INVALID_FIELD_CODE\", \"HYPERLINK \"https://example.com\" \"Click here\"\" }; foreach (string fieldCode in fieldCodes) { FieldInstruction? result = FieldParser.TryParse(fieldCode); if (result != null) { Console.WriteLine($\"✓ Successfully parsed: {result.Instruction}\"); Console.WriteLine($\" Arguments: {result.Arguments.Count}\"); } else { Console.WriteLine($\"✗ Failed to parse: {fieldCode}\"); } } Common Field Types MERGEFIELD Instructions using OpenLanguage.WordprocessingML.FieldInstruction; // Simple merge field FieldInstruction simpleMerge = FieldParser.Parse(\"MERGEFIELD CustomerName\"); // Merge field with formatting switch FieldInstruction formattedMerge = FieldParser.Parse(\"MERGEFIELD OrderDate \\@ \"dddd, MMMM dd, yyyy\"\"); // Merge field with text formatting switches FieldInstruction textMerge = FieldParser.Parse(\"MERGEFIELD CompanyName \\* Upper \\* FirstCap\"); Console.WriteLine($\"Simple merge: {simpleMerge}\"); Console.WriteLine($\"Formatted merge: {formattedMerge}\"); Console.WriteLine($\"Text formatted: {textMerge}\"); HYPERLINK Instructions using OpenLanguage.WordprocessingML.FieldInstruction; // Basic hyperlink FieldInstruction basicLink = FieldParser.Parse(\"HYPERLINK \"https://www.example.com\"\"); // Hyperlink with display text FieldInstruction linkWithText = FieldParser.Parse(\"HYPERLINK \"https://www.example.com\" \"Visit Example\"\"); // Hyperlink with switches FieldInstruction linkWithSwitch = FieldParser.Parse(\"HYPERLINK \"mailto:user@example.com\" \\o \"Send email\"\"); Console.WriteLine($\"Basic link: {basicLink}\"); Console.WriteLine($\"Link with text: {linkWithText}\"); Console.WriteLine($\"Link with switch: {linkWithSwitch}\"); IF Instructions using OpenLanguage.WordprocessingML.FieldInstruction; // Simple IF field FieldInstruction simpleIf = FieldParser.Parse(\"IF 1 = 1 \"True\" \"False\"\"); // IF field with nested MERGEFIELD FieldInstruction nestedIf = FieldParser.Parse(\"IF { MERGEFIELD Age } > 18 \"Adult\" \"Minor\"\"); // Complex IF with comparison operators FieldInstruction complexIf = FieldParser.Parse(\"IF { MERGEFIELD Salary } >= 50000 \"High earner\" \"Standard earner\"\"); Console.WriteLine($\"Simple IF: {simpleIf}\"); Console.WriteLine($\"Nested IF: {nestedIf}\"); Console.WriteLine($\"Complex IF: {complexIf}\"); DATE and TIME Instructions using OpenLanguage.WordprocessingML.FieldInstruction; // Current date FieldInstruction currentDate = FieldParser.Parse(\"DATE\"); // Formatted date FieldInstruction formattedDate = FieldParser.Parse(\"DATE \\@ \"MMMM d, yyyy\"\"); // Time field FieldInstruction timeField = FieldParser.Parse(\"TIME \\@ \"h:mm AM/PM\"\"); // Creation time FieldInstruction createTime = FieldParser.Parse(\"CREATEDATE \\@ \"MM/dd/yyyy h:mm AM/PM\"\"); Console.WriteLine($\"Current date: {currentDate}\"); Console.WriteLine($\"Formatted date: {formattedDate}\"); Console.WriteLine($\"Time: {timeField}\"); Console.WriteLine($\"Creation time: {createTime}\"); DOCPROPERTY Instructions using OpenLanguage.WordprocessingML.FieldInstruction; // Document properties FieldInstruction author = FieldParser.Parse(\"DOCPROPERTY Author\"); FieldInstruction title = FieldParser.Parse(\"DOCPROPERTY Title\"); FieldInstruction company = FieldParser.Parse(\"DOCPROPERTY Company\"); // Custom properties FieldInstruction customProp = FieldParser.Parse(\"DOCPROPERTY \"Project Name\"\"); Console.WriteLine($\"Author: {author}\"); Console.WriteLine($\"Title: {title}\"); Console.WriteLine($\"Company: {company}\"); Console.WriteLine($\"Custom property: {customProp}\"); Working with Arguments Accessing Field Arguments using OpenLanguage.WordprocessingML.FieldInstruction; FieldInstruction field = FieldParser.Parse(\"MERGEFIELD FirstName \\* Upper \\b \"Default Text\"\"); Console.WriteLine($\"Instruction: {field.Instruction}\"); Console.WriteLine($\"Number of arguments: {field.Arguments.Count}\"); foreach (var arg in field.Arguments) { Console.WriteLine($\" Type: {arg.Type}, Value: {arg.Value}\"); } Modifying Field Arguments using OpenLanguage.WordprocessingML.FieldInstruction; // Parse an existing field FieldInstruction field = FieldParser.Parse(\"MERGEFIELD CustomerName\"); // Add formatting switches field.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\* Upper\")); field.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\* FirstCap\")); // Add default text field.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"Unknown Customer\")); Console.WriteLine($\"Modified field: {field}\"); Working with String Literals using OpenLanguage.WordprocessingML.FieldInstruction; // Field with quoted strings FieldInstruction quotedField = FieldParser.Parse(\"HYPERLINK \"https://example.com\" \"Visit \"Example\" Site\"\"); foreach (var arg in quotedField.Arguments) { if (arg.Type == FieldArgumentType.StringLiteral) { Console.WriteLine($\"String literal: {arg.Value}\"); Console.WriteLine($\"Reconstructed: {arg}\"); // Shows proper escaping } } Advanced Examples Nested Field Instructions using OpenLanguage.WordprocessingML.FieldInstruction; // Complex nested field string complexField = \"IF { MERGEFIELD Department } = \"Sales\" { MERGEFIELD SalesBonus } { MERGEFIELD StandardBonus }\"; FieldInstruction nested = FieldParser.Parse(complexField); Console.WriteLine($\"Nested field: {nested}\"); // Access nested instructions foreach (var arg in nested.Arguments) { if (arg.Type == FieldArgumentType.NestedField && arg.Value is FieldInstruction nestedInstruction) { Console.WriteLine($\" Nested instruction: {nestedInstruction.Instruction}\"); } } ADDRESSBLOCK Instructions using OpenLanguage.WordprocessingML.FieldInstruction; // Address block with formatting FieldInstruction addressBlock = FieldParser.Parse(\"ADDRESSBLOCK \\c 2 \\d \\e \"United States\" \\f \"\"<<_RETURN_>>\"\"\"); Console.WriteLine($\"Address block: {addressBlock}\"); // Address block with language formatting FieldInstruction addressLang = FieldParser.Parse(\"ADDRESSBLOCK \\c 1 \\l 1033\"); Console.WriteLine($\"Address with language: {addressLang}\"); GREETINGLINE Instructions using OpenLanguage.WordprocessingML.FieldInstruction; // Standard greeting line FieldInstruction greeting = FieldParser.Parse(\"GREETINGLINE \\f \"Dear\" \\l \",\" \\e \"Dear Sir or Madam,\"\"); Console.WriteLine($\"Greeting line: {greeting}\"); // Custom greeting format FieldInstruction customGreeting = FieldParser.Parse(\"GREETINGLINE \\f \"Hello\" \\l \"!\" \\e \"Hello there!\"\"); Console.WriteLine($\"Custom greeting: {customGreeting}\"); DATABASE Instructions using OpenLanguage.WordprocessingML.FieldInstruction; // Database field with connection string FieldInstruction database = FieldParser.Parse(\"DATABASE \\d \"Data Source=server;Initial Catalog=db;\" \\s \"SELECT * FROM customers\" \\t 5\"); Console.WriteLine($\"Database field: {database}\"); Working with Switches Common Formatting Switches using OpenLanguage.WordprocessingML.FieldInstruction; // Date formatting switches FieldInstruction dateFormat = FieldParser.Parse(\"DATE \\@ \"dddd, MMMM dd, yyyy\"\"); // Numeric formatting switches FieldInstruction numFormat = FieldParser.Parse(\"MERGEFIELD Amount \\# \"$#,##0.00\"\"); // Text formatting switches FieldInstruction textFormat = FieldParser.Parse(\"MERGEFIELD Name \\* Upper \\* FirstCap\"); Console.WriteLine($\"Date format: {dateFormat}\"); Console.WriteLine($\"Number format: {numFormat}\"); Console.WriteLine($\"Text format: {textFormat}\"); Custom Switch Processing using OpenLanguage.WordprocessingML.FieldInstruction; FieldInstruction field = FieldParser.Parse(\"MERGEFIELD Data \\@ \"custom format\" \\* Upper \\b \"default\"\"); // Process switches foreach (var arg in field.Arguments) { if (arg.Type == FieldArgumentType.Switch) { string switchValue = arg.Value?.ToString() ?? \"\"; if (switchValue.StartsWith(\"\\@\")) { Console.WriteLine($\"Found date/numeric format switch: {switchValue}\"); } else if (switchValue.StartsWith(\"\\*\")) { Console.WriteLine($\"Found text format switch: {switchValue}\"); } else if (switchValue.StartsWith(\"\\b\")) { Console.WriteLine($\"Found bookmark/default switch: {switchValue}\"); } } } Field Reconstruction and Modification Rebuilding Fields using OpenLanguage.WordprocessingML.FieldInstruction; // Parse a simple field FieldInstruction original = FieldParser.Parse(\"MERGEFIELD FirstName\"); // Modify the instruction original.Instruction = \"MERGEFIELD\"; original.Arguments.Clear(); original.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"LastName\")); original.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\* Upper\")); string rebuilt = original.ToString(); Console.WriteLine($\"Rebuilt field: {rebuilt}\"); // Verify it parses correctly FieldInstruction verified = FieldParser.Parse(rebuilt); Console.WriteLine($\"Verification successful: {verified}\"); Creating Fields Programmatically using OpenLanguage.WordprocessingML.FieldInstruction; // Create a new HYPERLINK field FieldInstruction hyperlink = new FieldInstruction(\"HYPERLINK\"); hyperlink.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"https://www.example.com\")); hyperlink.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"Visit Example Site\")); hyperlink.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\o\")); hyperlink.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"Example tooltip\")); Console.WriteLine($\"Created hyperlink: {hyperlink}\"); // Create a complex IF field FieldInstruction ifField = new FieldInstruction(\"IF\"); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"1\")); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"=\")); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"1\")); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"True\")); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"False\")); Console.WriteLine($\"Created IF field: {ifField}\"); Error Handling Handling Parse Errors using OpenLanguage.WordprocessingML.FieldInstruction; using System; string[] invalidFields = { \"\", // Empty field \" \", // Whitespace only \"MERGEFIELD\", // Missing required argument \"{ UNCLOSED\", // Unclosed brace }; foreach (string fieldCode in invalidFields) { try { FieldInstruction result = FieldParser.Parse(fieldCode); Console.WriteLine($\"Unexpectedly succeeded: {result}\"); } catch (Exception ex) { Console.WriteLine($\"Expected error for '{fieldCode}': {ex.Message}\"); } } This comprehensive example demonstrates the core functionality of the OpenLanguage FieldInstruction parser, showing how to parse, manipulate, and reconstruct Microsoft Word field codes."
  },
  "docs/examples/formula.html": {
    "href": "docs/examples/formula.html",
    "title": "Formula Parsing Examples | OpenLanguage Documentation",
    "summary": "Formula Parsing Examples This document demonstrates how to use the OpenLanguage SpreadsheetML Formula parser to parse and manipulate Excel formulas. Basic Usage Parsing Simple Formulas using OpenLanguage.SpreadsheetML.Formula; // Parse a simple arithmetic formula Ast.Node formula = FormulaParser.Parse(\"=1+2*3\"); Console.WriteLine($\"Parsed AST: {formula}\"); // Parse cell references Ast.Node cellRef = FormulaParser.Parse(\"=A1+B2\"); Console.WriteLine($\"Cell reference formula: {cellRef}\"); // Parse function calls Ast.Node func = FormulaParser.Parse(\"=SUM(A1:A10)\"); Console.WriteLine($\"Function call: {func}\"); Safe Parsing with TryParse using OpenLanguage.SpreadsheetML.Formula; string[] testFormulas = { \"=A1+B1\", \"=SUM(1,2,3)\", \"=INVALID_SYNTAX(\", \"=IF(A1>0,\"Positive\",\"Non-positive\")\" }; foreach (string formulaText in testFormulas) { Ast.Node? result = FormulaParser.TryParse(formulaText); if (result != null) { Console.WriteLine($\"✓ Successfully parsed: {result}\"); } else { Console.WriteLine($\"✗ Failed to parse: {formulaText}\"); } } Working with Different Formula Types Arithmetic Operations using OpenLanguage.SpreadsheetML.Formula; // Basic arithmetic Ast.Node addition = FormulaParser.Parse(\"=10+5\"); Ast.Node subtraction = FormulaParser.Parse(\"=10-5\"); Ast.Node multiplication = FormulaParser.Parse(\"=10*5\"); Ast.Node division = FormulaParser.Parse(\"=10/5\"); Ast.Node exponentiation = FormulaParser.Parse(\"=2^3\"); // Complex expressions with precedence Ast.Node complex = FormulaParser.Parse(\"=(1+2)*3-4/2\"); Console.WriteLine($\"Complex expression: {complex}\"); Cell References using OpenLanguage.SpreadsheetML.Formula; // Relative references Ast.Node relative = FormulaParser.Parse(\"=A1+B2\"); // Absolute references Ast.Node absolute = FormulaParser.Parse(\"=$A$1+$B$2\"); // Mixed references Ast.Node mixed = FormulaParser.Parse(\"=$A1+B$2\"); // Range references Ast.Node range = FormulaParser.Parse(\"=SUM(A1:B10)\"); Console.WriteLine($\"Range formula: {range}\"); Function Calls using OpenLanguage.SpreadsheetML.Formula; // Simple functions Ast.Node sum = FormulaParser.Parse(\"=SUM(1,2,3,4,5)\"); Ast.Node average = FormulaParser.Parse(\"=AVERAGE(A1:A10)\"); Ast.Node count = FormulaParser.Parse(\"=COUNT(A1:A10)\"); // Nested functions Ast.Node nested = FormulaParser.Parse(\"=IF(SUM(A1:A10)>0,AVERAGE(A1:A10),0)\"); Console.WriteLine($\"Nested function: {nested}\"); // Functions with string literals Ast.Node vlookup = FormulaParser.Parse(\"=VLOOKUP(A1,Sheet2!A:B,2,FALSE)\"); Console.WriteLine($\"VLOOKUP: {vlookup}\"); Array Literals using OpenLanguage.SpreadsheetML.Formula; // Horizontal array Ast.Node horizontalArray = FormulaParser.Parse(\"={1,2,3,4}\"); // Vertical array Ast.Node verticalArray = FormulaParser.Parse(\"={1;2;3;4}\"); // 2D array Ast.Node twoDArray = FormulaParser.Parse(\"={\"Name\",\"Age\";\"John\",25;\"Jane\",30}\"); Console.WriteLine($\"2D Array: {twoDArray}\"); Logical Operations using OpenLanguage.SpreadsheetML.Formula; // Comparison operations Ast.Node comparison = FormulaParser.Parse(\"=A1>B1\"); Ast.Node equality = FormulaParser.Parse(\"=A1=B1\"); Ast.Node inequality = FormulaParser.Parse(\"=A1<>B1\"); // Logical functions Ast.Node ifFunction = FormulaParser.Parse(\"=IF(A1>0,\"Positive\",\"Non-positive\")\"); Ast.Node and = FormulaParser.Parse(\"=AND(A1>0,B1<10)\"); Ast.Node or = FormulaParser.Parse(\"=OR(A1>100,B1<0)\"); Console.WriteLine($\"IF function: {ifFunction}\"); Advanced Examples Working with Named Ranges using OpenLanguage.SpreadsheetML.Formula; // Named range references Ast.Node namedRange = FormulaParser.Parse(\"=SUM(SalesData)\"); Ast.Node namedRangeCalc = FormulaParser.Parse(\"=TotalRevenue/TotalCosts\"); Console.WriteLine($\"Named range calculation: {namedRangeCalc}\"); Table References (Excel Tables) using OpenLanguage.SpreadsheetML.Formula; // Structured table references Ast.Node tableRef = FormulaParser.Parse(\"=Table1[@Column1]\"); Ast.Node tableSum = FormulaParser.Parse(\"=SUM(Table1[Revenue])\"); Console.WriteLine($\"Table reference: {tableRef}\"); Error Values using OpenLanguage.SpreadsheetML.Formula; // Excel error values Ast.Node divByZero = FormulaParser.Parse(\"=#DIV/0!\"); Ast.Node naError = FormulaParser.Parse(\"=#N/A\"); Ast.Node valueError = FormulaParser.Parse(\"=#VALUE!\"); Console.WriteLine($\"Error value: {valueError}\"); Modifying Parsed Formulas Accessing AST Ast.Nodes using OpenLanguage.SpreadsheetML.Formula; using OpenLanguage.SpreadsheetML.Formula.Ast; Ast.Node formula = FormulaParser.Parse(\"=A1+B1\"); Ast.Node rootNode = formula; // The AST can be traversed and modified // Note: Specific node manipulation depends on the AST structure Console.WriteLine($\"Original: {formula}\"); Console.WriteLine($\"Reconstructed: {rootNode}\"); Formula Reconstruction using OpenLanguage.SpreadsheetML.Formula; // Parse a formula Ast.Node original = FormulaParser.Parse(\"=SUM(A1:A10)/COUNT(A1:A10)\"); // The ToString() method reconstructs the formula from the AST string reconstructed = original.ToString(); Console.WriteLine($\"Reconstructed: {reconstructed}\"); // Verify they're equivalent Ast.Node reparsed = FormulaParser.Parse(reconstructed); Console.WriteLine($\"Reparsed successfully: {reparsed}\"); Error Handling Invalid Formula Handling using OpenLanguage.SpreadsheetML.Formula; using System; string[] invalidFormulas = { \"=1+\", // Incomplete expression \"=(1+2\", // Unmatched parenthesis \"=SUM(1,\", // Incomplete function call \"=INVALID(\", // Unknown function with incomplete syntax }; foreach (string formula in invalidFormulas) { try { Ast.Node result = FormulaParser.Parse(formula); Console.WriteLine($\"Unexpectedly succeeded: {result}\"); } catch (InvalidOperationException ex) { Console.WriteLine($\"Expected error for '{formula}': {ex.Message}\"); } catch (ArgumentException ex) { Console.WriteLine($\"Argument error for '{formula}': {ex.Message}\"); } } Performance Considerations Batch Processing using OpenLanguage.SpreadsheetML.Formula; using System.Diagnostics; string[] formulas = { \"=SUM(A1:A1000)\", \"=AVERAGE(B1:B1000)\", \"=COUNT(C1:C1000)\", \"=IF(D1>0,D1*E1,0)\", \"=VLOOKUP(F1,Sheet2!A:Z,10,FALSE)\" }; Stopwatch sw = Stopwatch.StartNew(); foreach (string formulaText in formulas) { Ast.Node? result = FormulaParser.TryParse(formulaText); if (result != null) { // Process the parsed formula string reconstructed = result.ToString(); } } sw.Stop(); Console.WriteLine($\"Processed {formulas.Length} formulas in {sw.ElapsedMilliseconds}ms\"); This example demonstrates the core functionality of the OpenLanguage Formula parser, showing how to parse various types of Excel formulas and work with the resulting Abstract Syntax Tree (AST)."
  },
  "docs/examples/language-identifier.html": {
    "href": "docs/examples/language-identifier.html",
    "title": "Language Identifiers and Localization | OpenLanguage Documentation",
    "summary": "Language Identifiers and Localization This document demonstrates how to work with the OpenLanguage WordprocessingML language identifier system for international document processing. Language Identifier Enumeration Basic Usage using OpenLanguage.WordprocessingML; // Using predefined language identifiers LanguageIdentifier english = LanguageIdentifier.EnglishUS; LanguageIdentifier french = LanguageIdentifier.FrenchFrance; LanguageIdentifier german = LanguageIdentifier.GermanGermany; Console.WriteLine($\"English US LCID: {(int)english}\"); // 1033 Console.WriteLine($\"French France LCID: {(int)french}\"); // 1036 Console.WriteLine($\"German Germany LCID: {(int)german}\"); // 1031 Working with Regional Variants using OpenLanguage.WordprocessingML; // English variants LanguageIdentifier[] englishVariants = { LanguageIdentifier.EnglishUS, // 1033 LanguageIdentifier.EnglishUK, // 2057 LanguageIdentifier.EnglishCanada, // 4105 LanguageIdentifier.EnglishAustralia, // 3081 LanguageIdentifier.EnglishNewZealand, // 5129 LanguageIdentifier.EnglishIndia, // 16393 LanguageIdentifier.EnglishSingapore // 18441 }; foreach (var variant in englishVariants) { Console.WriteLine($\"{variant}: LCID {(int)variant}\"); } // Spanish variants LanguageIdentifier[] spanishVariants = { LanguageIdentifier.SpanishSpain, // 3082 LanguageIdentifier.SpanishMexico, // 2058 LanguageIdentifier.SpanishArgentina, // 11274 LanguageIdentifier.SpanishChile, // 13322 LanguageIdentifier.SpanishUS // 21514 }; foreach (var variant in spanishVariants) { Console.WriteLine($\"{variant}: LCID {(int)variant}\"); } European Languages using OpenLanguage.WordprocessingML; // Major European languages var europeanLanguages = new Dictionary<string, LanguageIdentifier> { [\"French (France)\"] = LanguageIdentifier.FrenchFrance, [\"French (Belgium)\"] = LanguageIdentifier.FrenchBelgium, [\"French (Canada)\"] = LanguageIdentifier.FrenchCanada, [\"French (Switzerland)\"] = LanguageIdentifier.FrenchSwitzerland, [\"German (Germany)\"] = LanguageIdentifier.GermanGermany, [\"German (Austria)\"] = LanguageIdentifier.GermanAustria, [\"German (Switzerland)\"] = LanguageIdentifier.GermanSwitzerland, [\"Italian (Italy)\"] = LanguageIdentifier.ItalianItaly, [\"Italian (Switzerland)\"] = LanguageIdentifier.ItalianSwitzerland, [\"Dutch (Netherlands)\"] = LanguageIdentifier.DutchNetherlands, [\"Dutch (Belgium)\"] = LanguageIdentifier.DutchBelgium }; foreach (var kvp in europeanLanguages) { Console.WriteLine($\"{kvp.Key}: {(int)kvp.Value}\"); } Asian Languages using OpenLanguage.WordprocessingML; // Asian language examples var asianLanguages = new Dictionary<string, LanguageIdentifier> { [\"Japanese\"] = LanguageIdentifier.Japanese, // 1041 [\"Korean\"] = LanguageIdentifier.Korean, // 1042 [\"Chinese (Simplified)\"] = LanguageIdentifier.ChineseSimplified, // 2052 [\"Chinese (Traditional)\"] = LanguageIdentifier.ChineseTraditional, // 1028 [\"Chinese (Hong Kong)\"] = LanguageIdentifier.ChineseTraditionalHongKong, // 3076 [\"Chinese (Singapore)\"] = LanguageIdentifier.ChineseSimplifiedSingapore, // 4100 [\"Thai\"] = LanguageIdentifier.Thai, // 1054 [\"Vietnamese\"] = LanguageIdentifier.Vietnamese, // 1066 [\"Hindi\"] = LanguageIdentifier.Hindi // 1081 }; foreach (var kvp in asianLanguages) { Console.WriteLine($\"{kvp.Key}: {(int)kvp.Value}\"); } Practical Applications Document Language Detection using OpenLanguage.WordprocessingML; public class LanguageDetector { public static string GetLanguageName(LanguageIdentifier languageId) { return languageId switch { LanguageIdentifier.EnglishUS => \"English (United States)\", LanguageIdentifier.EnglishUK => \"English (United Kingdom)\", LanguageIdentifier.FrenchFrance => \"French (France)\", LanguageIdentifier.GermanGermany => \"German (Germany)\", LanguageIdentifier.SpanishSpain => \"Spanish (Spain)\", LanguageIdentifier.Japanese => \"Japanese\", LanguageIdentifier.ChineseSimplified => \"Chinese (Simplified)\", LanguageIdentifier.ChineseTraditional => \"Chinese (Traditional)\", _ => $\"Language ID: {(int)languageId}\" }; } public static bool IsRightToLeft(LanguageIdentifier languageId) { return languageId switch { LanguageIdentifier.Hebrew or LanguageIdentifier.ArabicSaudiArabia or LanguageIdentifier.ArabicEgypt or LanguageIdentifier.ArabicIraq or LanguageIdentifier.ArabicJordan or LanguageIdentifier.ArabicKuwait or LanguageIdentifier.ArabicLebanon or LanguageIdentifier.ArabicLibya or LanguageIdentifier.ArabicMorocco or LanguageIdentifier.ArabicOman or LanguageIdentifier.ArabicQatar or LanguageIdentifier.ArabicSyria or LanguageIdentifier.ArabicTunisia or LanguageIdentifier.ArabicUAE or LanguageIdentifier.ArabicYemen => true, _ => false }; } } // Usage LanguageIdentifier[] testLanguages = { LanguageIdentifier.EnglishUS, LanguageIdentifier.Hebrew, LanguageIdentifier.ArabicSaudiArabia, LanguageIdentifier.Japanese }; foreach (var lang in testLanguages) { string name = LanguageDetector.GetLanguageName(lang); bool isRtl = LanguageDetector.IsRightToLeft(lang); Console.WriteLine($\"{name}: RTL={isRtl}\"); } Regional Formatting using OpenLanguage.WordprocessingML; using System.Globalization; public class RegionalFormatter { public static CultureInfo GetCultureInfo(LanguageIdentifier languageId) { int lcid = (int)languageId; return new CultureInfo(lcid); } public static string FormatCurrency(decimal amount, LanguageIdentifier languageId) { var culture = GetCultureInfo(languageId); return amount.ToString(\"C\", culture); } public static string FormatDate(DateTime date, LanguageIdentifier languageId) { var culture = GetCultureInfo(languageId); return date.ToString(\"D\", culture); } public static string FormatNumber(double number, LanguageIdentifier languageId) { var culture = GetCultureInfo(languageId); return number.ToString(\"N\", culture); } } // Usage examples decimal price = 1234.56m; DateTime today = DateTime.Now; double largeNumber = 1234567.89; var languages = new[] { LanguageIdentifier.EnglishUS, LanguageIdentifier.FrenchFrance, LanguageIdentifier.GermanGermany, LanguageIdentifier.Japanese }; foreach (var lang in languages) { Console.WriteLine($\"Language: {LanguageDetector.GetLanguageName(lang)}\"); Console.WriteLine($\" Currency: {RegionalFormatter.FormatCurrency(price, lang)}\"); Console.WriteLine($\" Date: {RegionalFormatter.FormatDate(today, lang)}\"); Console.WriteLine($\" Number: {RegionalFormatter.FormatNumber(largeNumber, lang)}\"); Console.WriteLine(); } Language-Specific Processing using OpenLanguage.WordprocessingML; public class LanguageSpecificProcessor { public static string GetDefaultDateFormat(LanguageIdentifier languageId) { return languageId switch { LanguageIdentifier.EnglishUS => \"MM/dd/yyyy\", LanguageIdentifier.EnglishUK => \"dd/MM/yyyy\", LanguageIdentifier.GermanGermany => \"dd.MM.yyyy\", LanguageIdentifier.FrenchFrance => \"dd/MM/yyyy\", LanguageIdentifier.Japanese => \"yyyy/MM/dd\", LanguageIdentifier.ChineseSimplified => \"yyyy-MM-dd\", _ => \"MM/dd/yyyy\" }; } public static string GetDefaultTimeFormat(LanguageIdentifier languageId) { return languageId switch { LanguageIdentifier.EnglishUS => \"h:mm tt\", LanguageIdentifier.EnglishUK => \"HH:mm\", LanguageIdentifier.GermanGermany => \"HH:mm\", LanguageIdentifier.FrenchFrance => \"HH:mm\", LanguageIdentifier.Japanese => \"H:mm\", _ => \"h:mm tt\" }; } public static bool Uses24HourFormat(LanguageIdentifier languageId) { return languageId switch { LanguageIdentifier.EnglishUS => false, LanguageIdentifier.EnglishUK => true, LanguageIdentifier.GermanGermany => true, LanguageIdentifier.FrenchFrance => true, LanguageIdentifier.Japanese => true, _ => false }; } } // Usage foreach (var lang in new[] { LanguageIdentifier.EnglishUS, LanguageIdentifier.EnglishUK, LanguageIdentifier.GermanGermany, LanguageIdentifier.Japanese }) { Console.WriteLine($\"{LanguageDetector.GetLanguageName(lang)}:\"); Console.WriteLine($\" Date format: {LanguageSpecificProcessor.GetDefaultDateFormat(lang)}\"); Console.WriteLine($\" Time format: {LanguageSpecificProcessor.GetDefaultTimeFormat(lang)}\"); Console.WriteLine($\" 24-hour format: {LanguageSpecificProcessor.Uses24HourFormat(lang)}\"); Console.WriteLine(); } Language Groups and Families using OpenLanguage.WordprocessingML; public enum LanguageFamily { Germanic, Romance, Slavic, SinoTibetan, Semitic, JapanoKorean, Other } public class LanguageFamilyClassifier { public static LanguageFamily GetLanguageFamily(LanguageIdentifier languageId) { return languageId switch { LanguageIdentifier.EnglishUS or LanguageIdentifier.EnglishUK or LanguageIdentifier.EnglishCanada or LanguageIdentifier.EnglishAustralia or LanguageIdentifier.GermanGermany or LanguageIdentifier.GermanAustria or LanguageIdentifier.GermanSwitzerland or LanguageIdentifier.DutchNetherlands or LanguageIdentifier.DutchBelgium or LanguageIdentifier.Swedish or LanguageIdentifier.SwedishFinland or LanguageIdentifier.NorwegianBokmal or LanguageIdentifier.Danish => LanguageFamily.Germanic, LanguageIdentifier.FrenchFrance or LanguageIdentifier.FrenchBelgium or LanguageIdentifier.FrenchCanada or LanguageIdentifier.SpanishSpain or LanguageIdentifier.SpanishMexico or LanguageIdentifier.SpanishArgentina or LanguageIdentifier.ItalianItaly or LanguageIdentifier.PortugueseBrazil or LanguageIdentifier.PortuguesePortugal or LanguageIdentifier.Romanian => LanguageFamily.Romance, LanguageIdentifier.Russian or LanguageIdentifier.Polish or LanguageIdentifier.Czech or LanguageIdentifier.Slovak or LanguageIdentifier.Croatian or LanguageIdentifier.Bulgarian or LanguageIdentifier.Ukrainian => LanguageFamily.Slavic, LanguageIdentifier.ChineseSimplified or LanguageIdentifier.ChineseTraditional or LanguageIdentifier.ChineseSimplifiedSingapore or LanguageIdentifier.ChineseTraditionalHongKong => LanguageFamily.SinoTibetan, LanguageIdentifier.ArabicSaudiArabia or LanguageIdentifier.ArabicEgypt or LanguageIdentifier.Hebrew => LanguageFamily.Semitic, LanguageIdentifier.Japanese or LanguageIdentifier.Korean => LanguageFamily.JapanoKorean, _ => LanguageFamily.Other }; } } // Usage var sampleLanguages = new[] { LanguageIdentifier.EnglishUS, LanguageIdentifier.FrenchFrance, LanguageIdentifier.GermanGermany, LanguageIdentifier.Russian, LanguageIdentifier.ChineseSimplified, LanguageIdentifier.Japanese, LanguageIdentifier.ArabicSaudiArabia, LanguageIdentifier.Hindi }; foreach (var lang in sampleLanguages) { var family = LanguageFamilyClassifier.GetLanguageFamily(lang); Console.WriteLine($\"{LanguageDetector.GetLanguageName(lang)}: {family}\"); } Integration with Field Instructions using OpenLanguage.WordprocessingML; using OpenLanguage.WordprocessingML.FieldInstruction; public class LocalizedFieldGenerator { public static FieldInstruction CreateLocalizedDateField(LanguageIdentifier languageId) { var dateFormat = LanguageSpecificProcessor.GetDefaultDateFormat(languageId); var field = new FieldInstruction(\"DATE\"); field.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\@\")); field.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, dateFormat)); return field; } public static FieldInstruction CreateLocalizedAddressBlock(LanguageIdentifier languageId) { var field = new FieldInstruction(\"ADDRESSBLOCK\"); // Set language-specific formatting field.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\l\")); field.Arguments.Add(new FieldArgument(FieldArgumentType.Number, ((int)languageId).ToString())); return field; } } // Usage var languages = new[] { LanguageIdentifier.EnglishUS, LanguageIdentifier.FrenchFrance, LanguageIdentifier.GermanGermany }; foreach (var lang in languages) { var dateField = LocalizedFieldGenerator.CreateLocalizedDateField(lang); var addressField = LocalizedFieldGenerator.CreateLocalizedAddressBlock(lang); Console.WriteLine($\"Language: {LanguageDetector.GetLanguageName(lang)}\"); Console.WriteLine($\" Date field: {dateField}\"); Console.WriteLine($\" Address field: {addressField}\"); Console.WriteLine(); } This example demonstrates comprehensive usage of the OpenLanguage language identifier system for creating internationalized and localized document processing applications."
  },
  "docs/examples/types-validation.html": {
    "href": "docs/examples/types-validation.html",
    "title": "Working with Data Types and Validation | OpenLanguage Documentation",
    "summary": "Working with Data Types and Validation This document demonstrates how to use the specialized data types and validation classes provided by OpenLanguage WordprocessingML. Measurement Values (PtsMeasurementValue) Basic Usage using OpenLanguage.WordprocessingML.FieldInstruction; // Create measurement values within valid range (-31 to 31 points) PtsMeasurementValue<int> smallMargin = new PtsMeasurementValue<int>(5); PtsMeasurementValue<int> largeMargin = new PtsMeasurementValue<int>(20); PtsMeasurementValue<int> negativeOffset = new PtsMeasurementValue<int>(-10); Console.WriteLine($\"Small margin: {smallMargin} points\"); Console.WriteLine($\"Large margin: {largeMargin} points\"); Console.WriteLine($\"Negative offset: {negativeOffset} points\"); // Implicit conversion from int PtsMeasurementValue<int> converted = 15; Console.WriteLine($\"Converted value: {converted}\"); // Implicit conversion to int int pointValue = converted; Console.WriteLine($\"Point value: {pointValue}\"); Validation and Error Handling using OpenLanguage.WordprocessingML.FieldInstruction; using System; // Test boundary values int[] testValues = { -32, -31, 0, 31, 32 }; foreach (int value in testValues) { try { PtsMeasurementValue<int> measurement = new PtsMeasurementValue<int>(value); Console.WriteLine($\"✓ Valid: {value} points = {measurement}\"); } catch (ArgumentOutOfRangeException ex) { Console.WriteLine($\"✗ Invalid: {value} points - {ex.Message}\"); } } Practical Applications using OpenLanguage.WordprocessingML.FieldInstruction; public class DocumentFormatter { public static FieldInstruction CreatePositionedBarcode( string barcodeData, PtsMeasurementValue horizontalOffset, PtsMeasurementValue verticalOffset) { var field = new FieldInstruction(\"BARCODE\"); field.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, barcodeData)); field.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\h\")); field.Arguments.Add(new FieldArgument(FieldArgumentType.Number, horizontalOffset.ToString())); field.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\v\")); field.Arguments.Add(new FieldArgument(FieldArgumentType.Number, verticalOffset.ToString())); return field; } } // Usage PtsMeasurementValue leftMargin = 10; PtsMeasurementValue topMargin = -5; FieldInstruction barcode = DocumentFormatter.CreatePositionedBarcode( \"123456789\", leftMargin, topMargin ); Console.WriteLine($\"Positioned barcode field: {barcode}\"); Postal Data Validation (PostalData) ZIP Code Validation using OpenLanguage.WordprocessingML.FieldInstruction; // Valid ZIP code formats string[] validZipCodes = { \"12345\", // 5-digit \"12345-6789\", // 9-digit with hyphen \"123456789\" // 9-digit without hyphen }; foreach (string zip in validZipCodes) { try { PostalData postalData = new PostalData(zip); Console.WriteLine($\"✓ Valid ZIP: {postalData}\"); // Implicit conversion string zipString = postalData; Console.WriteLine($\" As string: {zipString}\"); } catch (ArgumentException ex) { Console.WriteLine($\"✗ Invalid ZIP: {zip} - {ex.Message}\"); } } Invalid ZIP Code Handling using OpenLanguage.WordprocessingML.FieldInstruction; using System; string[] invalidZipCodes = { \"\", // Empty \"1234\", // Too short \"123456\", // Invalid length \"12345-678\", // Invalid 9-digit format \"12345-67890\", // Too long \"abcde\", // Non-numeric \"12345-abcd\" // Non-numeric extension }; foreach (string zip in invalidZipCodes) { try { PostalData postalData = new PostalData(zip); Console.WriteLine($\"Unexpectedly valid: {postalData}\"); } catch (ArgumentException) { Console.WriteLine($\"✓ Correctly rejected: '{zip}'\"); } } Integration with Mail Merge Fields using OpenLanguage.WordprocessingML.FieldInstruction; public class AddressFieldGenerator { public static FieldInstruction CreateBarcodeField(PostalData zipCode, FacingIdentificationMarkType fimType) { var field = new FieldInstruction(\"BARCODE\"); field.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, zipCode.ToString())); // Add FIM type field.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\f\")); string fimValue = fimType == FacingIdentificationMarkType.CourtesyReply ? \"A\" : \"C\"; field.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, fimValue)); return field; } public static FieldInstruction CreateConditionalZipField(string mergeFieldName) { // Create IF field that validates ZIP code format var ifField = new FieldInstruction(\"IF\"); // Create nested MERGEFIELD for ZIP code var zipMergeField = new FieldInstruction(\"MERGEFIELD\"); zipMergeField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, mergeFieldName)); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.NestedField, zipMergeField)); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, \"<>\")); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"\")); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.NestedField, zipMergeField)); ifField.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, \"No ZIP code\")); return ifField; } } // Usage PostalData validZip = \"12345-6789\"; FieldInstruction barcodeField = AddressFieldGenerator.CreateBarcodeField( validZip, FacingIdentificationMarkType.BusinessReply ); FieldInstruction conditionalZip = AddressFieldGenerator.CreateConditionalZipField(\"PostalCode\"); Console.WriteLine($\"Barcode field: {barcodeField}\"); Console.WriteLine($\"Conditional ZIP field: {conditionalZip}\"); XML Namespace Declarations (NamespaceDeclaration) Basic Namespace Handling using OpenLanguage.WordprocessingML.FieldInstruction; // Valid namespace declarations string[] validDeclarations = { \"xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\"\", \"xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"\", \"xmlns:wp=\"http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing\"\", \"xmlns:custom=\"http://example.com/custom-namespace\"\" }; foreach (string declaration in validDeclarations) { try { NamespaceDeclaration ns = new NamespaceDeclaration(declaration); Console.WriteLine($\"✓ Valid namespace:\"); Console.WriteLine($\" Prefix: {ns.Prefix}\"); Console.WriteLine($\" URI: {ns.Uri}\"); Console.WriteLine($\" Declaration: {ns.Declaration}\"); Console.WriteLine(); } catch (ArgumentException ex) { Console.WriteLine($\"✗ Invalid: {declaration} - {ex.Message}\"); } } Invalid Namespace Handling using OpenLanguage.WordprocessingML.FieldInstruction; using System; string[] invalidDeclarations = { \"\", // Empty \"xmlns:prefix=uri\", // Missing quotes \"prefix=\"http://example.com\"\", // Missing xmlns: \"xmlns:=\"http://example.com\"\", // Empty prefix \"xmlns:invalid-prefix=\"http://example.com\"\", // Invalid prefix character \"xmlns:prefix=\"\"\", // Empty URI \"xmlns:prefix=http://example.com\", // Missing quotes around URI }; foreach (string declaration in invalidDeclarations) { try { NamespaceDeclaration ns = new NamespaceDeclaration(declaration); Console.WriteLine($\"Unexpectedly valid: {ns}\"); } catch (ArgumentException) { Console.WriteLine($\"✓ Correctly rejected: '{declaration}'\"); } } Working with XML in Fields using OpenLanguage.WordprocessingML.FieldInstruction; using System.Xml.Linq; public class XmlFieldProcessor { public static FieldInstruction CreateXmlField(NamespaceDeclaration namespaceDecl, string xpath) { var field = new FieldInstruction(\"XML\"); field.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, namespaceDecl.Declaration)); field.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, xpath)); return field; } public static void ProcessXmlNamespace(NamespaceDeclaration namespaceDecl) { // Use the validated namespace in XML processing XNamespace ns = namespaceDecl.Namespace; XName elementName = ns + \"element\"; Console.WriteLine($\"Created XName: {elementName}\"); Console.WriteLine($\"Namespace: {elementName.Namespace}\"); Console.WriteLine($\"Local name: {elementName.LocalName}\"); } } // Usage NamespaceDeclaration wordNamespace = \"xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\"\"; FieldInstruction xmlField = XmlFieldProcessor.CreateXmlField(wordNamespace, \"//w:p/w:t\"); Console.WriteLine($\"XML field: {xmlField}\"); XmlFieldProcessor.ProcessXmlNamespace(wordNamespace); Enumeration Usage Examples Document Property Categories using OpenLanguage.WordprocessingML.FieldInstruction; public class DocumentPropertyFieldGenerator { public static FieldInstruction CreateDocPropertyField(DocumentPropertyCategory category) { var field = new FieldInstruction(\"DOCPROPERTY\"); string propertyName = category switch { DocumentPropertyCategory.Author => \"Author\", DocumentPropertyCategory.Title => \"Title\", DocumentPropertyCategory.Company => \"Company\", DocumentPropertyCategory.CreateTime => \"CreateTime\", DocumentPropertyCategory.LastSavedBy => \"LastSavedBy\", DocumentPropertyCategory.Pages => \"Pages\", DocumentPropertyCategory.Words => \"Words\", DocumentPropertyCategory.Characters => \"Characters\", _ => category.ToString() }; field.Arguments.Add(new FieldArgument(FieldArgumentType.Identifier, propertyName)); return field; } } // Usage DocumentPropertyCategory[] properties = { DocumentPropertyCategory.Author, DocumentPropertyCategory.Title, DocumentPropertyCategory.Company, DocumentPropertyCategory.Pages, DocumentPropertyCategory.Words }; foreach (var property in properties) { FieldInstruction field = DocumentPropertyFieldGenerator.CreateDocPropertyField(property); Console.WriteLine($\"{property}: {field}\"); } Database Table Attributes using OpenLanguage.WordprocessingML.FieldInstruction; public class DatabaseFieldGenerator { public static FieldInstruction CreateDatabaseField( string connectionString, string query, DatabaseTableFormat format, DatabaseTableAttributes attributes) { var field = new FieldInstruction(\"DATABASE\"); // Add connection string field.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\d\")); field.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, connectionString)); // Add SQL query field.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\s\")); field.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, query)); // Add table format field.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\t\")); field.Arguments.Add(new FieldArgument(FieldArgumentType.Number, ((int)format).ToString())); // Add attributes (bitwise combination) if (attributes != DatabaseTableAttributes.None) { field.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\a\")); field.Arguments.Add(new FieldArgument(FieldArgumentType.Number, ((int)attributes).ToString())); } return field; } } // Usage with combined attributes DatabaseTableAttributes combinedAttributes = DatabaseTableAttributes.Borders | DatabaseTableAttributes.Shading | DatabaseTableAttributes.HeadingRows; FieldInstruction dbField = DatabaseFieldGenerator.CreateDatabaseField( \"Data Source=server;Initial Catalog=database;\", \"SELECT Name, Age, Salary FROM Employees\", DatabaseTableFormat.Professional, combinedAttributes ); Console.WriteLine($\"Database field: {dbField}\"); Console.WriteLine($\"Attributes value: {(int)combinedAttributes}\"); // Shows bitwise combination Frame Targets and Country Regions using OpenLanguage.WordprocessingML.FieldInstruction; public class HyperlinkFieldGenerator { public static FieldInstruction CreateHyperlinkWithTarget(string url, string displayText, FrameTarget target) { var field = new FieldInstruction(\"HYPERLINK\"); field.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, url)); field.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, displayText)); // Add frame target field.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\t\")); field.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, FrameTargetUtils.FrameTargetText(target))); return field; } public static FieldInstruction CreateLocalizedAddressBlock(CountryRegion excludedCountry) { var field = new FieldInstruction(\"ADDRESSBLOCK\"); // Exclude specific country from address block field.Arguments.Add(new FieldArgument(FieldArgumentType.Switch, \"\\e\")); field.Arguments.Add(new FieldArgument(FieldArgumentType.StringLiteral, excludedCountry.ToString())); return field; } } // Usage FrameTarget[] targets = { FrameTarget.Blank, FrameTarget.Self, FrameTarget.Top }; foreach (var target in targets) { FieldInstruction hyperlink = HyperlinkFieldGenerator.CreateHyperlinkWithTarget( \"https://example.com\", \"Example Link\", target ); Console.WriteLine($\"Target {target}: {hyperlink}\"); } // Country-specific address block FieldInstruction addressBlock = HyperlinkFieldGenerator.CreateLocalizedAddressBlock(CountryRegion.UnitedStates); Console.WriteLine($\"Address block excluding US: {addressBlock}\"); This comprehensive example demonstrates how to work with the various data types, validation classes, and enumerations provided by the OpenLanguage WordprocessingML system for robust document processing applications."
  },
  "index.html": {
    "href": "index.html",
    "title": "OpenLanguage Documentation | OpenLanguage Documentation",
    "summary": "OpenLanguage Documentation Welcome to the OpenLanguage project documentation. Overview OpenLanguage is a library for working with Office Open XML Domain-specific Languages, providing lexers, parsers, and other processing tools for various DSLs used in Open Office XML. API Reference Browse the API documentation for detailed information about classes, methods, and interfaces. Getting Started To get started with OpenLanguage, see the README file in the project root."
  }
}